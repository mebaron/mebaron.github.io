{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/rsa/rsa1.svg","path":"images/rsa/rsa1.svg","modified":1,"renderable":0},{"_id":"source/images/rsa/rsa2.svg","path":"images/rsa/rsa2.svg","modified":1,"renderable":0},{"_id":"source/images/rsa/rsa3.svg","path":"images/rsa/rsa3.svg","modified":1,"renderable":0},{"_id":"source/images/rsa/rsa4.svg","path":"images/rsa/rsa4.svg","modified":1,"renderable":0},{"_id":"source/images/rsa/rsa7.svg","path":"images/rsa/rsa7.svg","modified":1,"renderable":0},{"_id":"source/images/rsa/rsa5.svg","path":"images/rsa/rsa5.svg","modified":1,"renderable":0},{"_id":"source/images/rsa/rsa6.svg","path":"images/rsa/rsa6.svg","modified":1,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/baron.png","path":"img/baron.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon-16x16.png","path":"img/favicon-16x16.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon-32x32.png","path":"img/favicon-32x32.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/top.jpg","path":"img/top.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"d0411f1b84158f780b3b65453bdb30495100ca6f","modified":1703080087320},{"_id":"source/_posts/1.hello-world.md","hash":"8a2222d89d5e9666e2540a33c7ccc423fa2f4d15","modified":1703080865774},{"_id":"source/_posts/10.多重背包问题-go实现.md","hash":"f89c4815a1f5111db1469cadbc8764788188aee2","modified":1703080903275},{"_id":"source/_posts/15.动态主机配置协议DHCP.md","hash":"694bc6af067aba569c97bfa5fa14bcb8268b77d5","modified":1703485836516},{"_id":"source/_posts/14.TCP的三次握手和四次挥手.md","hash":"b27579f74253937e901a830c96b3001310d012c5","modified":1703495666246},{"_id":"source/_posts/16.域名系统DNS.md","hash":"9cdc6ab2355623e2531db5c36825ba05e08f21da","modified":1703488095564},{"_id":"source/_posts/17.超文本传输协议HTTP.md","hash":"8d402d289d1bd5a55b3a54fdfe03cfafe9ddedcf","modified":1703489363180},{"_id":"source/_posts/12.centos系统安装containerd.md","hash":"1117920c48d5a2ae1435ddc293aa199c2d03a4ef","modified":1703080911298},{"_id":"source/_posts/11.使用kubeadm搭建k8s集群.md","hash":"923fefe853fd30ed8d255e48549aa8a862db24a8","modified":1703080907372},{"_id":"source/_posts/2.使用hexo搭建个人博客.md","hash":"ada3653b6784a52c70e737ed101e1a164a2044cb","modified":1703130501399},{"_id":"source/_posts/3.next主题美化配置.md","hash":"184bde56c1d4ad95898ed87c059b8e04ea10db05","modified":1703495749622},{"_id":"source/_posts/4.nodejs版本管理工具nvm的使用.md","hash":"81b2848116368c7901e79dc4914e43032c5a95fa","modified":1703080878539},{"_id":"source/_posts/5.七层OSI模型.md","hash":"f84a96d5aa92da669932207752c17066a0348c93","modified":1703495681749},{"_id":"source/_posts/13.k8s-apiserver证书添加新地址.md","hash":"0b3aa4109305a6bb6fe7e27d3b0e97a326266191","modified":1703080934213},{"_id":"source/_posts/6.go交叉编译-Mac-Linux-Windows.md","hash":"1ad169493d3255de0b42b08e9661da0145054aeb","modified":1703130494369},{"_id":"source/_posts/7.dd大牛的《背包九讲》.md","hash":"66d55eaac83dc3af64f5f5f2ba8b96fea250b500","modified":1703080891181},{"_id":"source/_posts/9.完全背包问题-go实现.md","hash":"c351361139261993db1fce6fad4c72bfb27c9e22","modified":1703080899332},{"_id":"source/_posts/8.01背包问题-go实现.md","hash":"12d4775a9f4659c4dd2742a62e0aa4fa54a712d1","modified":1703080895177},{"_id":"source/tags/index.md","hash":"304f8f4c5803458987e8542701082b341dd04ff8","modified":1703080087330},{"_id":"source/about/index.md","hash":"7f28a3022d64789056410e4ddfa4ff91d1913c64","modified":1703080087326},{"_id":"source/categories/index.md","hash":"1af9311c3e83a64dc21a231ed774d44aa0cc2a7b","modified":1703080087327},{"_id":"source/images/rsa/rsa1.svg","hash":"52febf3089c3dd01e38d7fcd08fc8fd92bd423eb","modified":1703080087328},{"_id":"source/images/rsa/rsa2.svg","hash":"f6b207d32f5425e1fcd2ff547229eca9f7850a83","modified":1703080087328},{"_id":"source/images/rsa/rsa3.svg","hash":"9a5f337decb0dddf2469c8c2127ec779c2718564","modified":1703080087328},{"_id":"source/images/rsa/rsa4.svg","hash":"61c4b1358563f5cbbf9869312b60aa0941631dfa","modified":1703080087329},{"_id":"source/images/rsa/rsa7.svg","hash":"1761f0ccdb3497b345d2face4d5dbdc3d103e2a3","modified":1703080087330},{"_id":"source/images/rsa/rsa6.svg","hash":"e9ce22866f45584143034c3df640c3d7e59fcf97","modified":1703080087329},{"_id":"source/images/rsa/rsa5.svg","hash":"7ed7911b47e70c862be4ef3ee987ca3a46ad7b02","modified":1703080087329},{"_id":"themes/butterfly/package.json","hash":"806ede300bb0d8a12b23af1d64a639ad09cb29f9","modified":1703071927860},{"_id":"themes/butterfly/README.md","hash":"4e01b47448d9f3a02afc04eef644e2321253f6f4","modified":1703071927813},{"_id":"themes/butterfly/README_CN.md","hash":"148da187d16033624ceccce8b8561835296f5a5a","modified":1703071927813},{"_id":"themes/butterfly/languages/default.yml","hash":"90a6dc361de67532437d819a55ec64945ca5404b","modified":1703071927815},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1703071927813},{"_id":"themes/butterfly/plugins.yml","hash":"3b3b5fa56c0211a52530a99a69137027245c21b0","modified":1703071927861},{"_id":"themes/butterfly/languages/en.yml","hash":"af5603b1a888f167dc80be6d53a19437b5cf6bef","modified":1703071927815},{"_id":"themes/butterfly/_config.yml","hash":"421b77b99c85035f34183ff14cbfbc4dff1a3078","modified":1703071927814},{"_id":"themes/butterfly/layout/archive.pug","hash":"bb32c9c476372de747dfa563b83f77d7a917a77d","modified":1703071927816},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1703071927817},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1703071927859},{"_id":"themes/butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1703071927859},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1703071927860},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"5004faee365139521f161babd66649a8107e4008","modified":1703071927815},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7b4831ae8f8f8c55dd1b856781210c517c63e6dd","modified":1703071927811},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1703071927811},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"03629d1d13a7be09d4933aa5dc0dcbe45e79140c","modified":1703071927816},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1703071927861},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1703071927862},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1703071927862},{"_id":"themes/butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1703071927863},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"351df17e06bb5c5788cd36105ecaa849d43edcce","modified":1703071927863},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"e196a99733d7f90899bceed5d12488e8234817d5","modified":1703071927864},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1703071927864},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"860f967ecf3c6a6ea785b560a7aae4d0757cd18a","modified":1703071927865},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a8eef3f37428436554f58a2b6bac7c255fbdf38d","modified":1703071927865},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1703071927866},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"96f861151e3b889ef0ffe78821d489ad2625ee43","modified":1703071927866},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1703071927859},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"6e34b565ea013812d5e363b6de5fa1f9078d4e12","modified":1703071927811},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"7caf549810f971c34196fb9deac2d992545bdff9","modified":1703071927867},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"d5c7e61257b08a9648404f6f48ce4d471cd5fa55","modified":1703071927867},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"e2a8a09bfe47da26eab242a36f516e6c452c799a","modified":1703071927868},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1703071927868},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"821e973d41f7b3b64cde91e0e836ea49c43e3c06","modified":1703071927869},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1703071927812},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"93229d44b35b9da92e647b89d6d3087085974a29","modified":1703071927869},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1703071927870},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"418684993a3a3a2ac534257a2d9ecbcead6808c1","modified":1703071927870},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"512c68a22ae4a58d6a6b24b368a0c00c2ccb4fcb","modified":1703071927871},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"365db87ddfc582bf8c15cb440c48bed95106e4b1","modified":1703071927871},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"19773218877281ccffed921431e87148413a7c20","modified":1703071927871},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"1acefc59ead75ebd8cafee36efc7da4fa426d088","modified":1703071927872},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"5c2a07df5874b5377540884e4da14dd21489378f","modified":1703071927872},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"5cb273e95846874e3a58074074c501df23c5e912","modified":1703071927873},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"830b1d592278b9f676df0cf9a91b1eeda2456aec","modified":1703071927873},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"ffc62222f8d7b4d44c1c0726c8a08824a2201039","modified":1703071927873},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4526c75e5bf84609d67e92b6af3524bcb278e852","modified":1703071927874},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1703071927812},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1703071927817},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1703071927818},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1703071927818},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1703071927824},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1703071927830},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"ecec62305aaa596bb1dfbb46c13d06fb5a9628cf","modified":1703071927818},{"_id":"themes/butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1703071927896},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"db275f7fbe4438b54cd813b695f4834e10aa234f","modified":1703071927829},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1703071927828},{"_id":"themes/butterfly/source/css/var.styl","hash":"152b6bd4b6285165541a71f5a1c913f8ee6a602b","modified":1703071927896},{"_id":"themes/butterfly/source/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1703071927899},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1703071927897},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1703071927898},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1703071927901},{"_id":"themes/butterfly/source/img/favicon-16x16.png","hash":"4dfc8fcd13cd1f7fc0c3bb0fb8a96f082c386d39","modified":1703043978000},{"_id":"themes/butterfly/source/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1703071927901},{"_id":"themes/butterfly/source/img/baron.png","hash":"3df38d4aa92a1d945343e95e8308c9f63941c31c","modified":1703072492543},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1703071927898},{"_id":"themes/butterfly/source/img/favicon-32x32.png","hash":"1d4b6f9c7da190bb885237540cca4b348dbc82f2","modified":1703043978000},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1703071927819},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1703071927819},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"5208fe1e75d97a05fd9bdd6cc53c59d8b741b94b","modified":1703071927821},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1703071927821},{"_id":"themes/butterfly/source/img/favicon.ico","hash":"1420268f9fa1ca9316b2324ff0c00d78c0c260c8","modified":1703043978000},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1703071927821},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1703071927820},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1703071927825},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1703071927825},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1703071927820},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1703071927825},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1703071927822},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1703071927824},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1703071927823},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"63fed4548367a3663cdbaffa1df48167b0a2397b","modified":1703071927820},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1703071927822},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1703071927827},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1703071927826},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1703071927827},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1703071927828},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"50d1b08367f709e5416140043933e79cd8d77559","modified":1703071927826},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"a096ff8eb6b2a22395be881f827ff2a686ba5596","modified":1703071927829},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1703071927831},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"a5c7d362ae63474c1a4e3eb5cd09804b3684e984","modified":1703071927823},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1703071927849},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1703071927827},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1703071927850},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"5574804fdea5edf7fd52aad2caf030614d5e7f2f","modified":1703071927829},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"1d39670ee6225f85f5c53bf5c84f3fd6e19290e8","modified":1703071927843},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"12e57491e94fa00d953bbda9db0b6d6169e2358c","modified":1703071927849},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1703071927854},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1703071927854},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f19694a42dbe28eda4b39a1696e8fbcd277bc76c","modified":1703071927875},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1703071927854},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1703071927853},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1703071927855},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1703071927856},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1703071927856},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"c8ff6ddd5bfe1190b7b8056b68ce41114fd79dcb","modified":1703071927876},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1703071927858},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1703071927855},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1703071927857},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"3ec354778f6a4ac97fb64d5629c83b293ccceb5e","modified":1703071927856},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1703071927858},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1703071927880},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"66f7a8b0cebc05c575ec3cb70b08d6854029d87a","modified":1703071927858},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"fad650f88778b33a6358e38cf50dfafc0974d28f","modified":1703071927880},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1703071927857},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1703071927857},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1703071927881},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"134811b2d696f9ed2c0cd578f3886f1c60770c0a","modified":1703071927881},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"029eebbdcb3c682780d1de629fa06858cbe9782b","modified":1703071927882},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1703071927882},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"f845b9b4efdee750f70c023aab27432611f83059","modified":1703071927884},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1703071927883},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"b7a6a585dbc38d177c9aba75df3a467415d0488a","modified":1703071927885},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1703071927885},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"ef0fd5e3fe04a50e4386bb3f22e2ccd9290c6653","modified":1703071927883},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"0db591a1f4ed5adcb8668a549bbee5c9d62682cf","modified":1703071927886},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1703071927884},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"e549d24ad81a7d93326a509ff8dcfcc58c80729e","modified":1703071927886},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d6cf26ffb8a0343eda1cde65b6b73b0ddbe8fcfc","modified":1703071927884},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1703071927896},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1703071927890},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1703071927890},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"961589da3c0a532c4709a4a4ea96bd579257f766","modified":1703071927891},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1703071927887},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1703071927887},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1703071927888},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"4dcd468e4d11a0ac75406162678feffcd89fee00","modified":1703071927876},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1703071927888},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1703071927879},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1703071927889},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1703071927888},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1703071927893},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d4ebc41b5c855dd75f47de7345d62f85ce7cf073","modified":1703071927889},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1703071927893},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1703071927892},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1703071927894},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1703071927893},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"5cddbb5f4eae695a26685e415d821b523e0f17bf","modified":1703071927892},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1703071927900},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"909bb5079b26b6ee68177919f522566503654058","modified":1703071927894},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1703071927900},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"f7299f9fef5bf94bb58c8cd3be8ee660ad2f9cd4","modified":1703071927831},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"2d02e52b360f6e6cae47c293ae57ed78e2554663","modified":1703071927895},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1703071927844},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1703071927844},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1703071927895},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1703071927831},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1703071927845},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1703071927832},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"6b67982bb7a3713b5bffd6a23ba2810425c504d0","modified":1703071927845},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1703071927833},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"c5f7081ca29db8cc80f808dfc29e36d5fa22fd7e","modified":1703071927832},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1703071927834},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3a5ccfc69bd8ccb4b8f3ce3502023f7914f2a022","modified":1703071927834},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1703071927833},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1703071927834},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1703071927833},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1703071927835},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1703071927836},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1703071927837},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1703071927836},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1703071927837},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1703071927836},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"5d5b73920843ce858df6e3b03325d5d1f43cdab3","modified":1703071927838},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"62f16a602e57e5f7f7c5249dd37b42d436dc032a","modified":1703071927838},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"46aec6466959baec1c3d71a5dbc510fbeb00c91d","modified":1703071927839},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"3bc4c1b91568561f0491bdac65b75aa0bfd01f27","modified":1703071927839},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"2d7b0b09678adba09481e3152e0b32962677f650","modified":1703071927839},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0d378ee8a671982a46213a4bfb223b4f3409aea9","modified":1703071927840},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"a9709905593d960954e2dd572f09f48a6c2b1ef7","modified":1703071927840},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1703071927841},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"63cea2b5c8f7b59f5919379d61a2bb2ce8ed7623","modified":1703071927841},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"ad7f1ee2e67deee0706e0838b5724dd37fc30a34","modified":1703071927843},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f15699abb8c7a255aabad0222ae53eee387c66a3","modified":1703071927841},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"9a3617f5e90c4e4176aa2ee2e904c22466e9663b","modified":1703071927846},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"894bf60ff5170cf1e4f276a8cedaf8301bceb824","modified":1703071927842},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1995a654ba7ad62775a0a6e2922209cd1a85f2e3","modified":1703071927842},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"46865e3f52096acb07d0212174b4e8751b123aea","modified":1703071927843},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"de2c4d02b520dd49a0a59fc0f33295e5bbb2c624","modified":1703071927848},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"2609bc2656aaaa9b59e8d575e711776512a62192","modified":1703071927846},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"1f9f51023e9e33081c2add2ca73643c0edc5e9d5","modified":1703071927848},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"e434bcfb7fee59c7be2dac58a9b3a1989f21caa8","modified":1703071927847},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1703071927850},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1703071927851},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1703071927852},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"3ba49cfe186e9ca05faf9f0d0113611ec47e9b38","modified":1703071927852},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1703071927853},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1703071927847},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"24804ab6da9727ed793655c1262fa3f1a9746f70","modified":1703071927849},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1703071927877},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1703071927877},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"4104f96faa6040f111ebfb9a90eeb470857c3b86","modified":1703071927848},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1703071927878},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"b928be14d1b47a9fadb1bcc5f5072a7328752d4b","modified":1703071927851},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1703071927878},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3335024ba91f55ccf3858571b7898f46881c455c","modified":1703071927852},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"25914321762e30aacc610bc4dfb9de3e1cb556a3","modified":1703071927879},{"_id":"themes/butterfly/source/img/top.jpg","hash":"a08f1a9d97df2d94d3a22d6077bb9ffd2472e22c","modified":1558454326000},{"_id":"public/search.xml","hash":"c7c894025d98b269029428287628757ec29993e9","modified":1703495853391},{"_id":"public/tags/index.html","hash":"57eced3b5c70f450eee9f1bd5862229a140016b6","modified":1703495853391},{"_id":"public/about/index.html","hash":"520fb1f44e8c1b8947ae24c2b16181b62afb649c","modified":1703495853391},{"_id":"public/categories/index.html","hash":"e494b29f2e7906256b0523f72d03bc4c52ae90ba","modified":1703495853391},{"_id":"public/2023/12/25/17.超文本传输协议HTTP/index.html","hash":"b0a5da792bd4635f85364ac70c00f744bdd60fbd","modified":1703495853391},{"_id":"public/2023/12/25/16.域名系统DNS/index.html","hash":"bb06413949abcb4805028362fe11dbbc0e38ec4d","modified":1703495853391},{"_id":"public/2023/12/25/15.动态主机配置协议DHCP/index.html","hash":"2d6486ca00cfbe6c1a722fe2784ffd247fbc485a","modified":1703495853391},{"_id":"public/2023/12/22/14.TCP的三次握手和四次挥手/index.html","hash":"31fae074d0b7506f40dc1c99337d3e0a9adcf108","modified":1703495853391},{"_id":"public/2023/12/21/5.七层OSI模型/index.html","hash":"89a470267823ad4aebfdceb3990efbef40621788","modified":1703495853391},{"_id":"public/2023/12/20/1.hello-world/index.html","hash":"d2db3f361293030ca2fd3b765768e0a8bc0fa4fb","modified":1703495853391},{"_id":"public/2023/03/28/13.k8s-apiserver证书添加新地址/index.html","hash":"377a0b974f841ffb506f44f154094d105ac3a027","modified":1703495853391},{"_id":"public/2023/03/28/12.centos系统安装containerd/index.html","hash":"eaa0baaaac7166261d675b51ddb23d302e79fd47","modified":1703495853391},{"_id":"public/2023/03/28/11.使用kubeadm搭建k8s集群/index.html","hash":"e5bc5b4e907f1928bd518a1cd1bcb4d2337089fb","modified":1703495853391},{"_id":"public/2023/02/27/10.多重背包问题-go实现/index.html","hash":"cfa8d63b5b70b3d633091df57e9ba4fb2b379612","modified":1703495853391},{"_id":"public/2023/02/27/9.完全背包问题-go实现/index.html","hash":"b6d2eecd7e0fdea04a9118485346bf70dc1716a9","modified":1703495853391},{"_id":"public/2023/02/27/8.01背包问题-go实现/index.html","hash":"c34a57873546ea8d80192d57d0d78e810bc30028","modified":1703495853391},{"_id":"public/2023/02/25/7.dd大牛的《背包九讲》/index.html","hash":"14f7b5b72d15ba98f7ada6f91711920d0a7a7aec","modified":1703495853391},{"_id":"public/2023/02/25/6.go交叉编译-Mac-Linux-Windows/index.html","hash":"6e4ca231f9f4953931579e57f350c9e822b11e62","modified":1703495853391},{"_id":"public/2023/02/16/4.nodejs版本管理工具nvm的使用/index.html","hash":"bda1c62e86484a5354ea82779d26e4d4975dde6b","modified":1703495853391},{"_id":"public/2021/12/11/2.使用hexo搭建个人博客/index.html","hash":"39744e9561e8f73162fd9acd16875894f6bb98f6","modified":1703495853391},{"_id":"public/2021/12/11/3.next主题美化配置/index.html","hash":"821ff2ec7a7de4fe70e4d6944580c8071625a470","modified":1703495853391},{"_id":"public/index.html","hash":"bdb9497fb84ef3b5e099accd8404897a8ede17dc","modified":1703495853391},{"_id":"public/page/2/index.html","hash":"1193dac3d45e078e545ce383edef0cf96074c83e","modified":1703495853391},{"_id":"public/archives/index.html","hash":"de5a3257abad8e5d694d859ac6c0fd83b36b75a1","modified":1703495853391},{"_id":"public/archives/page/2/index.html","hash":"ed0808371910e83c5e7f3b2275c8122dd81522e8","modified":1703495853391},{"_id":"public/archives/2021/index.html","hash":"cb7d5b4c71f9e18541ffc2d86e28c16045ab8fe3","modified":1703495853391},{"_id":"public/archives/2021/12/index.html","hash":"386d38842941f79af2057c473f61dded19bf669e","modified":1703495853391},{"_id":"public/archives/2023/index.html","hash":"6a47a9f0c69445af0a18fa0866347c2b1b2b7769","modified":1703495853391},{"_id":"public/archives/2023/page/2/index.html","hash":"072397b877cc421f0993d87283b564b5c4690066","modified":1703495853391},{"_id":"public/archives/2023/02/index.html","hash":"a5d4ea721da07a72f062e6dea4a76b6bb9cdb705","modified":1703495853391},{"_id":"public/archives/2023/03/index.html","hash":"5d1528fd5f80e8922a63c7feedb0a38e1c0941de","modified":1703495853391},{"_id":"public/archives/2023/12/index.html","hash":"0c20d65758639f98dbbec5f67f69986e0895bb0d","modified":1703495853391},{"_id":"public/categories/技术/index.html","hash":"5fac77ab377c6f15ea9c51cffce483e8a027012b","modified":1703495853391},{"_id":"public/categories/技术/page/2/index.html","hash":"0929e88cf0a62a443c024d01c4643c575cd821d7","modified":1703495853391},{"_id":"public/categories/技术/算法/index.html","hash":"3f6eb9989149f296a90d9d1a3d4b136069b4eb44","modified":1703495853391},{"_id":"public/categories/JavaScript/index.html","hash":"633f1e11389c0a15c1802e4fc6004e78212a7e28","modified":1703495853391},{"_id":"public/categories/JavaScript/工具使用/index.html","hash":"f96819f19dcbe6fe2c37a1f9ca2821f033b3e64a","modified":1703495853391},{"_id":"public/tags/开始/index.html","hash":"15dc86f39e191a62a431be494783eb3d78e309cb","modified":1703495853391},{"_id":"public/tags/背包问题/index.html","hash":"ab3e326e40f2272a99309d341fad2c37f608e65b","modified":1703495853391},{"_id":"public/tags/go/index.html","hash":"eccb7b6ee726049606ebe0b6fbd9a3a0ad218026","modified":1703495853391},{"_id":"public/tags/k8s/index.html","hash":"1b9004277fc68a6f4b14a18f0db4e84283b7f13e","modified":1703495853391},{"_id":"public/tags/kubeadm/index.html","hash":"21124de3eeef69a21e87b3cadff56012eabb481f","modified":1703495853391},{"_id":"public/tags/containerd/index.html","hash":"91147a336a218df20b37d8a8c005fceddd179bb8","modified":1703495853391},{"_id":"public/tags/ca/index.html","hash":"e71e7ffb7da21acb082281bf1ec6db202e43161c","modified":1703495853391},{"_id":"public/tags/网络/index.html","hash":"c0b81b8f45b98e46be75f20e3134a43136debaef","modified":1703495853391},{"_id":"public/tags/TCP/index.html","hash":"267d54eb793fc7e7ba1e9a43f74049122582b8d3","modified":1703495853391},{"_id":"public/tags/DHCP/index.html","hash":"b3a97f65b83ff43dcbc429a459ac41576e5dcc84","modified":1703495853391},{"_id":"public/tags/DNS/index.html","hash":"d77adf1102eeca6057c4492af4bac791ad361a1b","modified":1703495853391},{"_id":"public/tags/HTTP/index.html","hash":"39f6769c86b31da3146b54dbecb3d78e4a5906d3","modified":1703495853391},{"_id":"public/tags/hexo/index.html","hash":"fc5c63db812d60b18704ce47ae8dc32fd0c5c0b3","modified":1703495853391},{"_id":"public/tags/next/index.html","hash":"579e3e22f266b3e4c252d2ce746005390e00cb12","modified":1703495853391},{"_id":"public/tags/博客/index.html","hash":"24a05acec3165ce161313d611b6093f4503eb177","modified":1703495853391},{"_id":"public/tags/nodejs/index.html","hash":"a711472e959121fe4d2acba2f6e9a4ede64c5b94","modified":1703495853391},{"_id":"public/tags/nvm/index.html","hash":"4be0d5bdef05ce09e08aadee73166fd3051defd7","modified":1703495853391},{"_id":"public/tags/版本管理/index.html","hash":"010daf2336489819f5246649c981ee04df5252f9","modified":1703495853391},{"_id":"public/tags/osi/index.html","hash":"6a4d4e868f53bcef1648efd258fce9519d6f84e8","modified":1703495853391},{"_id":"public/tags/build/index.html","hash":"d3b5ae96baa140dae829ff1a4073b814a7dc39ae","modified":1703495853391},{"_id":"public/tags/01背包问题/index.html","hash":"e5c91d0ea310b1e31fe55c665fcd6fe7d383e232","modified":1703495853391},{"_id":"public/tags/完全背包/index.html","hash":"80a466c91488ff10e65098ed1b0bd2dc3d573cab","modified":1703495853391},{"_id":"public/tags/算法/index.html","hash":"3d95dc601e26a095d0d3b61c15780d23ff121837","modified":1703495853391},{"_id":"public/tags/背包九讲/index.html","hash":"8019d842dd22d0fb334c89a6dd00f20b4906c33a","modified":1703495853391},{"_id":"public/CNAME","hash":"d0411f1b84158f780b3b65453bdb30495100ca6f","modified":1703495853391},{"_id":"public/images/rsa/rsa1.svg","hash":"52febf3089c3dd01e38d7fcd08fc8fd92bd423eb","modified":1703495853391},{"_id":"public/images/rsa/rsa2.svg","hash":"f6b207d32f5425e1fcd2ff547229eca9f7850a83","modified":1703495853391},{"_id":"public/images/rsa/rsa3.svg","hash":"9a5f337decb0dddf2469c8c2127ec779c2718564","modified":1703495853391},{"_id":"public/images/rsa/rsa4.svg","hash":"61c4b1358563f5cbbf9869312b60aa0941631dfa","modified":1703495853391},{"_id":"public/images/rsa/rsa7.svg","hash":"1761f0ccdb3497b345d2face4d5dbdc3d103e2a3","modified":1703495853391},{"_id":"public/images/rsa/rsa6.svg","hash":"e9ce22866f45584143034c3df640c3d7e59fcf97","modified":1703495853391},{"_id":"public/images/rsa/rsa5.svg","hash":"7ed7911b47e70c862be4ef3ee987ca3a46ad7b02","modified":1703495853391},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1703495853391},{"_id":"public/img/baron.png","hash":"3df38d4aa92a1d945343e95e8308c9f63941c31c","modified":1703495853391},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1703495853391},{"_id":"public/img/favicon-16x16.png","hash":"4dfc8fcd13cd1f7fc0c3bb0fb8a96f082c386d39","modified":1703495853391},{"_id":"public/img/favicon-32x32.png","hash":"1d4b6f9c7da190bb885237540cca4b348dbc82f2","modified":1703495853391},{"_id":"public/img/favicon.ico","hash":"1420268f9fa1ca9316b2324ff0c00d78c0c260c8","modified":1703495853391},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1703495853391},{"_id":"public/css/index.css","hash":"6d5f2cacd1bfdbadd83ac8d04561d7529b5bb46e","modified":1703495853391},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1703495853391},{"_id":"public/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1703495853391},{"_id":"public/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1703495853391},{"_id":"public/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1703495853391},{"_id":"public/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1703495853391},{"_id":"public/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1703495853391},{"_id":"public/img/top.jpg","hash":"a08f1a9d97df2d94d3a22d6077bb9ffd2472e22c","modified":1703495853391}],"Category":[{"name":"技术","_id":"clqkpg59p0004m0fvgpd80q8j"},{"name":"算法","parent":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a0000mm0fvgxaz500y"},{"name":"JavaScript","_id":"clqkpg5a5000zm0fv16x86gso"},{"name":"工具使用","parent":"clqkpg5a5000zm0fv16x86gso","_id":"clqkpg5a8001am0fv7msddjrh"}],"Data":[],"Page":[{"title":"标签","date":"2021-12-11T07:57:06.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-12-11 15:57:06\ntype: \"tags\"\n---\n","updated":"2023-12-20T13:48:07.330Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clqkpg59i0000m0fv2b7w2xoc","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"关于本站","date":"2021-12-11T07:56:41.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于本站\ndate: 2021-12-11 15:56:41\n---\n","updated":"2023-12-20T13:48:07.326Z","path":"about/index.html","comments":1,"layout":"page","_id":"clqkpg59n0002m0fvg0io3w2u","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"分类","date":"2021-12-11T07:57:20.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-12-11 15:57:20\ntype: \"categories\"\n---\n","updated":"2023-12-20T13:48:07.327Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clqkpg59r0006m0fv8jt098gd","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""}],"Post":[{"title":"Hello World","type":"tags","_content":"## hello world\n\n","source":"_posts/1.hello-world.md","raw":"---\ntitle: Hello World\ntags:\n- 开始\ncategories:\n- 技术\ntype: \"tags\"\n---\n## hello world\n\n","slug":"1.hello-world","published":1,"date":"2023-12-20T13:48:07.320Z","updated":"2023-12-20T14:01:05.774Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg59l0001m0fvcgdc42xr","content":"<h2 id=\"hello-world\"><a href=\"#hello-world\" class=\"headerlink\" title=\"hello world\"></a>hello world</h2>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"hello-world\"><a href=\"#hello-world\" class=\"headerlink\" title=\"hello world\"></a>hello world</h2>"},{"title":"多重背包问题(go实现)","date":"2023-02-27T12:41:35.000Z","type":"tags","_content":"\n# 多重背包问题\n\n## 1.问题\n\n有 N 种物品和一个容量是 V 的背包。\n\n第 i 种物品最多有 si 件，每件体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。\n输出最大价值。\n\n输入格式\n\n​\t第一行两个整数，N，V；N，V，用空格隔开，分别表示物品种数和背包容积。\n\n​\t接下来有 N 行，每行三个整数 vi,wi,si；vi,wi,si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。\n\n输出格式\n\n​\t输出一个整数，表示最大价值。\n\n数据范围\n\n​\t0<N,V≤1000<N,V≤100\n​\t0<vi,wi,si≤100\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n","source":"_posts/10.多重背包问题-go实现.md","raw":"---\ntitle: 多重背包问题(go实现)\ndate: 2023-02-27 20:41:35\ntags:\n- 背包问题\n- go\ncategories:\n- 技术\n- 算法\ntype: \"tags\"\n---\n\n# 多重背包问题\n\n## 1.问题\n\n有 N 种物品和一个容量是 V 的背包。\n\n第 i 种物品最多有 si 件，每件体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。\n输出最大价值。\n\n输入格式\n\n​\t第一行两个整数，N，V；N，V，用空格隔开，分别表示物品种数和背包容积。\n\n​\t接下来有 N 行，每行三个整数 vi,wi,si；vi,wi,si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。\n\n输出格式\n\n​\t输出一个整数，表示最大价值。\n\n数据范围\n\n​\t0<N,V≤1000<N,V≤100\n​\t0<vi,wi,si≤100\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n","slug":"10.多重背包问题-go实现","published":1,"updated":"2023-12-20T14:01:43.275Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg59o0003m0fv8i4rgmds","content":"<h1 id=\"多重背包问题\"><a href=\"#多重背包问题\" class=\"headerlink\" title=\"多重背包问题\"></a>多重背包问题</h1><h2 id=\"1-问题\"><a href=\"#1-问题\" class=\"headerlink\" title=\"1.问题\"></a>1.问题</h2><p>有 N 种物品和一个容量是 V 的背包。</p>\n<p>第 i 种物品最多有 si 件，每件体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。<br>输出最大价值。</p>\n<p>输入格式</p>\n<p>​    第一行两个整数，N，V；N，V，用空格隔开，分别表示物品种数和背包容积。</p>\n<p>​    接下来有 N 行，每行三个整数 vi,wi,si；vi,wi,si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。</p>\n<p>输出格式</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>​    0&lt;N,V≤1000&lt;N,V≤100<br>​    0&lt;vi,wi,si≤100</p>\n<span id=\"more\"></span>\n\n<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2>","site":{"data":{}},"cover":false,"excerpt":"<h1 id=\"多重背包问题\"><a href=\"#多重背包问题\" class=\"headerlink\" title=\"多重背包问题\"></a>多重背包问题</h1><h2 id=\"1-问题\"><a href=\"#1-问题\" class=\"headerlink\" title=\"1.问题\"></a>1.问题</h2><p>有 N 种物品和一个容量是 V 的背包。</p>\n<p>第 i 种物品最多有 si 件，每件体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。<br>输出最大价值。</p>\n<p>输入格式</p>\n<p>​    第一行两个整数，N，V；N，V，用空格隔开，分别表示物品种数和背包容积。</p>\n<p>​    接下来有 N 行，每行三个整数 vi,wi,si；vi,wi,si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。</p>\n<p>输出格式</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>​    0&lt;N,V≤1000&lt;N,V≤100<br>​    0&lt;vi,wi,si≤100</p>","more":"<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2>"},{"title":"11.使用kubeadm搭建k8s集群","date":"2023-03-28T07:54:57.000Z","type":"tags","_content":"\n# 使用kubeadm搭建k8s集群\n\n## 1.安装环境准备\n\n### 1.1.云服务器准备\n\n|  IP地址  |    节点角色     | CPU  | Memory | Hostname |\n| :------: | :-------------: | :--: | :----: | :------: |\n| 10.0.1.9 | master and etcd | >=2c |  >=2G  |  master  |\n| 10.0.1.5 |      node       | >=2c |  >=2G  |  node1   |\n\n### 1.2.软件版本\n\n|  系统类型  | Kubernetes版本 | docker版本 | kubeadm版本 | kubectl版本 | kubelet版本 |\n| :--------: | :------------: | :--------: | :---------: | :---------: | :---------: |\n| CentOS 7.6 |    v1.17.4     | 19.03.8-ce |   v1.17.4   |   v1.17.4   |   v1.17.4   |\n\n<!--more-->\n\n### 1.3.云服务器环境初始化操作\n\n#### 1.3.1.设置主机名 \n\n```bash\n#master是设置名称 2台设备分别是 master node1\nhostnamectl set-hostname master \n```\n\n#### 1.3.2.修改host文件 \n\n```bash\nvim /etc/hosts\n\n#添加\n10.0.1.9 master\n10.0.1.5 node1\n```\n\n#### 1.3.3.关闭selinux\n\n```bash\n#实时动态关闭\nsetenforce 0 \n\n#禁止重启后自动开启\nsed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config \n```\n\n#### 1.3.4.关闭交换分区\n\n```bash\n#实时动态关闭\nswapoff -a \n\n#禁止重启后自动开启\nsed -i '/ swap / s/^/#/' /etc/fstab \n```\n\n#### 1.3.5.网络配置文件\n\n```bash\ncat > /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nvm.swappiness=0\n\n#退出 按 Ctrl + D\n\n#执行该命令 如果不执行就会在应用k8s.conf时出现加载错误\nmodprobe br_netfilter  \n\n#应用配置文件\nsysctl -p /etc/sysctl.d/k8s.conf\n```\n\n#### 1.3.6.配置资源地址\n\n```bash\nyum install wget -y  #安装wget命令行\n\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  #配置yum源\n\nyum makecache #更新缓存\n\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo #配置docker下载的地址\n```\n\n#### 1.3.7.安装Docker\n\n```bash\nyum list docker-ce --showduplicates|sort -r  #展示版本列表\n\nyum install -y docker-ce  #默认安装最新版，也可以指定版本下载\n\nsystemctl start docker #启动docker\nsystemctl enable docker #将docker加入到开机启动\n\ndocker version #查看docker启动情况 和版本信息\n\n# 如果安装的docker版本使用的cgroups，按以下方式修改为systemd\nvim /etc/docker/daemon.json\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"registry-mirrors\": [\"https://mj9kvemk.mirror.aliyuncs.com\"]\n}\n\nsystemctl daemon-reload\nsystemctl restart docker\n```\n\n#### 1.3.8.配置k8s资源的下载地址\n\n```bash\ncat <<EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n```\n\n#### 1.3.9.安装 kubelet kubeadm kubectl\n\n```bash\n# 默认安装最新版本，也可以指定版本\nyum install -y kubelet kubeadm kubectl\n\n#设置kubelet开机启动\nsystemctl enable kubelet.service \n```\n\n## 2.开始初始化 （只在主节点Master上面操作）\n\n### 2.1.创建初始化配置文件\n\n```\nkubeadm config print init-defaults > kubeadm-config.yaml\n```\n\n### 2.2.根据各自部署环境修改配置文件\n\n```yaml\napiVersion: kubeadm.k8s.io/v1beta2\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: abcdef.0123456789abcdef\n  ttl: 24h0m0s\n  usages:\n  - signing\n  - authentication\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: 10.0.1.9\n  bindPort: 6443\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: k8s1\n  taints:\n  - effect: NoSchedule\n    key: node-role.kubernetes.io/master\n---\napiServer:\n  timeoutForControlPlane: 4m0s\napiVersion: kubeadm.k8s.io/v1beta2\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ncontrollerManager: {}\ndns:\n  type: CoreDNS\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: gcr.azk8s.cn/google-containers\nkind: ClusterConfiguration\nkubernetesVersion: v1.17.3\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: \"192.168.0.0/16\"\n  serviceSubnet: 10.96.0.0/12\nscheduler: {}\n```\n\n配置说明：\n**imageRepository**：指定为业务所需的镜像仓库地址\n**podSubnet**：指定的IP地址段与后续部署的网络插件相匹配。（部署flannel插件，配置为10.244.0.0/16；部署calico插件，配置为192.168.0.0/16）\n\n### 2.3.开始初始化\n\n```bash\n#只在Master1的主机上面执行 版本信息与你要安装的相同\nkubeadm init --config=kubeadm-config.yaml\n\n#当出现 类似 如下说明master安装成功\nkubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128\n\n#然后执行安装成功提示的命令行，这部分执行你安装成功后的部分，可能每个人的有所不同\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n```\n\n## 3.节点node加入（默认此事上面一步骤 都进行了操作）\n\n```bash\n# 执行master安装成功后的 kubeadm join命令，注意是你自己的，下面是举例\nkubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128\n\n#当出现 类似 如下说明node加入集群成功\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n```\n\n## 4.master节点验证安装进度\n\n```bash\n#命令一 \nkubectl get cs #显示内容如下说明Master安装没问题\nNAME                 STATUS    MESSAGE              ERROR\nscheduler            Healthy   ok                   \ncontroller-manager   Healthy   ok                   \netcd-0               Healthy   {\"health\": \"true\"} \n\n#命令二\nkubectl get pod -n kube-system #查看pod状态，下面只是部分pod内容\nNAME                                   READY   STATUS             RESTARTS   AGE\ncoredns-86c58d9df4-j9g8d               1/1     Running            0          128m\ncoredns-86c58d9df4-pg45w               1/1     Running            0          128m\netcd-k8s1                              1/1     Running            0          127m\nkube-apiserver-k8s1                    1/1     Running            0          127m\nkube-controller-manager-k8s1           1/1     Running            0          127m\n\n\n#在这里你可能发现你的coredns的状态并不是Running，不要着急，这里需要给集群配置网络插件，配置好就自动Running了\n\n#命令三\nkubectl get node #查看节点状态 \nNAME   STATUS   ROLES    AGE    VERSION\nmaster   NoReady    master   131m   v1.17.4\nnode1   NoReady    <none>   93m    v1.17.4\n\n#如果你添加了节点里面看的话,可能还未初始化，显示的是NoReady是因为集群网络插件还未配置。\n```\n\n## 5.安装集群网络插件 (只需要Master安装)\n\n下面两种网络插件任选一种即可。\n\n### 5.1.安装Flannel 网络插件\n\n```bash\n# 获取flannel网络插件配置yaml文件\nwget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n\n# 如果云服务器为多网卡机器，在启动命令中添加：\n\t\t...\n        command:\n        - /opt/bin/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        - --iface=eth0  # 指定使用的相应网卡\n        ...\n\nkubectl apply -f kube-flannel.yml\n\n#安装成功后查看pod\nkubectl get pod -n kube-system\nNAME                                   READY   STATUS             RESTARTS   AGE\ncoredns-86c58d9df4-j9g8d               1/1     Running            0          128m\ncoredns-86c58d9df4-pg45w               1/1     Running            0          128m\netcd-k8s1                              1/1     Running            0          127m\nkube-apiserver-k8s1                    1/1     Running            0          127m\nkube-controller-manager-k8s1           1/1     Running            0          127m\nkube-flannel-ds-amd64-7btlw            1/1     Running            0          91m\nkube-flannel-ds-amd64-9vq42            1/1     Running            0          106m\nkube-flannel-ds-amd64-kdf42            1/1     Running            0          90m\nkube-proxy-dtmfs                       1/1     Running            0          128m\nkube-proxy-p76tc                       1/1     Running            0          90m\nkube-proxy-xgw28                       1/1     Running            0          91m\nkube-scheduler-k8s1                    1/1     Running            0          128m\n\n#全部Running则表示 成功了\n```\n\n### 5.2.安装calico\n\n```bash\n# 获取calico网络插件配置yaml文件\nwget https://docs.projectcalico.org/manifests/calico.yaml\n\nkubectl apply -f calico.yaml\n\n#安装成功后查看pod\nkubectl get pod -n kube-system\n\n#全部Running则表示 成功了\n```\n","source":"_posts/11.使用kubeadm搭建k8s集群.md","raw":"---\ntitle: 11.使用kubeadm搭建k8s集群\ndate: 2023-03-28 15:54:57\ntags:\n- k8s\n- kubeadm\ncategories:\n- 技术\ntype: \"tags\"\n---\n\n# 使用kubeadm搭建k8s集群\n\n## 1.安装环境准备\n\n### 1.1.云服务器准备\n\n|  IP地址  |    节点角色     | CPU  | Memory | Hostname |\n| :------: | :-------------: | :--: | :----: | :------: |\n| 10.0.1.9 | master and etcd | >=2c |  >=2G  |  master  |\n| 10.0.1.5 |      node       | >=2c |  >=2G  |  node1   |\n\n### 1.2.软件版本\n\n|  系统类型  | Kubernetes版本 | docker版本 | kubeadm版本 | kubectl版本 | kubelet版本 |\n| :--------: | :------------: | :--------: | :---------: | :---------: | :---------: |\n| CentOS 7.6 |    v1.17.4     | 19.03.8-ce |   v1.17.4   |   v1.17.4   |   v1.17.4   |\n\n<!--more-->\n\n### 1.3.云服务器环境初始化操作\n\n#### 1.3.1.设置主机名 \n\n```bash\n#master是设置名称 2台设备分别是 master node1\nhostnamectl set-hostname master \n```\n\n#### 1.3.2.修改host文件 \n\n```bash\nvim /etc/hosts\n\n#添加\n10.0.1.9 master\n10.0.1.5 node1\n```\n\n#### 1.3.3.关闭selinux\n\n```bash\n#实时动态关闭\nsetenforce 0 \n\n#禁止重启后自动开启\nsed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config \n```\n\n#### 1.3.4.关闭交换分区\n\n```bash\n#实时动态关闭\nswapoff -a \n\n#禁止重启后自动开启\nsed -i '/ swap / s/^/#/' /etc/fstab \n```\n\n#### 1.3.5.网络配置文件\n\n```bash\ncat > /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nvm.swappiness=0\n\n#退出 按 Ctrl + D\n\n#执行该命令 如果不执行就会在应用k8s.conf时出现加载错误\nmodprobe br_netfilter  \n\n#应用配置文件\nsysctl -p /etc/sysctl.d/k8s.conf\n```\n\n#### 1.3.6.配置资源地址\n\n```bash\nyum install wget -y  #安装wget命令行\n\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  #配置yum源\n\nyum makecache #更新缓存\n\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo #配置docker下载的地址\n```\n\n#### 1.3.7.安装Docker\n\n```bash\nyum list docker-ce --showduplicates|sort -r  #展示版本列表\n\nyum install -y docker-ce  #默认安装最新版，也可以指定版本下载\n\nsystemctl start docker #启动docker\nsystemctl enable docker #将docker加入到开机启动\n\ndocker version #查看docker启动情况 和版本信息\n\n# 如果安装的docker版本使用的cgroups，按以下方式修改为systemd\nvim /etc/docker/daemon.json\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"registry-mirrors\": [\"https://mj9kvemk.mirror.aliyuncs.com\"]\n}\n\nsystemctl daemon-reload\nsystemctl restart docker\n```\n\n#### 1.3.8.配置k8s资源的下载地址\n\n```bash\ncat <<EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n```\n\n#### 1.3.9.安装 kubelet kubeadm kubectl\n\n```bash\n# 默认安装最新版本，也可以指定版本\nyum install -y kubelet kubeadm kubectl\n\n#设置kubelet开机启动\nsystemctl enable kubelet.service \n```\n\n## 2.开始初始化 （只在主节点Master上面操作）\n\n### 2.1.创建初始化配置文件\n\n```\nkubeadm config print init-defaults > kubeadm-config.yaml\n```\n\n### 2.2.根据各自部署环境修改配置文件\n\n```yaml\napiVersion: kubeadm.k8s.io/v1beta2\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: abcdef.0123456789abcdef\n  ttl: 24h0m0s\n  usages:\n  - signing\n  - authentication\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: 10.0.1.9\n  bindPort: 6443\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: k8s1\n  taints:\n  - effect: NoSchedule\n    key: node-role.kubernetes.io/master\n---\napiServer:\n  timeoutForControlPlane: 4m0s\napiVersion: kubeadm.k8s.io/v1beta2\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ncontrollerManager: {}\ndns:\n  type: CoreDNS\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: gcr.azk8s.cn/google-containers\nkind: ClusterConfiguration\nkubernetesVersion: v1.17.3\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: \"192.168.0.0/16\"\n  serviceSubnet: 10.96.0.0/12\nscheduler: {}\n```\n\n配置说明：\n**imageRepository**：指定为业务所需的镜像仓库地址\n**podSubnet**：指定的IP地址段与后续部署的网络插件相匹配。（部署flannel插件，配置为10.244.0.0/16；部署calico插件，配置为192.168.0.0/16）\n\n### 2.3.开始初始化\n\n```bash\n#只在Master1的主机上面执行 版本信息与你要安装的相同\nkubeadm init --config=kubeadm-config.yaml\n\n#当出现 类似 如下说明master安装成功\nkubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128\n\n#然后执行安装成功提示的命令行，这部分执行你安装成功后的部分，可能每个人的有所不同\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n```\n\n## 3.节点node加入（默认此事上面一步骤 都进行了操作）\n\n```bash\n# 执行master安装成功后的 kubeadm join命令，注意是你自己的，下面是举例\nkubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128\n\n#当出现 类似 如下说明node加入集群成功\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n```\n\n## 4.master节点验证安装进度\n\n```bash\n#命令一 \nkubectl get cs #显示内容如下说明Master安装没问题\nNAME                 STATUS    MESSAGE              ERROR\nscheduler            Healthy   ok                   \ncontroller-manager   Healthy   ok                   \netcd-0               Healthy   {\"health\": \"true\"} \n\n#命令二\nkubectl get pod -n kube-system #查看pod状态，下面只是部分pod内容\nNAME                                   READY   STATUS             RESTARTS   AGE\ncoredns-86c58d9df4-j9g8d               1/1     Running            0          128m\ncoredns-86c58d9df4-pg45w               1/1     Running            0          128m\netcd-k8s1                              1/1     Running            0          127m\nkube-apiserver-k8s1                    1/1     Running            0          127m\nkube-controller-manager-k8s1           1/1     Running            0          127m\n\n\n#在这里你可能发现你的coredns的状态并不是Running，不要着急，这里需要给集群配置网络插件，配置好就自动Running了\n\n#命令三\nkubectl get node #查看节点状态 \nNAME   STATUS   ROLES    AGE    VERSION\nmaster   NoReady    master   131m   v1.17.4\nnode1   NoReady    <none>   93m    v1.17.4\n\n#如果你添加了节点里面看的话,可能还未初始化，显示的是NoReady是因为集群网络插件还未配置。\n```\n\n## 5.安装集群网络插件 (只需要Master安装)\n\n下面两种网络插件任选一种即可。\n\n### 5.1.安装Flannel 网络插件\n\n```bash\n# 获取flannel网络插件配置yaml文件\nwget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n\n# 如果云服务器为多网卡机器，在启动命令中添加：\n\t\t...\n        command:\n        - /opt/bin/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        - --iface=eth0  # 指定使用的相应网卡\n        ...\n\nkubectl apply -f kube-flannel.yml\n\n#安装成功后查看pod\nkubectl get pod -n kube-system\nNAME                                   READY   STATUS             RESTARTS   AGE\ncoredns-86c58d9df4-j9g8d               1/1     Running            0          128m\ncoredns-86c58d9df4-pg45w               1/1     Running            0          128m\netcd-k8s1                              1/1     Running            0          127m\nkube-apiserver-k8s1                    1/1     Running            0          127m\nkube-controller-manager-k8s1           1/1     Running            0          127m\nkube-flannel-ds-amd64-7btlw            1/1     Running            0          91m\nkube-flannel-ds-amd64-9vq42            1/1     Running            0          106m\nkube-flannel-ds-amd64-kdf42            1/1     Running            0          90m\nkube-proxy-dtmfs                       1/1     Running            0          128m\nkube-proxy-p76tc                       1/1     Running            0          90m\nkube-proxy-xgw28                       1/1     Running            0          91m\nkube-scheduler-k8s1                    1/1     Running            0          128m\n\n#全部Running则表示 成功了\n```\n\n### 5.2.安装calico\n\n```bash\n# 获取calico网络插件配置yaml文件\nwget https://docs.projectcalico.org/manifests/calico.yaml\n\nkubectl apply -f calico.yaml\n\n#安装成功后查看pod\nkubectl get pod -n kube-system\n\n#全部Running则表示 成功了\n```\n","slug":"11.使用kubeadm搭建k8s集群","published":1,"updated":"2023-12-20T14:01:47.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg59r0007m0fvdf1n8yv3","content":"<h1 id=\"使用kubeadm搭建k8s集群\"><a href=\"#使用kubeadm搭建k8s集群\" class=\"headerlink\" title=\"使用kubeadm搭建k8s集群\"></a>使用kubeadm搭建k8s集群</h1><h2 id=\"1-安装环境准备\"><a href=\"#1-安装环境准备\" class=\"headerlink\" title=\"1.安装环境准备\"></a>1.安装环境准备</h2><h3 id=\"1-1-云服务器准备\"><a href=\"#1-1-云服务器准备\" class=\"headerlink\" title=\"1.1.云服务器准备\"></a>1.1.云服务器准备</h3><table>\n<thead>\n<tr>\n<th align=\"center\">IP地址</th>\n<th align=\"center\">节点角色</th>\n<th align=\"center\">CPU</th>\n<th align=\"center\">Memory</th>\n<th align=\"center\">Hostname</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">10.0.1.9</td>\n<td align=\"center\">master and etcd</td>\n<td align=\"center\">&gt;=2c</td>\n<td align=\"center\">&gt;=2G</td>\n<td align=\"center\">master</td>\n</tr>\n<tr>\n<td align=\"center\">10.0.1.5</td>\n<td align=\"center\">node</td>\n<td align=\"center\">&gt;=2c</td>\n<td align=\"center\">&gt;=2G</td>\n<td align=\"center\">node1</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-2-软件版本\"><a href=\"#1-2-软件版本\" class=\"headerlink\" title=\"1.2.软件版本\"></a>1.2.软件版本</h3><table>\n<thead>\n<tr>\n<th align=\"center\">系统类型</th>\n<th align=\"center\">Kubernetes版本</th>\n<th align=\"center\">docker版本</th>\n<th align=\"center\">kubeadm版本</th>\n<th align=\"center\">kubectl版本</th>\n<th align=\"center\">kubelet版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">CentOS 7.6</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">19.03.8-ce</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">v1.17.4</td>\n</tr>\n</tbody></table>\n<span id=\"more\"></span>\n\n<h3 id=\"1-3-云服务器环境初始化操作\"><a href=\"#1-3-云服务器环境初始化操作\" class=\"headerlink\" title=\"1.3.云服务器环境初始化操作\"></a>1.3.云服务器环境初始化操作</h3><h4 id=\"1-3-1-设置主机名\"><a href=\"#1-3-1-设置主机名\" class=\"headerlink\" title=\"1.3.1.设置主机名\"></a>1.3.1.设置主机名</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#master是设置名称 2台设备分别是 master node1</span></span><br><span class=\"line\">hostnamectl set-hostname master </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-2-修改host文件\"><a href=\"#1-3-2-修改host文件\" class=\"headerlink\" title=\"1.3.2.修改host文件\"></a>1.3.2.修改host文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/hosts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加</span></span><br><span class=\"line\">10.0.1.9 master</span><br><span class=\"line\">10.0.1.5 node1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-3-关闭selinux\"><a href=\"#1-3-3-关闭selinux\" class=\"headerlink\" title=\"1.3.3.关闭selinux\"></a>1.3.3.关闭selinux</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实时动态关闭</span></span><br><span class=\"line\">setenforce 0 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#禁止重启后自动开启</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27;</span> /etc/selinux/config </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-4-关闭交换分区\"><a href=\"#1-3-4-关闭交换分区\" class=\"headerlink\" title=\"1.3.4.关闭交换分区\"></a>1.3.4.关闭交换分区</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实时动态关闭</span></span><br><span class=\"line\">swapoff -a </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#禁止重启后自动开启</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;/ swap / s/^/#/&#x27;</span> /etc/fstab </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-5-网络配置文件\"><a href=\"#1-3-5-网络配置文件\" class=\"headerlink\" title=\"1.3.5.网络配置文件\"></a>1.3.5.网络配置文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt; /etc/sysctl.d/k8s.conf</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\">vm.swappiness=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#退出 按 Ctrl + D</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行该命令 如果不执行就会在应用k8s.conf时出现加载错误</span></span><br><span class=\"line\">modprobe br_netfilter  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#应用配置文件</span></span><br><span class=\"line\">sysctl -p /etc/sysctl.d/k8s.conf</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-6-配置资源地址\"><a href=\"#1-3-6-配置资源地址\" class=\"headerlink\" title=\"1.3.6.配置资源地址\"></a>1.3.6.配置资源地址</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install wget -y  <span class=\"comment\">#安装wget命令行</span></span><br><span class=\"line\"></span><br><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  <span class=\"comment\">#配置yum源</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum makecache <span class=\"comment\">#更新缓存</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo <span class=\"comment\">#配置docker下载的地址</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-7-安装Docker\"><a href=\"#1-3-7-安装Docker\" class=\"headerlink\" title=\"1.3.7.安装Docker\"></a>1.3.7.安装Docker</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list docker-ce --showduplicates|<span class=\"built_in\">sort</span> -r  <span class=\"comment\">#展示版本列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y docker-ce  <span class=\"comment\">#默认安装最新版，也可以指定版本下载</span></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start docker <span class=\"comment\">#启动docker</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker <span class=\"comment\">#将docker加入到开机启动</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker version <span class=\"comment\">#查看docker启动情况 和版本信息</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果安装的docker版本使用的cgroups，按以下方式修改为systemd</span></span><br><span class=\"line\">vim /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;exec-opts&quot;</span>: [<span class=\"string\">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class=\"line\">  <span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;https://mj9kvemk.mirror.aliyuncs.com&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-8-配置k8s资源的下载地址\"><a href=\"#1-3-8-配置k8s资源的下载地址\" class=\"headerlink\" title=\"1.3.8.配置k8s资源的下载地址\"></a>1.3.8.配置k8s资源的下载地址</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt;<span class=\"string\">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class=\"line\"><span class=\"string\">[kubernetes]</span></span><br><span class=\"line\"><span class=\"string\">name=Kubernetes</span></span><br><span class=\"line\"><span class=\"string\">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class=\"line\"><span class=\"string\">enabled=1</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">repo_gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span></span><br><span class=\"line\"><span class=\"string\">        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-9-安装-kubelet-kubeadm-kubectl\"><a href=\"#1-3-9-安装-kubelet-kubeadm-kubectl\" class=\"headerlink\" title=\"1.3.9.安装 kubelet kubeadm kubectl\"></a>1.3.9.安装 kubelet kubeadm kubectl</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认安装最新版本，也可以指定版本</span></span><br><span class=\"line\">yum install -y kubelet kubeadm kubectl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置kubelet开机启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> kubelet.service </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-开始初始化-（只在主节点Master上面操作）\"><a href=\"#2-开始初始化-（只在主节点Master上面操作）\" class=\"headerlink\" title=\"2.开始初始化 （只在主节点Master上面操作）\"></a>2.开始初始化 （只在主节点Master上面操作）</h2><h3 id=\"2-1-创建初始化配置文件\"><a href=\"#2-1-创建初始化配置文件\" class=\"headerlink\" title=\"2.1.创建初始化配置文件\"></a>2.1.创建初始化配置文件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm config print init-defaults &gt; kubeadm-config.yaml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-根据各自部署环境修改配置文件\"><a href=\"#2-2-根据各自部署环境修改配置文件\" class=\"headerlink\" title=\"2.2.根据各自部署环境修改配置文件\"></a>2.2.根据各自部署环境修改配置文件</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"attr\">bootstrapTokens:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">groups:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class=\"line\">  <span class=\"attr\">token:</span> <span class=\"string\">abcdef.0123456789abcdef</span></span><br><span class=\"line\">  <span class=\"attr\">ttl:</span> <span class=\"string\">24h0m0s</span></span><br><span class=\"line\">  <span class=\"attr\">usages:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">signing</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">authentication</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">InitConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">localAPIEndpoint:</span></span><br><span class=\"line\">  <span class=\"attr\">advertiseAddress:</span> <span class=\"number\">10.0</span><span class=\"number\">.1</span><span class=\"number\">.9</span></span><br><span class=\"line\">  <span class=\"attr\">bindPort:</span> <span class=\"number\">6443</span></span><br><span class=\"line\"><span class=\"attr\">nodeRegistration:</span></span><br><span class=\"line\">  <span class=\"attr\">criSocket:</span> <span class=\"string\">/var/run/dockershim.sock</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">k8s1</span></span><br><span class=\"line\">  <span class=\"attr\">taints:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">effect:</span> <span class=\"string\">NoSchedule</span></span><br><span class=\"line\">    <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/master</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiServer:</span></span><br><span class=\"line\">  <span class=\"attr\">timeoutForControlPlane:</span> <span class=\"string\">4m0s</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"attr\">certificatesDir:</span> <span class=\"string\">/etc/kubernetes/pki</span></span><br><span class=\"line\"><span class=\"attr\">clusterName:</span> <span class=\"string\">kubernetes</span></span><br><span class=\"line\"><span class=\"attr\">controllerManager:</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"attr\">dns:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">CoreDNS</span></span><br><span class=\"line\"><span class=\"attr\">etcd:</span></span><br><span class=\"line\">  <span class=\"attr\">local:</span></span><br><span class=\"line\">    <span class=\"attr\">dataDir:</span> <span class=\"string\">/var/lib/etcd</span></span><br><span class=\"line\"><span class=\"attr\">imageRepository:</span> <span class=\"string\">gcr.azk8s.cn/google-containers</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">kubernetesVersion:</span> <span class=\"string\">v1.17.3</span></span><br><span class=\"line\"><span class=\"attr\">networking:</span></span><br><span class=\"line\">  <span class=\"attr\">dnsDomain:</span> <span class=\"string\">cluster.local</span></span><br><span class=\"line\">  <span class=\"attr\">podSubnet:</span> <span class=\"string\">&quot;192.168.0.0/16&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">serviceSubnet:</span> <span class=\"number\">10.96</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">/12</span></span><br><span class=\"line\"><span class=\"attr\">scheduler:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配置说明：<br><strong>imageRepository</strong>：指定为业务所需的镜像仓库地址<br><strong>podSubnet</strong>：指定的IP地址段与后续部署的网络插件相匹配。（部署flannel插件，配置为10.244.0.0/16；部署calico插件，配置为192.168.0.0/16）</p>\n<h3 id=\"2-3-开始初始化\"><a href=\"#2-3-开始初始化\" class=\"headerlink\" title=\"2.3.开始初始化\"></a>2.3.开始初始化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#只在Master1的主机上面执行 版本信息与你要安装的相同</span></span><br><span class=\"line\">kubeadm init --config=kubeadm-config.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当出现 类似 如下说明master安装成功</span></span><br><span class=\"line\">kubeadm <span class=\"built_in\">join</span> 10.0.1.9:6443 --token abcdef.0123456789abcdef \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#然后执行安装成功提示的命令行，这部分执行你安装成功后的部分，可能每个人的有所不同</span></span><br><span class=\"line\">  <span class=\"built_in\">mkdir</span> -p <span class=\"variable\">$HOME</span>/.kube</span><br><span class=\"line\">  sudo <span class=\"built_in\">cp</span> -i /etc/kubernetes/admin.conf <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\">  sudo <span class=\"built_in\">chown</span> $(<span class=\"built_in\">id</span> -u):$(<span class=\"built_in\">id</span> -g) <span class=\"variable\">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-节点node加入（默认此事上面一步骤-都进行了操作）\"><a href=\"#3-节点node加入（默认此事上面一步骤-都进行了操作）\" class=\"headerlink\" title=\"3.节点node加入（默认此事上面一步骤 都进行了操作）\"></a>3.节点node加入（默认此事上面一步骤 都进行了操作）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 执行master安装成功后的 kubeadm join命令，注意是你自己的，下面是举例</span></span><br><span class=\"line\">kubeadm <span class=\"built_in\">join</span> 10.0.1.9:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当出现 类似 如下说明node加入集群成功</span></span><br><span class=\"line\">This node has joined the cluster:</span><br><span class=\"line\">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class=\"line\">* The Kubelet was informed of the new secure connection details.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-master节点验证安装进度\"><a href=\"#4-master节点验证安装进度\" class=\"headerlink\" title=\"4.master节点验证安装进度\"></a>4.master节点验证安装进度</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#命令一 </span></span><br><span class=\"line\">kubectl get cs <span class=\"comment\">#显示内容如下说明Master安装没问题</span></span><br><span class=\"line\">NAME                 STATUS    MESSAGE              ERROR</span><br><span class=\"line\">scheduler            Healthy   ok                   </span><br><span class=\"line\">controller-manager   Healthy   ok                   </span><br><span class=\"line\">etcd-0               Healthy   &#123;<span class=\"string\">&quot;health&quot;</span>: <span class=\"string\">&quot;true&quot;</span>&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命令二</span></span><br><span class=\"line\">kubectl get pod -n kube-system <span class=\"comment\">#查看pod状态，下面只是部分pod内容</span></span><br><span class=\"line\">NAME                                   READY   STATUS             RESTARTS   AGE</span><br><span class=\"line\">coredns-86c58d9df4-j9g8d               1/1     Running            0          128m</span><br><span class=\"line\">coredns-86c58d9df4-pg45w               1/1     Running            0          128m</span><br><span class=\"line\">etcd-k8s1                              1/1     Running            0          127m</span><br><span class=\"line\">kube-apiserver-k8s1                    1/1     Running            0          127m</span><br><span class=\"line\">kube-controller-manager-k8s1           1/1     Running            0          127m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在这里你可能发现你的coredns的状态并不是Running，不要着急，这里需要给集群配置网络插件，配置好就自动Running了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命令三</span></span><br><span class=\"line\">kubectl get node <span class=\"comment\">#查看节点状态 </span></span><br><span class=\"line\">NAME   STATUS   ROLES    AGE    VERSION</span><br><span class=\"line\">master   NoReady    master   131m   v1.17.4</span><br><span class=\"line\">node1   NoReady    &lt;none&gt;   93m    v1.17.4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果你添加了节点里面看的话,可能还未初始化，显示的是NoReady是因为集群网络插件还未配置。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-安装集群网络插件-只需要Master安装\"><a href=\"#5-安装集群网络插件-只需要Master安装\" class=\"headerlink\" title=\"5.安装集群网络插件 (只需要Master安装)\"></a>5.安装集群网络插件 (只需要Master安装)</h2><p>下面两种网络插件任选一种即可。</p>\n<h3 id=\"5-1-安装Flannel-网络插件\"><a href=\"#5-1-安装Flannel-网络插件\" class=\"headerlink\" title=\"5.1.安装Flannel 网络插件\"></a>5.1.安装Flannel 网络插件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取flannel网络插件配置yaml文件</span></span><br><span class=\"line\">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果云服务器为多网卡机器，在启动命令中添加：</span></span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">        <span class=\"built_in\">command</span>:</span><br><span class=\"line\">        - /opt/bin/flanneld</span><br><span class=\"line\">        args:</span><br><span class=\"line\">        - --ip-masq</span><br><span class=\"line\">        - --kube-subnet-mgr</span><br><span class=\"line\">        - --iface=eth0  <span class=\"comment\"># 指定使用的相应网卡</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f kube-flannel.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装成功后查看pod</span></span><br><span class=\"line\">kubectl get pod -n kube-system</span><br><span class=\"line\">NAME                                   READY   STATUS             RESTARTS   AGE</span><br><span class=\"line\">coredns-86c58d9df4-j9g8d               1/1     Running            0          128m</span><br><span class=\"line\">coredns-86c58d9df4-pg45w               1/1     Running            0          128m</span><br><span class=\"line\">etcd-k8s1                              1/1     Running            0          127m</span><br><span class=\"line\">kube-apiserver-k8s1                    1/1     Running            0          127m</span><br><span class=\"line\">kube-controller-manager-k8s1           1/1     Running            0          127m</span><br><span class=\"line\">kube-flannel-ds-amd64-7btlw            1/1     Running            0          91m</span><br><span class=\"line\">kube-flannel-ds-amd64-9vq42            1/1     Running            0          106m</span><br><span class=\"line\">kube-flannel-ds-amd64-kdf42            1/1     Running            0          90m</span><br><span class=\"line\">kube-proxy-dtmfs                       1/1     Running            0          128m</span><br><span class=\"line\">kube-proxy-p76tc                       1/1     Running            0          90m</span><br><span class=\"line\">kube-proxy-xgw28                       1/1     Running            0          91m</span><br><span class=\"line\">kube-scheduler-k8s1                    1/1     Running            0          128m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#全部Running则表示 成功了</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-安装calico\"><a href=\"#5-2-安装calico\" class=\"headerlink\" title=\"5.2.安装calico\"></a>5.2.安装calico</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取calico网络插件配置yaml文件</span></span><br><span class=\"line\">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f calico.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装成功后查看pod</span></span><br><span class=\"line\">kubectl get pod -n kube-system</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#全部Running则表示 成功了</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"<h1 id=\"使用kubeadm搭建k8s集群\"><a href=\"#使用kubeadm搭建k8s集群\" class=\"headerlink\" title=\"使用kubeadm搭建k8s集群\"></a>使用kubeadm搭建k8s集群</h1><h2 id=\"1-安装环境准备\"><a href=\"#1-安装环境准备\" class=\"headerlink\" title=\"1.安装环境准备\"></a>1.安装环境准备</h2><h3 id=\"1-1-云服务器准备\"><a href=\"#1-1-云服务器准备\" class=\"headerlink\" title=\"1.1.云服务器准备\"></a>1.1.云服务器准备</h3><table>\n<thead>\n<tr>\n<th align=\"center\">IP地址</th>\n<th align=\"center\">节点角色</th>\n<th align=\"center\">CPU</th>\n<th align=\"center\">Memory</th>\n<th align=\"center\">Hostname</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">10.0.1.9</td>\n<td align=\"center\">master and etcd</td>\n<td align=\"center\">&gt;=2c</td>\n<td align=\"center\">&gt;=2G</td>\n<td align=\"center\">master</td>\n</tr>\n<tr>\n<td align=\"center\">10.0.1.5</td>\n<td align=\"center\">node</td>\n<td align=\"center\">&gt;=2c</td>\n<td align=\"center\">&gt;=2G</td>\n<td align=\"center\">node1</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-2-软件版本\"><a href=\"#1-2-软件版本\" class=\"headerlink\" title=\"1.2.软件版本\"></a>1.2.软件版本</h3><table>\n<thead>\n<tr>\n<th align=\"center\">系统类型</th>\n<th align=\"center\">Kubernetes版本</th>\n<th align=\"center\">docker版本</th>\n<th align=\"center\">kubeadm版本</th>\n<th align=\"center\">kubectl版本</th>\n<th align=\"center\">kubelet版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">CentOS 7.6</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">19.03.8-ce</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">v1.17.4</td>\n</tr>\n</tbody></table>","more":"<h3 id=\"1-3-云服务器环境初始化操作\"><a href=\"#1-3-云服务器环境初始化操作\" class=\"headerlink\" title=\"1.3.云服务器环境初始化操作\"></a>1.3.云服务器环境初始化操作</h3><h4 id=\"1-3-1-设置主机名\"><a href=\"#1-3-1-设置主机名\" class=\"headerlink\" title=\"1.3.1.设置主机名\"></a>1.3.1.设置主机名</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#master是设置名称 2台设备分别是 master node1</span></span><br><span class=\"line\">hostnamectl set-hostname master </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-2-修改host文件\"><a href=\"#1-3-2-修改host文件\" class=\"headerlink\" title=\"1.3.2.修改host文件\"></a>1.3.2.修改host文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/hosts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加</span></span><br><span class=\"line\">10.0.1.9 master</span><br><span class=\"line\">10.0.1.5 node1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-3-关闭selinux\"><a href=\"#1-3-3-关闭selinux\" class=\"headerlink\" title=\"1.3.3.关闭selinux\"></a>1.3.3.关闭selinux</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实时动态关闭</span></span><br><span class=\"line\">setenforce 0 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#禁止重启后自动开启</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27;</span> /etc/selinux/config </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-4-关闭交换分区\"><a href=\"#1-3-4-关闭交换分区\" class=\"headerlink\" title=\"1.3.4.关闭交换分区\"></a>1.3.4.关闭交换分区</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实时动态关闭</span></span><br><span class=\"line\">swapoff -a </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#禁止重启后自动开启</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;/ swap / s/^/#/&#x27;</span> /etc/fstab </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-5-网络配置文件\"><a href=\"#1-3-5-网络配置文件\" class=\"headerlink\" title=\"1.3.5.网络配置文件\"></a>1.3.5.网络配置文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt; /etc/sysctl.d/k8s.conf</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\">vm.swappiness=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#退出 按 Ctrl + D</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行该命令 如果不执行就会在应用k8s.conf时出现加载错误</span></span><br><span class=\"line\">modprobe br_netfilter  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#应用配置文件</span></span><br><span class=\"line\">sysctl -p /etc/sysctl.d/k8s.conf</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-6-配置资源地址\"><a href=\"#1-3-6-配置资源地址\" class=\"headerlink\" title=\"1.3.6.配置资源地址\"></a>1.3.6.配置资源地址</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install wget -y  <span class=\"comment\">#安装wget命令行</span></span><br><span class=\"line\"></span><br><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  <span class=\"comment\">#配置yum源</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum makecache <span class=\"comment\">#更新缓存</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo <span class=\"comment\">#配置docker下载的地址</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-7-安装Docker\"><a href=\"#1-3-7-安装Docker\" class=\"headerlink\" title=\"1.3.7.安装Docker\"></a>1.3.7.安装Docker</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list docker-ce --showduplicates|<span class=\"built_in\">sort</span> -r  <span class=\"comment\">#展示版本列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y docker-ce  <span class=\"comment\">#默认安装最新版，也可以指定版本下载</span></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start docker <span class=\"comment\">#启动docker</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker <span class=\"comment\">#将docker加入到开机启动</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker version <span class=\"comment\">#查看docker启动情况 和版本信息</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果安装的docker版本使用的cgroups，按以下方式修改为systemd</span></span><br><span class=\"line\">vim /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;exec-opts&quot;</span>: [<span class=\"string\">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class=\"line\">  <span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;https://mj9kvemk.mirror.aliyuncs.com&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-8-配置k8s资源的下载地址\"><a href=\"#1-3-8-配置k8s资源的下载地址\" class=\"headerlink\" title=\"1.3.8.配置k8s资源的下载地址\"></a>1.3.8.配置k8s资源的下载地址</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;&lt;<span class=\"string\">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class=\"line\"><span class=\"string\">[kubernetes]</span></span><br><span class=\"line\"><span class=\"string\">name=Kubernetes</span></span><br><span class=\"line\"><span class=\"string\">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class=\"line\"><span class=\"string\">enabled=1</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">repo_gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span></span><br><span class=\"line\"><span class=\"string\">        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-9-安装-kubelet-kubeadm-kubectl\"><a href=\"#1-3-9-安装-kubelet-kubeadm-kubectl\" class=\"headerlink\" title=\"1.3.9.安装 kubelet kubeadm kubectl\"></a>1.3.9.安装 kubelet kubeadm kubectl</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认安装最新版本，也可以指定版本</span></span><br><span class=\"line\">yum install -y kubelet kubeadm kubectl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置kubelet开机启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> kubelet.service </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-开始初始化-（只在主节点Master上面操作）\"><a href=\"#2-开始初始化-（只在主节点Master上面操作）\" class=\"headerlink\" title=\"2.开始初始化 （只在主节点Master上面操作）\"></a>2.开始初始化 （只在主节点Master上面操作）</h2><h3 id=\"2-1-创建初始化配置文件\"><a href=\"#2-1-创建初始化配置文件\" class=\"headerlink\" title=\"2.1.创建初始化配置文件\"></a>2.1.创建初始化配置文件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm config print init-defaults &gt; kubeadm-config.yaml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-根据各自部署环境修改配置文件\"><a href=\"#2-2-根据各自部署环境修改配置文件\" class=\"headerlink\" title=\"2.2.根据各自部署环境修改配置文件\"></a>2.2.根据各自部署环境修改配置文件</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"attr\">bootstrapTokens:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">groups:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class=\"line\">  <span class=\"attr\">token:</span> <span class=\"string\">abcdef.0123456789abcdef</span></span><br><span class=\"line\">  <span class=\"attr\">ttl:</span> <span class=\"string\">24h0m0s</span></span><br><span class=\"line\">  <span class=\"attr\">usages:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">signing</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">authentication</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">InitConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">localAPIEndpoint:</span></span><br><span class=\"line\">  <span class=\"attr\">advertiseAddress:</span> <span class=\"number\">10.0</span><span class=\"number\">.1</span><span class=\"number\">.9</span></span><br><span class=\"line\">  <span class=\"attr\">bindPort:</span> <span class=\"number\">6443</span></span><br><span class=\"line\"><span class=\"attr\">nodeRegistration:</span></span><br><span class=\"line\">  <span class=\"attr\">criSocket:</span> <span class=\"string\">/var/run/dockershim.sock</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">k8s1</span></span><br><span class=\"line\">  <span class=\"attr\">taints:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">effect:</span> <span class=\"string\">NoSchedule</span></span><br><span class=\"line\">    <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/master</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiServer:</span></span><br><span class=\"line\">  <span class=\"attr\">timeoutForControlPlane:</span> <span class=\"string\">4m0s</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"attr\">certificatesDir:</span> <span class=\"string\">/etc/kubernetes/pki</span></span><br><span class=\"line\"><span class=\"attr\">clusterName:</span> <span class=\"string\">kubernetes</span></span><br><span class=\"line\"><span class=\"attr\">controllerManager:</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"attr\">dns:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">CoreDNS</span></span><br><span class=\"line\"><span class=\"attr\">etcd:</span></span><br><span class=\"line\">  <span class=\"attr\">local:</span></span><br><span class=\"line\">    <span class=\"attr\">dataDir:</span> <span class=\"string\">/var/lib/etcd</span></span><br><span class=\"line\"><span class=\"attr\">imageRepository:</span> <span class=\"string\">gcr.azk8s.cn/google-containers</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">kubernetesVersion:</span> <span class=\"string\">v1.17.3</span></span><br><span class=\"line\"><span class=\"attr\">networking:</span></span><br><span class=\"line\">  <span class=\"attr\">dnsDomain:</span> <span class=\"string\">cluster.local</span></span><br><span class=\"line\">  <span class=\"attr\">podSubnet:</span> <span class=\"string\">&quot;192.168.0.0/16&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">serviceSubnet:</span> <span class=\"number\">10.96</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">/12</span></span><br><span class=\"line\"><span class=\"attr\">scheduler:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配置说明：<br><strong>imageRepository</strong>：指定为业务所需的镜像仓库地址<br><strong>podSubnet</strong>：指定的IP地址段与后续部署的网络插件相匹配。（部署flannel插件，配置为10.244.0.0/16；部署calico插件，配置为192.168.0.0/16）</p>\n<h3 id=\"2-3-开始初始化\"><a href=\"#2-3-开始初始化\" class=\"headerlink\" title=\"2.3.开始初始化\"></a>2.3.开始初始化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#只在Master1的主机上面执行 版本信息与你要安装的相同</span></span><br><span class=\"line\">kubeadm init --config=kubeadm-config.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当出现 类似 如下说明master安装成功</span></span><br><span class=\"line\">kubeadm <span class=\"built_in\">join</span> 10.0.1.9:6443 --token abcdef.0123456789abcdef \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#然后执行安装成功提示的命令行，这部分执行你安装成功后的部分，可能每个人的有所不同</span></span><br><span class=\"line\">  <span class=\"built_in\">mkdir</span> -p <span class=\"variable\">$HOME</span>/.kube</span><br><span class=\"line\">  sudo <span class=\"built_in\">cp</span> -i /etc/kubernetes/admin.conf <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\">  sudo <span class=\"built_in\">chown</span> $(<span class=\"built_in\">id</span> -u):$(<span class=\"built_in\">id</span> -g) <span class=\"variable\">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-节点node加入（默认此事上面一步骤-都进行了操作）\"><a href=\"#3-节点node加入（默认此事上面一步骤-都进行了操作）\" class=\"headerlink\" title=\"3.节点node加入（默认此事上面一步骤 都进行了操作）\"></a>3.节点node加入（默认此事上面一步骤 都进行了操作）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 执行master安装成功后的 kubeadm join命令，注意是你自己的，下面是举例</span></span><br><span class=\"line\">kubeadm <span class=\"built_in\">join</span> 10.0.1.9:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当出现 类似 如下说明node加入集群成功</span></span><br><span class=\"line\">This node has joined the cluster:</span><br><span class=\"line\">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class=\"line\">* The Kubelet was informed of the new secure connection details.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-master节点验证安装进度\"><a href=\"#4-master节点验证安装进度\" class=\"headerlink\" title=\"4.master节点验证安装进度\"></a>4.master节点验证安装进度</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#命令一 </span></span><br><span class=\"line\">kubectl get cs <span class=\"comment\">#显示内容如下说明Master安装没问题</span></span><br><span class=\"line\">NAME                 STATUS    MESSAGE              ERROR</span><br><span class=\"line\">scheduler            Healthy   ok                   </span><br><span class=\"line\">controller-manager   Healthy   ok                   </span><br><span class=\"line\">etcd-0               Healthy   &#123;<span class=\"string\">&quot;health&quot;</span>: <span class=\"string\">&quot;true&quot;</span>&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命令二</span></span><br><span class=\"line\">kubectl get pod -n kube-system <span class=\"comment\">#查看pod状态，下面只是部分pod内容</span></span><br><span class=\"line\">NAME                                   READY   STATUS             RESTARTS   AGE</span><br><span class=\"line\">coredns-86c58d9df4-j9g8d               1/1     Running            0          128m</span><br><span class=\"line\">coredns-86c58d9df4-pg45w               1/1     Running            0          128m</span><br><span class=\"line\">etcd-k8s1                              1/1     Running            0          127m</span><br><span class=\"line\">kube-apiserver-k8s1                    1/1     Running            0          127m</span><br><span class=\"line\">kube-controller-manager-k8s1           1/1     Running            0          127m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在这里你可能发现你的coredns的状态并不是Running，不要着急，这里需要给集群配置网络插件，配置好就自动Running了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命令三</span></span><br><span class=\"line\">kubectl get node <span class=\"comment\">#查看节点状态 </span></span><br><span class=\"line\">NAME   STATUS   ROLES    AGE    VERSION</span><br><span class=\"line\">master   NoReady    master   131m   v1.17.4</span><br><span class=\"line\">node1   NoReady    &lt;none&gt;   93m    v1.17.4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果你添加了节点里面看的话,可能还未初始化，显示的是NoReady是因为集群网络插件还未配置。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-安装集群网络插件-只需要Master安装\"><a href=\"#5-安装集群网络插件-只需要Master安装\" class=\"headerlink\" title=\"5.安装集群网络插件 (只需要Master安装)\"></a>5.安装集群网络插件 (只需要Master安装)</h2><p>下面两种网络插件任选一种即可。</p>\n<h3 id=\"5-1-安装Flannel-网络插件\"><a href=\"#5-1-安装Flannel-网络插件\" class=\"headerlink\" title=\"5.1.安装Flannel 网络插件\"></a>5.1.安装Flannel 网络插件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取flannel网络插件配置yaml文件</span></span><br><span class=\"line\">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果云服务器为多网卡机器，在启动命令中添加：</span></span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">        <span class=\"built_in\">command</span>:</span><br><span class=\"line\">        - /opt/bin/flanneld</span><br><span class=\"line\">        args:</span><br><span class=\"line\">        - --ip-masq</span><br><span class=\"line\">        - --kube-subnet-mgr</span><br><span class=\"line\">        - --iface=eth0  <span class=\"comment\"># 指定使用的相应网卡</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f kube-flannel.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装成功后查看pod</span></span><br><span class=\"line\">kubectl get pod -n kube-system</span><br><span class=\"line\">NAME                                   READY   STATUS             RESTARTS   AGE</span><br><span class=\"line\">coredns-86c58d9df4-j9g8d               1/1     Running            0          128m</span><br><span class=\"line\">coredns-86c58d9df4-pg45w               1/1     Running            0          128m</span><br><span class=\"line\">etcd-k8s1                              1/1     Running            0          127m</span><br><span class=\"line\">kube-apiserver-k8s1                    1/1     Running            0          127m</span><br><span class=\"line\">kube-controller-manager-k8s1           1/1     Running            0          127m</span><br><span class=\"line\">kube-flannel-ds-amd64-7btlw            1/1     Running            0          91m</span><br><span class=\"line\">kube-flannel-ds-amd64-9vq42            1/1     Running            0          106m</span><br><span class=\"line\">kube-flannel-ds-amd64-kdf42            1/1     Running            0          90m</span><br><span class=\"line\">kube-proxy-dtmfs                       1/1     Running            0          128m</span><br><span class=\"line\">kube-proxy-p76tc                       1/1     Running            0          90m</span><br><span class=\"line\">kube-proxy-xgw28                       1/1     Running            0          91m</span><br><span class=\"line\">kube-scheduler-k8s1                    1/1     Running            0          128m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#全部Running则表示 成功了</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-安装calico\"><a href=\"#5-2-安装calico\" class=\"headerlink\" title=\"5.2.安装calico\"></a>5.2.安装calico</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取calico网络插件配置yaml文件</span></span><br><span class=\"line\">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f calico.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装成功后查看pod</span></span><br><span class=\"line\">kubectl get pod -n kube-system</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#全部Running则表示 成功了</span></span><br></pre></td></tr></table></figure>"},{"title":"12.centos系统安装containerd","date":"2023-03-28T08:45:03.000Z","type":"tags","_content":"\n# centos系统安装containerd\n\n## 1.背景\n\nKubernetes 的早期版本仅适用于特定的容器运行时：Docker Engine。 后来，Kubernetes 增加了对使用其他容器运行时的支持。创建[CRI 标准](https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/) 是为了实现编排器（如 Kubernetes）和许多不同的容器运行时之间交互操作。 Docker Engine 没有实现（CRI）接口，因此 Kubernetes 项目创建了特殊代码来帮助过渡， 并使 dockershim 代码成为 Kubernetes 的一部分。\n\ndockershim 代码一直是一个临时解决方案（因此得名：shim）。 你可以阅读 [Kubernetes 移除 Dockershim 增强方案](https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim) 以了解相关的社区讨论和计划。 事实上，维护 dockershim 已经成为 Kubernetes 维护者的沉重负担。\n\n此外，在较新的 CRI 运行时中实现了与 dockershim 不兼容的功能，例如 cgroups v2 和用户命名空间。 从 Kubernetes 中移除 dockershim 允许在这些领域进行进一步的开发。\n\nKubernetes 在 [v1.24 版](https://kubernetes.io/releases/#release-v1-24)正式移除了 dockershim。\n\n<!--more-->\n\n## 2.containerd运行时\n\n[containerd](https://github.com/containerd/containerd)作为CNCF社区毕业的运行时项目，在k8s移除dockershim的背景下，有必要了解containerd的安装和基本使用。\n\n### 2.1.containerd安装\n\n```bash\n# 1.安装依赖\n \nyum install -y yum-utils device-mapper-persistent-data lvm2\n \n# 2.添加yum源\n \nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n \n# 3.安装containerd\n \nyum install containerd -y\n \n# 4.生成配置文件\n \ncontainerd config default > /etc/containerd/config.toml\n \n# 5.替换 containerd 默认的 sand_box 镜像，编辑 /etc/containerd/config.toml\n \nsandbox_image = \"registry.aliyuncs.com/google_containers/pause:3.2\"\n \n# 6.启动服务\n \nsystemctl restart containerd && systemctl enable containerd\n```\n\n","source":"_posts/12.centos系统安装containerd.md","raw":"---\ntitle: 12.centos系统安装containerd\ndate: 2023-03-28 16:45:03\ntags:\n- k8s\n- containerd\ncategories:\n- 技术\ntype: \"tags\"\n---\n\n# centos系统安装containerd\n\n## 1.背景\n\nKubernetes 的早期版本仅适用于特定的容器运行时：Docker Engine。 后来，Kubernetes 增加了对使用其他容器运行时的支持。创建[CRI 标准](https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/) 是为了实现编排器（如 Kubernetes）和许多不同的容器运行时之间交互操作。 Docker Engine 没有实现（CRI）接口，因此 Kubernetes 项目创建了特殊代码来帮助过渡， 并使 dockershim 代码成为 Kubernetes 的一部分。\n\ndockershim 代码一直是一个临时解决方案（因此得名：shim）。 你可以阅读 [Kubernetes 移除 Dockershim 增强方案](https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim) 以了解相关的社区讨论和计划。 事实上，维护 dockershim 已经成为 Kubernetes 维护者的沉重负担。\n\n此外，在较新的 CRI 运行时中实现了与 dockershim 不兼容的功能，例如 cgroups v2 和用户命名空间。 从 Kubernetes 中移除 dockershim 允许在这些领域进行进一步的开发。\n\nKubernetes 在 [v1.24 版](https://kubernetes.io/releases/#release-v1-24)正式移除了 dockershim。\n\n<!--more-->\n\n## 2.containerd运行时\n\n[containerd](https://github.com/containerd/containerd)作为CNCF社区毕业的运行时项目，在k8s移除dockershim的背景下，有必要了解containerd的安装和基本使用。\n\n### 2.1.containerd安装\n\n```bash\n# 1.安装依赖\n \nyum install -y yum-utils device-mapper-persistent-data lvm2\n \n# 2.添加yum源\n \nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n \n# 3.安装containerd\n \nyum install containerd -y\n \n# 4.生成配置文件\n \ncontainerd config default > /etc/containerd/config.toml\n \n# 5.替换 containerd 默认的 sand_box 镜像，编辑 /etc/containerd/config.toml\n \nsandbox_image = \"registry.aliyuncs.com/google_containers/pause:3.2\"\n \n# 6.启动服务\n \nsystemctl restart containerd && systemctl enable containerd\n```\n\n","slug":"12.centos系统安装containerd","published":1,"updated":"2023-12-20T14:01:51.298Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg59s0008m0fvh69445or","content":"<h1 id=\"centos系统安装containerd\"><a href=\"#centos系统安装containerd\" class=\"headerlink\" title=\"centos系统安装containerd\"></a>centos系统安装containerd</h1><h2 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1.背景\"></a>1.背景</h2><p>Kubernetes 的早期版本仅适用于特定的容器运行时：Docker Engine。 后来，Kubernetes 增加了对使用其他容器运行时的支持。创建<a href=\"https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/\">CRI 标准</a> 是为了实现编排器（如 Kubernetes）和许多不同的容器运行时之间交互操作。 Docker Engine 没有实现（CRI）接口，因此 Kubernetes 项目创建了特殊代码来帮助过渡， 并使 dockershim 代码成为 Kubernetes 的一部分。</p>\n<p>dockershim 代码一直是一个临时解决方案（因此得名：shim）。 你可以阅读 <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim\">Kubernetes 移除 Dockershim 增强方案</a> 以了解相关的社区讨论和计划。 事实上，维护 dockershim 已经成为 Kubernetes 维护者的沉重负担。</p>\n<p>此外，在较新的 CRI 运行时中实现了与 dockershim 不兼容的功能，例如 cgroups v2 和用户命名空间。 从 Kubernetes 中移除 dockershim 允许在这些领域进行进一步的开发。</p>\n<p>Kubernetes 在 <a href=\"https://kubernetes.io/releases/#release-v1-24\">v1.24 版</a>正式移除了 dockershim。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"2-containerd运行时\"><a href=\"#2-containerd运行时\" class=\"headerlink\" title=\"2.containerd运行时\"></a>2.containerd运行时</h2><p><a href=\"https://github.com/containerd/containerd\">containerd</a>作为CNCF社区毕业的运行时项目，在k8s移除dockershim的背景下，有必要了解containerd的安装和基本使用。</p>\n<h3 id=\"2-1-containerd安装\"><a href=\"#2-1-containerd安装\" class=\"headerlink\" title=\"2.1.containerd安装\"></a>2.1.containerd安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.安装依赖</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 2.添加yum源</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 3.安装containerd</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum install containerd -y</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 4.生成配置文件</span></span><br><span class=\"line\"> </span><br><span class=\"line\">containerd config default &gt; /etc/containerd/config.toml</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 5.替换 containerd 默认的 sand_box 镜像，编辑 /etc/containerd/config.toml</span></span><br><span class=\"line\"> </span><br><span class=\"line\">sandbox_image = <span class=\"string\">&quot;registry.aliyuncs.com/google_containers/pause:3.2&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 6.启动服务</span></span><br><span class=\"line\"> </span><br><span class=\"line\">systemctl restart containerd &amp;&amp; systemctl <span class=\"built_in\">enable</span> containerd</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"<h1 id=\"centos系统安装containerd\"><a href=\"#centos系统安装containerd\" class=\"headerlink\" title=\"centos系统安装containerd\"></a>centos系统安装containerd</h1><h2 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1.背景\"></a>1.背景</h2><p>Kubernetes 的早期版本仅适用于特定的容器运行时：Docker Engine。 后来，Kubernetes 增加了对使用其他容器运行时的支持。创建<a href=\"https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/\">CRI 标准</a> 是为了实现编排器（如 Kubernetes）和许多不同的容器运行时之间交互操作。 Docker Engine 没有实现（CRI）接口，因此 Kubernetes 项目创建了特殊代码来帮助过渡， 并使 dockershim 代码成为 Kubernetes 的一部分。</p>\n<p>dockershim 代码一直是一个临时解决方案（因此得名：shim）。 你可以阅读 <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim\">Kubernetes 移除 Dockershim 增强方案</a> 以了解相关的社区讨论和计划。 事实上，维护 dockershim 已经成为 Kubernetes 维护者的沉重负担。</p>\n<p>此外，在较新的 CRI 运行时中实现了与 dockershim 不兼容的功能，例如 cgroups v2 和用户命名空间。 从 Kubernetes 中移除 dockershim 允许在这些领域进行进一步的开发。</p>\n<p>Kubernetes 在 <a href=\"https://kubernetes.io/releases/#release-v1-24\">v1.24 版</a>正式移除了 dockershim。</p>","more":"<h2 id=\"2-containerd运行时\"><a href=\"#2-containerd运行时\" class=\"headerlink\" title=\"2.containerd运行时\"></a>2.containerd运行时</h2><p><a href=\"https://github.com/containerd/containerd\">containerd</a>作为CNCF社区毕业的运行时项目，在k8s移除dockershim的背景下，有必要了解containerd的安装和基本使用。</p>\n<h3 id=\"2-1-containerd安装\"><a href=\"#2-1-containerd安装\" class=\"headerlink\" title=\"2.1.containerd安装\"></a>2.1.containerd安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.安装依赖</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 2.添加yum源</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 3.安装containerd</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum install containerd -y</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 4.生成配置文件</span></span><br><span class=\"line\"> </span><br><span class=\"line\">containerd config default &gt; /etc/containerd/config.toml</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 5.替换 containerd 默认的 sand_box 镜像，编辑 /etc/containerd/config.toml</span></span><br><span class=\"line\"> </span><br><span class=\"line\">sandbox_image = <span class=\"string\">&quot;registry.aliyuncs.com/google_containers/pause:3.2&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 6.启动服务</span></span><br><span class=\"line\"> </span><br><span class=\"line\">systemctl restart containerd &amp;&amp; systemctl <span class=\"built_in\">enable</span> containerd</span><br></pre></td></tr></table></figure>"},{"title":"k8s apiserver证书添加新地址","date":"2023-03-28T13:01:05.000Z","type":"tags","_content":"\n# k8s apiserver证书添加新地址\n\n## 1.环境基础\n\n| 集群版本 |     安装环境      |\n| :------: | :---------------: |\n| v1.26.3  | kubeadm安装的集群 |\n\n<!--more-->\n\n## 2.查看当前证书中的可信地址\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nopenssl x509 -in apiserver.crt -noout -text\n```\n\n## 3.给证书添加新地址\n\n### 3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址\n\n```yaml\napiServer:\n  certSANs:\n  - xx.xx.xx.xx\n```\n\n### 3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nrm -f apiserver.*\n```\n\n### 3.3.根据kubeadm配置文件生成新的证书\n\n```bash\nkubeadm init phase certs apiserver --config ./kubeadm-config.yaml\n```\n\n### 3.4.查看新生成证书中的可信地址\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nopenssl x509 -in apiserver.crt -noout -text\n```\n\n","source":"_posts/13.k8s-apiserver证书添加新地址.md","raw":"---\ntitle: k8s apiserver证书添加新地址\ndate: 2023-03-28 21:01:05\ntags:\n- k8s\n- ca\ncategories:\n- 技术\ntype: \"tags\"\n---\n\n# k8s apiserver证书添加新地址\n\n## 1.环境基础\n\n| 集群版本 |     安装环境      |\n| :------: | :---------------: |\n| v1.26.3  | kubeadm安装的集群 |\n\n<!--more-->\n\n## 2.查看当前证书中的可信地址\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nopenssl x509 -in apiserver.crt -noout -text\n```\n\n## 3.给证书添加新地址\n\n### 3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址\n\n```yaml\napiServer:\n  certSANs:\n  - xx.xx.xx.xx\n```\n\n### 3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nrm -f apiserver.*\n```\n\n### 3.3.根据kubeadm配置文件生成新的证书\n\n```bash\nkubeadm init phase certs apiserver --config ./kubeadm-config.yaml\n```\n\n### 3.4.查看新生成证书中的可信地址\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nopenssl x509 -in apiserver.crt -noout -text\n```\n\n","slug":"13.k8s-apiserver证书添加新地址","published":1,"updated":"2023-12-20T14:02:14.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg59t0009m0fve240e64b","content":"<h1 id=\"k8s-apiserver证书添加新地址\"><a href=\"#k8s-apiserver证书添加新地址\" class=\"headerlink\" title=\"k8s apiserver证书添加新地址\"></a>k8s apiserver证书添加新地址</h1><h2 id=\"1-环境基础\"><a href=\"#1-环境基础\" class=\"headerlink\" title=\"1.环境基础\"></a>1.环境基础</h2><table>\n<thead>\n<tr>\n<th align=\"center\">集群版本</th>\n<th align=\"center\">安装环境</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">v1.26.3</td>\n<td align=\"center\">kubeadm安装的集群</td>\n</tr>\n</tbody></table>\n<span id=\"more\"></span>\n\n<h2 id=\"2-查看当前证书中的可信地址\"><a href=\"#2-查看当前证书中的可信地址\" class=\"headerlink\" title=\"2.查看当前证书中的可信地址\"></a>2.查看当前证书中的可信地址</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl x509 -<span class=\"keyword\">in</span> apiserver.crt -noout -text</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-给证书添加新地址\"><a href=\"#3-给证书添加新地址\" class=\"headerlink\" title=\"3.给证书添加新地址\"></a>3.给证书添加新地址</h2><h3 id=\"3-1-修改kubeadm-config-yaml-在certSANs中添加要加入的地址\"><a href=\"#3-1-修改kubeadm-config-yaml-在certSANs中添加要加入的地址\" class=\"headerlink\" title=\"3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址\"></a>3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiServer:</span></span><br><span class=\"line\">  <span class=\"attr\">certSANs:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">xx.xx.xx.xx</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-删除k8s证书目录中的apiserver-crt-、apiserver-key\"><a href=\"#3-2-删除k8s证书目录中的apiserver-crt-、apiserver-key\" class=\"headerlink\" title=\"3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key\"></a>3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -f apiserver.*</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-根据kubeadm配置文件生成新的证书\"><a href=\"#3-3-根据kubeadm配置文件生成新的证书\" class=\"headerlink\" title=\"3.3.根据kubeadm配置文件生成新的证书\"></a>3.3.根据kubeadm配置文件生成新的证书</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm init phase certs apiserver --config ./kubeadm-config.yaml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-查看新生成证书中的可信地址\"><a href=\"#3-4-查看新生成证书中的可信地址\" class=\"headerlink\" title=\"3.4.查看新生成证书中的可信地址\"></a>3.4.查看新生成证书中的可信地址</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl x509 -<span class=\"keyword\">in</span> apiserver.crt -noout -text</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"<h1 id=\"k8s-apiserver证书添加新地址\"><a href=\"#k8s-apiserver证书添加新地址\" class=\"headerlink\" title=\"k8s apiserver证书添加新地址\"></a>k8s apiserver证书添加新地址</h1><h2 id=\"1-环境基础\"><a href=\"#1-环境基础\" class=\"headerlink\" title=\"1.环境基础\"></a>1.环境基础</h2><table>\n<thead>\n<tr>\n<th align=\"center\">集群版本</th>\n<th align=\"center\">安装环境</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">v1.26.3</td>\n<td align=\"center\">kubeadm安装的集群</td>\n</tr>\n</tbody></table>","more":"<h2 id=\"2-查看当前证书中的可信地址\"><a href=\"#2-查看当前证书中的可信地址\" class=\"headerlink\" title=\"2.查看当前证书中的可信地址\"></a>2.查看当前证书中的可信地址</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl x509 -<span class=\"keyword\">in</span> apiserver.crt -noout -text</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-给证书添加新地址\"><a href=\"#3-给证书添加新地址\" class=\"headerlink\" title=\"3.给证书添加新地址\"></a>3.给证书添加新地址</h2><h3 id=\"3-1-修改kubeadm-config-yaml-在certSANs中添加要加入的地址\"><a href=\"#3-1-修改kubeadm-config-yaml-在certSANs中添加要加入的地址\" class=\"headerlink\" title=\"3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址\"></a>3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiServer:</span></span><br><span class=\"line\">  <span class=\"attr\">certSANs:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">xx.xx.xx.xx</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-删除k8s证书目录中的apiserver-crt-、apiserver-key\"><a href=\"#3-2-删除k8s证书目录中的apiserver-crt-、apiserver-key\" class=\"headerlink\" title=\"3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key\"></a>3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -f apiserver.*</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-根据kubeadm配置文件生成新的证书\"><a href=\"#3-3-根据kubeadm配置文件生成新的证书\" class=\"headerlink\" title=\"3.3.根据kubeadm配置文件生成新的证书\"></a>3.3.根据kubeadm配置文件生成新的证书</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm init phase certs apiserver --config ./kubeadm-config.yaml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-查看新生成证书中的可信地址\"><a href=\"#3-4-查看新生成证书中的可信地址\" class=\"headerlink\" title=\"3.4.查看新生成证书中的可信地址\"></a>3.4.查看新生成证书中的可信地址</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl x509 -<span class=\"keyword\">in</span> apiserver.crt -noout -text</span><br></pre></td></tr></table></figure>"},{"title":"TCP的三次握手和四次挥手","type":"tags","date":"2023-12-22T09:26:06.000Z","_content":"\n## TCP的三次握手和四次挥手\n\n### 1.常见的网络概念\n\nMTU：maximum transmission unit，数据链路协议所使用的最大传输单元。\n\n### 2.TCP的三次握手\n\n所有基于TCP的通信都需要以两台主机的握手开始，这个握手过程主要希望能达到以下不同的目的：\n\n- 保证源主机确定目的主机在线，并且可以进行通信。\n- 让源主机检查它是否正在监听试图去连接的端口。\n- 允许源主机向接收者发送它的起始序列号，使得两台主机可以将数据包流保持有序。\n\nTCP握手分为三个步骤：\n\n第一步，主动发起通信的设备（假设它为主机A）向目标（假设它为主机B）发送了一个TCP数据包。这个数据包的TCP头设置了SYN标志，并包含了在通信过程中会用到的初始序列号和最大分段大小。\n\n第二步，主机B对于这个数据包回复一个类似于设置了SYN和ACK标志以及包含了它初始序列号的数据包。\n\n第三步，主机A向主机B发送最后一个仅设置了ACK标志的数据包。\n\n这个过程完成后，双方设备就具备了正常通信所需的信息。\n\n### 3.TCP的四次挥手\n\n在TCP中，每次握手后也会有终止。TCP终止用来在两台设备完成通信后正常地结束连接。这个过程包含4个数据包，并且用一个FIN标志来表明连接的终结。\n\nTCP挥手分为四步：\n\n第一步，主机A通过发送一个设置了FIN和ACK标志的TCP的数据包，告诉主机B通信完成。\n\n第二步，主机B以一个ACK数据包响应。\n\n第三步，主机B传输自己的FIN/ACK数据包给主机A。\n\n第四步，主机A响应一个ACK数据包。\n\n这个过程完成后，双方就结束了本次通信。\n","source":"_posts/14.TCP的三次握手和四次挥手.md","raw":"---\ntitle: TCP的三次握手和四次挥手\ntype: tags\ndate: 2023-12-22 17:26:06\ntags:\n- 网络\n- TCP\ncategories:\n- 技术\n---\n\n## TCP的三次握手和四次挥手\n\n### 1.常见的网络概念\n\nMTU：maximum transmission unit，数据链路协议所使用的最大传输单元。\n\n### 2.TCP的三次握手\n\n所有基于TCP的通信都需要以两台主机的握手开始，这个握手过程主要希望能达到以下不同的目的：\n\n- 保证源主机确定目的主机在线，并且可以进行通信。\n- 让源主机检查它是否正在监听试图去连接的端口。\n- 允许源主机向接收者发送它的起始序列号，使得两台主机可以将数据包流保持有序。\n\nTCP握手分为三个步骤：\n\n第一步，主动发起通信的设备（假设它为主机A）向目标（假设它为主机B）发送了一个TCP数据包。这个数据包的TCP头设置了SYN标志，并包含了在通信过程中会用到的初始序列号和最大分段大小。\n\n第二步，主机B对于这个数据包回复一个类似于设置了SYN和ACK标志以及包含了它初始序列号的数据包。\n\n第三步，主机A向主机B发送最后一个仅设置了ACK标志的数据包。\n\n这个过程完成后，双方设备就具备了正常通信所需的信息。\n\n### 3.TCP的四次挥手\n\n在TCP中，每次握手后也会有终止。TCP终止用来在两台设备完成通信后正常地结束连接。这个过程包含4个数据包，并且用一个FIN标志来表明连接的终结。\n\nTCP挥手分为四步：\n\n第一步，主机A通过发送一个设置了FIN和ACK标志的TCP的数据包，告诉主机B通信完成。\n\n第二步，主机B以一个ACK数据包响应。\n\n第三步，主机B传输自己的FIN/ACK数据包给主机A。\n\n第四步，主机A响应一个ACK数据包。\n\n这个过程完成后，双方就结束了本次通信。\n","slug":"14.TCP的三次握手和四次挥手","published":1,"updated":"2023-12-25T09:14:26.246Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg59v000dm0fv21dx5nqi","content":"<h2 id=\"TCP的三次握手和四次挥手\"><a href=\"#TCP的三次握手和四次挥手\" class=\"headerlink\" title=\"TCP的三次握手和四次挥手\"></a>TCP的三次握手和四次挥手</h2><h3 id=\"1-常见的网络概念\"><a href=\"#1-常见的网络概念\" class=\"headerlink\" title=\"1.常见的网络概念\"></a>1.常见的网络概念</h3><p>MTU：maximum transmission unit，数据链路协议所使用的最大传输单元。</p>\n<h3 id=\"2-TCP的三次握手\"><a href=\"#2-TCP的三次握手\" class=\"headerlink\" title=\"2.TCP的三次握手\"></a>2.TCP的三次握手</h3><p>所有基于TCP的通信都需要以两台主机的握手开始，这个握手过程主要希望能达到以下不同的目的：</p>\n<ul>\n<li>保证源主机确定目的主机在线，并且可以进行通信。</li>\n<li>让源主机检查它是否正在监听试图去连接的端口。</li>\n<li>允许源主机向接收者发送它的起始序列号，使得两台主机可以将数据包流保持有序。</li>\n</ul>\n<p>TCP握手分为三个步骤：</p>\n<p>第一步，主动发起通信的设备（假设它为主机A）向目标（假设它为主机B）发送了一个TCP数据包。这个数据包的TCP头设置了SYN标志，并包含了在通信过程中会用到的初始序列号和最大分段大小。</p>\n<p>第二步，主机B对于这个数据包回复一个类似于设置了SYN和ACK标志以及包含了它初始序列号的数据包。</p>\n<p>第三步，主机A向主机B发送最后一个仅设置了ACK标志的数据包。</p>\n<p>这个过程完成后，双方设备就具备了正常通信所需的信息。</p>\n<h3 id=\"3-TCP的四次挥手\"><a href=\"#3-TCP的四次挥手\" class=\"headerlink\" title=\"3.TCP的四次挥手\"></a>3.TCP的四次挥手</h3><p>在TCP中，每次握手后也会有终止。TCP终止用来在两台设备完成通信后正常地结束连接。这个过程包含4个数据包，并且用一个FIN标志来表明连接的终结。</p>\n<p>TCP挥手分为四步：</p>\n<p>第一步，主机A通过发送一个设置了FIN和ACK标志的TCP的数据包，告诉主机B通信完成。</p>\n<p>第二步，主机B以一个ACK数据包响应。</p>\n<p>第三步，主机B传输自己的FIN/ACK数据包给主机A。</p>\n<p>第四步，主机A响应一个ACK数据包。</p>\n<p>这个过程完成后，双方就结束了本次通信。</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"TCP的三次握手和四次挥手\"><a href=\"#TCP的三次握手和四次挥手\" class=\"headerlink\" title=\"TCP的三次握手和四次挥手\"></a>TCP的三次握手和四次挥手</h2><h3 id=\"1-常见的网络概念\"><a href=\"#1-常见的网络概念\" class=\"headerlink\" title=\"1.常见的网络概念\"></a>1.常见的网络概念</h3><p>MTU：maximum transmission unit，数据链路协议所使用的最大传输单元。</p>\n<h3 id=\"2-TCP的三次握手\"><a href=\"#2-TCP的三次握手\" class=\"headerlink\" title=\"2.TCP的三次握手\"></a>2.TCP的三次握手</h3><p>所有基于TCP的通信都需要以两台主机的握手开始，这个握手过程主要希望能达到以下不同的目的：</p>\n<ul>\n<li>保证源主机确定目的主机在线，并且可以进行通信。</li>\n<li>让源主机检查它是否正在监听试图去连接的端口。</li>\n<li>允许源主机向接收者发送它的起始序列号，使得两台主机可以将数据包流保持有序。</li>\n</ul>\n<p>TCP握手分为三个步骤：</p>\n<p>第一步，主动发起通信的设备（假设它为主机A）向目标（假设它为主机B）发送了一个TCP数据包。这个数据包的TCP头设置了SYN标志，并包含了在通信过程中会用到的初始序列号和最大分段大小。</p>\n<p>第二步，主机B对于这个数据包回复一个类似于设置了SYN和ACK标志以及包含了它初始序列号的数据包。</p>\n<p>第三步，主机A向主机B发送最后一个仅设置了ACK标志的数据包。</p>\n<p>这个过程完成后，双方设备就具备了正常通信所需的信息。</p>\n<h3 id=\"3-TCP的四次挥手\"><a href=\"#3-TCP的四次挥手\" class=\"headerlink\" title=\"3.TCP的四次挥手\"></a>3.TCP的四次挥手</h3><p>在TCP中，每次握手后也会有终止。TCP终止用来在两台设备完成通信后正常地结束连接。这个过程包含4个数据包，并且用一个FIN标志来表明连接的终结。</p>\n<p>TCP挥手分为四步：</p>\n<p>第一步，主机A通过发送一个设置了FIN和ACK标志的TCP的数据包，告诉主机B通信完成。</p>\n<p>第二步，主机B以一个ACK数据包响应。</p>\n<p>第三步，主机B传输自己的FIN/ACK数据包给主机A。</p>\n<p>第四步，主机A响应一个ACK数据包。</p>\n<p>这个过程完成后，双方就结束了本次通信。</p>\n"},{"title":"动态主机配置协议DHCP","type":"tags","date":"2023-12-25T03:19:10.000Z","_content":"\n## 动态主机配置协议DHCP\n\n### 1.什么是DHCP\n\nDHCP是一个应用层协议，能够让设备自动获取IP地址（以及其他重要网络资源，比如DNS服务器和路由网关的地址）。\n\n### 2.DHCP头结构\n\n| 偏移位 |           0-15           |     16-31      |\n| :----: | :----------------------: | :------------: |\n|   0    |    操作代码\\|硬件类型    | 硬件长度\\|跳数 |\n|   32   |          事务id          |                |\n|   64   |         消耗时间         |      标记      |\n|   96   |       客户端IP地址       |                |\n|  128   |        你的IP地址        |                |\n|  160   |       服务器IP地址       |                |\n|  196   |        网关IP地址        |                |\n|  228+  | 客户端硬件地址（16字节） |                |\n|        | 服务器主机地址（64字节） |                |\n|        |   启动文件（128字节）    |                |\n|        |           选项           |                |\n\n- 操作代码（OpCode)：用来指出这个数据包是DHCP请求还是DHCP回复。\n- 硬件类型（Hardware Type）：硬件地址类型（10MB以太网、IEEE802等）。\n- 硬件长度（Hardware Length）：硬件地址长度。\n- 跳数（Hops）：中继代理用来帮助寻找DHCP服务器。\n- 事务ID（Transaction ID）：用来匹配请求和响应的一个随机数。\n- 标记（Flags）：DHCP客户端能够接受的流量类型（单播、广播以及其他）。\n- 客户端IP地址（Client IP Address）：客户端的IP地址。\n- 你的IP地址（Your IP　Address）：DHCP服务器提供的IP地址。\n- 服务器IP地址（Server　IP　Address）：DHCP服务器的IP地址。\n- 网关IP地址（Gateway　IP　Address）：网络默认网关的IP地址。\n- 客户端硬件地址（Client　Hardware　Address）：客户端的MAC地址。\n- 服务器主机名（Server　Host　Name）：服务器的主机名（可选）。\n- 启动文件（Boot　File）：DHCP所使用的启动文件（可选）。\n- 选项（Options）：用来对DHCP数据包进行扩展，以提供更多功能。\n\n### 3.DHCP续租过程\n\n续租过程在一个客户端和DHCP服务器之间进行，总共分四步：\n\n第一步：客户端向DHCP服务器发送发现（Discover）数据包。\n\n第二步：DHCP服务器向客户端发送提供（Offer）数据包。\n\n第三步：客户端向DHCP服务器发送请求（Request）数据包。\n\n第四步：DHCP服务器向客户端发送确认（Acknowledgement）数据包。\n\n注意，租内续约只需要请求和确认两个步骤。\n","source":"_posts/15.动态主机配置协议DHCP.md","raw":"---\ntitle: 动态主机配置协议DHCP\ntype: tags\ndate: 2023-12-25 11:19:10\ntags:\n- DHCP\ncategories:\n- 技术\n---\n\n## 动态主机配置协议DHCP\n\n### 1.什么是DHCP\n\nDHCP是一个应用层协议，能够让设备自动获取IP地址（以及其他重要网络资源，比如DNS服务器和路由网关的地址）。\n\n### 2.DHCP头结构\n\n| 偏移位 |           0-15           |     16-31      |\n| :----: | :----------------------: | :------------: |\n|   0    |    操作代码\\|硬件类型    | 硬件长度\\|跳数 |\n|   32   |          事务id          |                |\n|   64   |         消耗时间         |      标记      |\n|   96   |       客户端IP地址       |                |\n|  128   |        你的IP地址        |                |\n|  160   |       服务器IP地址       |                |\n|  196   |        网关IP地址        |                |\n|  228+  | 客户端硬件地址（16字节） |                |\n|        | 服务器主机地址（64字节） |                |\n|        |   启动文件（128字节）    |                |\n|        |           选项           |                |\n\n- 操作代码（OpCode)：用来指出这个数据包是DHCP请求还是DHCP回复。\n- 硬件类型（Hardware Type）：硬件地址类型（10MB以太网、IEEE802等）。\n- 硬件长度（Hardware Length）：硬件地址长度。\n- 跳数（Hops）：中继代理用来帮助寻找DHCP服务器。\n- 事务ID（Transaction ID）：用来匹配请求和响应的一个随机数。\n- 标记（Flags）：DHCP客户端能够接受的流量类型（单播、广播以及其他）。\n- 客户端IP地址（Client IP Address）：客户端的IP地址。\n- 你的IP地址（Your IP　Address）：DHCP服务器提供的IP地址。\n- 服务器IP地址（Server　IP　Address）：DHCP服务器的IP地址。\n- 网关IP地址（Gateway　IP　Address）：网络默认网关的IP地址。\n- 客户端硬件地址（Client　Hardware　Address）：客户端的MAC地址。\n- 服务器主机名（Server　Host　Name）：服务器的主机名（可选）。\n- 启动文件（Boot　File）：DHCP所使用的启动文件（可选）。\n- 选项（Options）：用来对DHCP数据包进行扩展，以提供更多功能。\n\n### 3.DHCP续租过程\n\n续租过程在一个客户端和DHCP服务器之间进行，总共分四步：\n\n第一步：客户端向DHCP服务器发送发现（Discover）数据包。\n\n第二步：DHCP服务器向客户端发送提供（Offer）数据包。\n\n第三步：客户端向DHCP服务器发送请求（Request）数据包。\n\n第四步：DHCP服务器向客户端发送确认（Acknowledgement）数据包。\n\n注意，租内续约只需要请求和确认两个步骤。\n","slug":"15.动态主机配置协议DHCP","published":1,"updated":"2023-12-25T06:30:36.516Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg59w000em0fv2d23ei3t","content":"<h2 id=\"动态主机配置协议DHCP\"><a href=\"#动态主机配置协议DHCP\" class=\"headerlink\" title=\"动态主机配置协议DHCP\"></a>动态主机配置协议DHCP</h2><h3 id=\"1-什么是DHCP\"><a href=\"#1-什么是DHCP\" class=\"headerlink\" title=\"1.什么是DHCP\"></a>1.什么是DHCP</h3><p>DHCP是一个应用层协议，能够让设备自动获取IP地址（以及其他重要网络资源，比如DNS服务器和路由网关的地址）。</p>\n<h3 id=\"2-DHCP头结构\"><a href=\"#2-DHCP头结构\" class=\"headerlink\" title=\"2.DHCP头结构\"></a>2.DHCP头结构</h3><table>\n<thead>\n<tr>\n<th align=\"center\">偏移位</th>\n<th align=\"center\">0-15</th>\n<th align=\"center\">16-31</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">0</td>\n<td align=\"center\">操作代码|硬件类型</td>\n<td align=\"center\">硬件长度|跳数</td>\n</tr>\n<tr>\n<td align=\"center\">32</td>\n<td align=\"center\">事务id</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">64</td>\n<td align=\"center\">消耗时间</td>\n<td align=\"center\">标记</td>\n</tr>\n<tr>\n<td align=\"center\">96</td>\n<td align=\"center\">客户端IP地址</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">128</td>\n<td align=\"center\">你的IP地址</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">160</td>\n<td align=\"center\">服务器IP地址</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">196</td>\n<td align=\"center\">网关IP地址</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">228+</td>\n<td align=\"center\">客户端硬件地址（16字节）</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">服务器主机地址（64字节）</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">启动文件（128字节）</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">选项</td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<ul>\n<li>操作代码（OpCode)：用来指出这个数据包是DHCP请求还是DHCP回复。</li>\n<li>硬件类型（Hardware Type）：硬件地址类型（10MB以太网、IEEE802等）。</li>\n<li>硬件长度（Hardware Length）：硬件地址长度。</li>\n<li>跳数（Hops）：中继代理用来帮助寻找DHCP服务器。</li>\n<li>事务ID（Transaction ID）：用来匹配请求和响应的一个随机数。</li>\n<li>标记（Flags）：DHCP客户端能够接受的流量类型（单播、广播以及其他）。</li>\n<li>客户端IP地址（Client IP Address）：客户端的IP地址。</li>\n<li>你的IP地址（Your IP　Address）：DHCP服务器提供的IP地址。</li>\n<li>服务器IP地址（Server　IP　Address）：DHCP服务器的IP地址。</li>\n<li>网关IP地址（Gateway　IP　Address）：网络默认网关的IP地址。</li>\n<li>客户端硬件地址（Client　Hardware　Address）：客户端的MAC地址。</li>\n<li>服务器主机名（Server　Host　Name）：服务器的主机名（可选）。</li>\n<li>启动文件（Boot　File）：DHCP所使用的启动文件（可选）。</li>\n<li>选项（Options）：用来对DHCP数据包进行扩展，以提供更多功能。</li>\n</ul>\n<h3 id=\"3-DHCP续租过程\"><a href=\"#3-DHCP续租过程\" class=\"headerlink\" title=\"3.DHCP续租过程\"></a>3.DHCP续租过程</h3><p>续租过程在一个客户端和DHCP服务器之间进行，总共分四步：</p>\n<p>第一步：客户端向DHCP服务器发送发现（Discover）数据包。</p>\n<p>第二步：DHCP服务器向客户端发送提供（Offer）数据包。</p>\n<p>第三步：客户端向DHCP服务器发送请求（Request）数据包。</p>\n<p>第四步：DHCP服务器向客户端发送确认（Acknowledgement）数据包。</p>\n<p>注意，租内续约只需要请求和确认两个步骤。</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"动态主机配置协议DHCP\"><a href=\"#动态主机配置协议DHCP\" class=\"headerlink\" title=\"动态主机配置协议DHCP\"></a>动态主机配置协议DHCP</h2><h3 id=\"1-什么是DHCP\"><a href=\"#1-什么是DHCP\" class=\"headerlink\" title=\"1.什么是DHCP\"></a>1.什么是DHCP</h3><p>DHCP是一个应用层协议，能够让设备自动获取IP地址（以及其他重要网络资源，比如DNS服务器和路由网关的地址）。</p>\n<h3 id=\"2-DHCP头结构\"><a href=\"#2-DHCP头结构\" class=\"headerlink\" title=\"2.DHCP头结构\"></a>2.DHCP头结构</h3><table>\n<thead>\n<tr>\n<th align=\"center\">偏移位</th>\n<th align=\"center\">0-15</th>\n<th align=\"center\">16-31</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">0</td>\n<td align=\"center\">操作代码|硬件类型</td>\n<td align=\"center\">硬件长度|跳数</td>\n</tr>\n<tr>\n<td align=\"center\">32</td>\n<td align=\"center\">事务id</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">64</td>\n<td align=\"center\">消耗时间</td>\n<td align=\"center\">标记</td>\n</tr>\n<tr>\n<td align=\"center\">96</td>\n<td align=\"center\">客户端IP地址</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">128</td>\n<td align=\"center\">你的IP地址</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">160</td>\n<td align=\"center\">服务器IP地址</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">196</td>\n<td align=\"center\">网关IP地址</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">228+</td>\n<td align=\"center\">客户端硬件地址（16字节）</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">服务器主机地址（64字节）</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">启动文件（128字节）</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">选项</td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<ul>\n<li>操作代码（OpCode)：用来指出这个数据包是DHCP请求还是DHCP回复。</li>\n<li>硬件类型（Hardware Type）：硬件地址类型（10MB以太网、IEEE802等）。</li>\n<li>硬件长度（Hardware Length）：硬件地址长度。</li>\n<li>跳数（Hops）：中继代理用来帮助寻找DHCP服务器。</li>\n<li>事务ID（Transaction ID）：用来匹配请求和响应的一个随机数。</li>\n<li>标记（Flags）：DHCP客户端能够接受的流量类型（单播、广播以及其他）。</li>\n<li>客户端IP地址（Client IP Address）：客户端的IP地址。</li>\n<li>你的IP地址（Your IP　Address）：DHCP服务器提供的IP地址。</li>\n<li>服务器IP地址（Server　IP　Address）：DHCP服务器的IP地址。</li>\n<li>网关IP地址（Gateway　IP　Address）：网络默认网关的IP地址。</li>\n<li>客户端硬件地址（Client　Hardware　Address）：客户端的MAC地址。</li>\n<li>服务器主机名（Server　Host　Name）：服务器的主机名（可选）。</li>\n<li>启动文件（Boot　File）：DHCP所使用的启动文件（可选）。</li>\n<li>选项（Options）：用来对DHCP数据包进行扩展，以提供更多功能。</li>\n</ul>\n<h3 id=\"3-DHCP续租过程\"><a href=\"#3-DHCP续租过程\" class=\"headerlink\" title=\"3.DHCP续租过程\"></a>3.DHCP续租过程</h3><p>续租过程在一个客户端和DHCP服务器之间进行，总共分四步：</p>\n<p>第一步：客户端向DHCP服务器发送发现（Discover）数据包。</p>\n<p>第二步：DHCP服务器向客户端发送提供（Offer）数据包。</p>\n<p>第三步：客户端向DHCP服务器发送请求（Request）数据包。</p>\n<p>第四步：DHCP服务器向客户端发送确认（Acknowledgement）数据包。</p>\n<p>注意，租内续约只需要请求和确认两个步骤。</p>\n"},{"title":"域名系统DNS","type":"tags","date":"2023-12-25T06:31:14.000Z","_content":"\n## 域名系统DNS\n\nDNS服务器存储了一个有着IP地址和DNS名字映射资源记录的数据库，并将其和客户端与其他DNS服务器共享。\n\n### 1.DNS数据包结构\n\n| 偏移位 |      0-15      |                         16-31                          |\n| :----: | :------------: | :----------------------------------------------------: |\n|   0    |    DNS ID号    | QR \\| 操作代码\\| AA \\| TC \\| RD \\| RA \\| Z \\| 响应代码 |\n|   32   |    问题计数    |                        回答区段                        |\n|   64   | 域名服务器计数 |                      额外记录计数                      |\n|   96   |    问题区段    |                        回答区段                        |\n|  128   |    权威区段    |                      额外信息区段                      |\n\n- DNS ID号（DNS　ID　Number）：用来应对DNS查询和DNS响应。\n- 查询／响应（Query／Response）：用来指明这个数据包是DNS查询还是响应。\n- 操作代码（OpCode）：用来定义消息中的请求类型。\n- 权威应答（Authoritative Answer）：如果响应数据包中设定了这个则说明这个响应是由域内权威域名服务器发出的。\n- 截断（Truncation）：用来指明这个响应由于太长，无法装入数据包而被截断。\n- 期望递归（Recursion　Desired）：当请求中设定了这个值，则说明DNS客户端在目标域名服务器不含有所请求信息的情况下，要求进行递归查询。\n- 可用递归（Recursion　Available）：当响应中设定了这个值，说明域名服务器支持递归查询。\n- 响应代码（Response　Code）：在DNS响应中用来指明错误。\n- 问题计数（Question　Count）：在问题区段中的条目数。\n- 回答计数（Answer　Count）：在回答区段中的条目数。\n- 域名服务器计数（Name　Server　Count）：在权威区段的域名资源记录数。\n- 额外记录计数（Additional　Records　Count）：在额外信息区段中其他资源记录数。\n- 问题区段（Question　section）：大小可变，包含有被发送到DNS服务器的一条或多条的信息查询的部分。\n- 回答区段（Answer　Section）：大小可变，含有用来回答查询的一条或多条资源记录。\n- 权威区段（Authority　Section）：大小可变，包含指向权威域名服务器的资源记录，用以继续解析过程。\n- 额外信息区段（Additional　Information　Section）：包含资源记录且大小可变的区段，这些资源记录用来存储完全没有必要回答的查询相关的额外信息。\n\n### 2.常用的DNS资源记录类型\n\n| 值   | 类型  | 描述           |\n| ---- | ----- | -------------- |\n| １   | A     | IPv4主机地址   |\n| 2    | NS    | 权威域名服务器 |\n| 5    | CNAME | 规范别名       |\n| 15   | MX    | 邮件交换       |\n| 16   | TXT   | 文本字符串     |\n| 28   | AAAA  | IPv6主机地址   |\n| 251  | IXFR  | 增量区域传送   |\n| 252  | AXFR  | 完整区域传送   |\n\n- 完整区域传送（AXFR）：这个类型的传送将整个区域在设备间进行传送。\n- 增量区域传送（LXFR）：这个类型的传送仅传送区域信息的一部分。\n\n上面是指DNS主备服务器之间信息同步的不同方案。\n","source":"_posts/16.域名系统DNS.md","raw":"---\ntitle: 域名系统DNS\ntype: tags\ndate: 2023-12-25 14:31:14\ntags:\n- DNS\ncategories:\n- 技术\n---\n\n## 域名系统DNS\n\nDNS服务器存储了一个有着IP地址和DNS名字映射资源记录的数据库，并将其和客户端与其他DNS服务器共享。\n\n### 1.DNS数据包结构\n\n| 偏移位 |      0-15      |                         16-31                          |\n| :----: | :------------: | :----------------------------------------------------: |\n|   0    |    DNS ID号    | QR \\| 操作代码\\| AA \\| TC \\| RD \\| RA \\| Z \\| 响应代码 |\n|   32   |    问题计数    |                        回答区段                        |\n|   64   | 域名服务器计数 |                      额外记录计数                      |\n|   96   |    问题区段    |                        回答区段                        |\n|  128   |    权威区段    |                      额外信息区段                      |\n\n- DNS ID号（DNS　ID　Number）：用来应对DNS查询和DNS响应。\n- 查询／响应（Query／Response）：用来指明这个数据包是DNS查询还是响应。\n- 操作代码（OpCode）：用来定义消息中的请求类型。\n- 权威应答（Authoritative Answer）：如果响应数据包中设定了这个则说明这个响应是由域内权威域名服务器发出的。\n- 截断（Truncation）：用来指明这个响应由于太长，无法装入数据包而被截断。\n- 期望递归（Recursion　Desired）：当请求中设定了这个值，则说明DNS客户端在目标域名服务器不含有所请求信息的情况下，要求进行递归查询。\n- 可用递归（Recursion　Available）：当响应中设定了这个值，说明域名服务器支持递归查询。\n- 响应代码（Response　Code）：在DNS响应中用来指明错误。\n- 问题计数（Question　Count）：在问题区段中的条目数。\n- 回答计数（Answer　Count）：在回答区段中的条目数。\n- 域名服务器计数（Name　Server　Count）：在权威区段的域名资源记录数。\n- 额外记录计数（Additional　Records　Count）：在额外信息区段中其他资源记录数。\n- 问题区段（Question　section）：大小可变，包含有被发送到DNS服务器的一条或多条的信息查询的部分。\n- 回答区段（Answer　Section）：大小可变，含有用来回答查询的一条或多条资源记录。\n- 权威区段（Authority　Section）：大小可变，包含指向权威域名服务器的资源记录，用以继续解析过程。\n- 额外信息区段（Additional　Information　Section）：包含资源记录且大小可变的区段，这些资源记录用来存储完全没有必要回答的查询相关的额外信息。\n\n### 2.常用的DNS资源记录类型\n\n| 值   | 类型  | 描述           |\n| ---- | ----- | -------------- |\n| １   | A     | IPv4主机地址   |\n| 2    | NS    | 权威域名服务器 |\n| 5    | CNAME | 规范别名       |\n| 15   | MX    | 邮件交换       |\n| 16   | TXT   | 文本字符串     |\n| 28   | AAAA  | IPv6主机地址   |\n| 251  | IXFR  | 增量区域传送   |\n| 252  | AXFR  | 完整区域传送   |\n\n- 完整区域传送（AXFR）：这个类型的传送将整个区域在设备间进行传送。\n- 增量区域传送（LXFR）：这个类型的传送仅传送区域信息的一部分。\n\n上面是指DNS主备服务器之间信息同步的不同方案。\n","slug":"16.域名系统DNS","published":1,"updated":"2023-12-25T07:08:15.564Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg59y000im0fv0ai3b7th","content":"<h2 id=\"域名系统DNS\"><a href=\"#域名系统DNS\" class=\"headerlink\" title=\"域名系统DNS\"></a>域名系统DNS</h2><p>DNS服务器存储了一个有着IP地址和DNS名字映射资源记录的数据库，并将其和客户端与其他DNS服务器共享。</p>\n<h3 id=\"1-DNS数据包结构\"><a href=\"#1-DNS数据包结构\" class=\"headerlink\" title=\"1.DNS数据包结构\"></a>1.DNS数据包结构</h3><table>\n<thead>\n<tr>\n<th align=\"center\">偏移位</th>\n<th align=\"center\">0-15</th>\n<th align=\"center\">16-31</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">0</td>\n<td align=\"center\">DNS ID号</td>\n<td align=\"center\">QR | 操作代码| AA | TC | RD | RA | Z | 响应代码</td>\n</tr>\n<tr>\n<td align=\"center\">32</td>\n<td align=\"center\">问题计数</td>\n<td align=\"center\">回答区段</td>\n</tr>\n<tr>\n<td align=\"center\">64</td>\n<td align=\"center\">域名服务器计数</td>\n<td align=\"center\">额外记录计数</td>\n</tr>\n<tr>\n<td align=\"center\">96</td>\n<td align=\"center\">问题区段</td>\n<td align=\"center\">回答区段</td>\n</tr>\n<tr>\n<td align=\"center\">128</td>\n<td align=\"center\">权威区段</td>\n<td align=\"center\">额外信息区段</td>\n</tr>\n</tbody></table>\n<ul>\n<li>DNS ID号（DNS　ID　Number）：用来应对DNS查询和DNS响应。</li>\n<li>查询／响应（Query／Response）：用来指明这个数据包是DNS查询还是响应。</li>\n<li>操作代码（OpCode）：用来定义消息中的请求类型。</li>\n<li>权威应答（Authoritative Answer）：如果响应数据包中设定了这个则说明这个响应是由域内权威域名服务器发出的。</li>\n<li>截断（Truncation）：用来指明这个响应由于太长，无法装入数据包而被截断。</li>\n<li>期望递归（Recursion　Desired）：当请求中设定了这个值，则说明DNS客户端在目标域名服务器不含有所请求信息的情况下，要求进行递归查询。</li>\n<li>可用递归（Recursion　Available）：当响应中设定了这个值，说明域名服务器支持递归查询。</li>\n<li>响应代码（Response　Code）：在DNS响应中用来指明错误。</li>\n<li>问题计数（Question　Count）：在问题区段中的条目数。</li>\n<li>回答计数（Answer　Count）：在回答区段中的条目数。</li>\n<li>域名服务器计数（Name　Server　Count）：在权威区段的域名资源记录数。</li>\n<li>额外记录计数（Additional　Records　Count）：在额外信息区段中其他资源记录数。</li>\n<li>问题区段（Question　section）：大小可变，包含有被发送到DNS服务器的一条或多条的信息查询的部分。</li>\n<li>回答区段（Answer　Section）：大小可变，含有用来回答查询的一条或多条资源记录。</li>\n<li>权威区段（Authority　Section）：大小可变，包含指向权威域名服务器的资源记录，用以继续解析过程。</li>\n<li>额外信息区段（Additional　Information　Section）：包含资源记录且大小可变的区段，这些资源记录用来存储完全没有必要回答的查询相关的额外信息。</li>\n</ul>\n<h3 id=\"2-常用的DNS资源记录类型\"><a href=\"#2-常用的DNS资源记录类型\" class=\"headerlink\" title=\"2.常用的DNS资源记录类型\"></a>2.常用的DNS资源记录类型</h3><table>\n<thead>\n<tr>\n<th>值</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>１</td>\n<td>A</td>\n<td>IPv4主机地址</td>\n</tr>\n<tr>\n<td>2</td>\n<td>NS</td>\n<td>权威域名服务器</td>\n</tr>\n<tr>\n<td>5</td>\n<td>CNAME</td>\n<td>规范别名</td>\n</tr>\n<tr>\n<td>15</td>\n<td>MX</td>\n<td>邮件交换</td>\n</tr>\n<tr>\n<td>16</td>\n<td>TXT</td>\n<td>文本字符串</td>\n</tr>\n<tr>\n<td>28</td>\n<td>AAAA</td>\n<td>IPv6主机地址</td>\n</tr>\n<tr>\n<td>251</td>\n<td>IXFR</td>\n<td>增量区域传送</td>\n</tr>\n<tr>\n<td>252</td>\n<td>AXFR</td>\n<td>完整区域传送</td>\n</tr>\n</tbody></table>\n<ul>\n<li>完整区域传送（AXFR）：这个类型的传送将整个区域在设备间进行传送。</li>\n<li>增量区域传送（LXFR）：这个类型的传送仅传送区域信息的一部分。</li>\n</ul>\n<p>上面是指DNS主备服务器之间信息同步的不同方案。</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"域名系统DNS\"><a href=\"#域名系统DNS\" class=\"headerlink\" title=\"域名系统DNS\"></a>域名系统DNS</h2><p>DNS服务器存储了一个有着IP地址和DNS名字映射资源记录的数据库，并将其和客户端与其他DNS服务器共享。</p>\n<h3 id=\"1-DNS数据包结构\"><a href=\"#1-DNS数据包结构\" class=\"headerlink\" title=\"1.DNS数据包结构\"></a>1.DNS数据包结构</h3><table>\n<thead>\n<tr>\n<th align=\"center\">偏移位</th>\n<th align=\"center\">0-15</th>\n<th align=\"center\">16-31</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">0</td>\n<td align=\"center\">DNS ID号</td>\n<td align=\"center\">QR | 操作代码| AA | TC | RD | RA | Z | 响应代码</td>\n</tr>\n<tr>\n<td align=\"center\">32</td>\n<td align=\"center\">问题计数</td>\n<td align=\"center\">回答区段</td>\n</tr>\n<tr>\n<td align=\"center\">64</td>\n<td align=\"center\">域名服务器计数</td>\n<td align=\"center\">额外记录计数</td>\n</tr>\n<tr>\n<td align=\"center\">96</td>\n<td align=\"center\">问题区段</td>\n<td align=\"center\">回答区段</td>\n</tr>\n<tr>\n<td align=\"center\">128</td>\n<td align=\"center\">权威区段</td>\n<td align=\"center\">额外信息区段</td>\n</tr>\n</tbody></table>\n<ul>\n<li>DNS ID号（DNS　ID　Number）：用来应对DNS查询和DNS响应。</li>\n<li>查询／响应（Query／Response）：用来指明这个数据包是DNS查询还是响应。</li>\n<li>操作代码（OpCode）：用来定义消息中的请求类型。</li>\n<li>权威应答（Authoritative Answer）：如果响应数据包中设定了这个则说明这个响应是由域内权威域名服务器发出的。</li>\n<li>截断（Truncation）：用来指明这个响应由于太长，无法装入数据包而被截断。</li>\n<li>期望递归（Recursion　Desired）：当请求中设定了这个值，则说明DNS客户端在目标域名服务器不含有所请求信息的情况下，要求进行递归查询。</li>\n<li>可用递归（Recursion　Available）：当响应中设定了这个值，说明域名服务器支持递归查询。</li>\n<li>响应代码（Response　Code）：在DNS响应中用来指明错误。</li>\n<li>问题计数（Question　Count）：在问题区段中的条目数。</li>\n<li>回答计数（Answer　Count）：在回答区段中的条目数。</li>\n<li>域名服务器计数（Name　Server　Count）：在权威区段的域名资源记录数。</li>\n<li>额外记录计数（Additional　Records　Count）：在额外信息区段中其他资源记录数。</li>\n<li>问题区段（Question　section）：大小可变，包含有被发送到DNS服务器的一条或多条的信息查询的部分。</li>\n<li>回答区段（Answer　Section）：大小可变，含有用来回答查询的一条或多条资源记录。</li>\n<li>权威区段（Authority　Section）：大小可变，包含指向权威域名服务器的资源记录，用以继续解析过程。</li>\n<li>额外信息区段（Additional　Information　Section）：包含资源记录且大小可变的区段，这些资源记录用来存储完全没有必要回答的查询相关的额外信息。</li>\n</ul>\n<h3 id=\"2-常用的DNS资源记录类型\"><a href=\"#2-常用的DNS资源记录类型\" class=\"headerlink\" title=\"2.常用的DNS资源记录类型\"></a>2.常用的DNS资源记录类型</h3><table>\n<thead>\n<tr>\n<th>值</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>１</td>\n<td>A</td>\n<td>IPv4主机地址</td>\n</tr>\n<tr>\n<td>2</td>\n<td>NS</td>\n<td>权威域名服务器</td>\n</tr>\n<tr>\n<td>5</td>\n<td>CNAME</td>\n<td>规范别名</td>\n</tr>\n<tr>\n<td>15</td>\n<td>MX</td>\n<td>邮件交换</td>\n</tr>\n<tr>\n<td>16</td>\n<td>TXT</td>\n<td>文本字符串</td>\n</tr>\n<tr>\n<td>28</td>\n<td>AAAA</td>\n<td>IPv6主机地址</td>\n</tr>\n<tr>\n<td>251</td>\n<td>IXFR</td>\n<td>增量区域传送</td>\n</tr>\n<tr>\n<td>252</td>\n<td>AXFR</td>\n<td>完整区域传送</td>\n</tr>\n</tbody></table>\n<ul>\n<li>完整区域传送（AXFR）：这个类型的传送将整个区域在设备间进行传送。</li>\n<li>增量区域传送（LXFR）：这个类型的传送仅传送区域信息的一部分。</li>\n</ul>\n<p>上面是指DNS主备服务器之间信息同步的不同方案。</p>\n"},{"title":"超文本传输协议HTTP","type":"tags","date":"2023-12-25T07:13:39.000Z","_content":"\n## 超文本传输协议HTTP\n","source":"_posts/17.超文本传输协议HTTP.md","raw":"---\ntitle: 超文本传输协议HTTP\ntype: tags\ndate: 2023-12-25 15:13:39\ntags:\n- HTTP\ncategories:\n- 技术\n---\n\n## 超文本传输协议HTTP\n","slug":"17.超文本传输协议HTTP","published":1,"updated":"2023-12-25T07:29:23.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg59z000km0fvejgd45qw","content":"<h2 id=\"超文本传输协议HTTP\"><a href=\"#超文本传输协议HTTP\" class=\"headerlink\" title=\"超文本传输协议HTTP\"></a>超文本传输协议HTTP</h2>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"超文本传输协议HTTP\"><a href=\"#超文本传输协议HTTP\" class=\"headerlink\" title=\"超文本传输协议HTTP\"></a>超文本传输协议HTTP</h2>"},{"title":"使用hexo搭建个人博客","date":"2021-12-11T08:17:26.000Z","type":"tags","_content":"\n# 使用hexo搭建个人博客\n\n### 前言\n\n 目前使用hexo配合github来搭建个人博客十分常见，最近摸索了下相关技术，使用hexo➕GitHub搭建了个人博客，并且使用到了next主题，在此做个总结。\n\n### 环境准备\n\n1、安装Node.js环境。（Hexo基于Node.js，因此搭建过程需要使用到相关环境）\n\n2、安装Git。（用于与GitHub链接及日常推送）\n\n3、将本地环境的ssh公钥配置到GitHub。\n\n4、初始化本地git配置。\n\n```\ngit config --global user.name \"GitHub 用户名\"\ngit config --global user.email \"GitHub 邮箱\"\n```\n\n5、创建GitHub的仓库。（仓库名使用：用户名.github.io）\n\n### 安装本地Hexo\n\n1、npm一键安装hexo.\n\n```\n# Mac环境。\nsudo npm install -g hexo-cli\n```\n\n2、hexo初始化\n\n```\n# cd到准备的博客目录（如blog）\ncd /blog\n\n# 初始化\nhexo init\n\n# 安装组件\nnpm install\n```\n\n3、测试安装结果。\n\n```\n# 生成页面\nhexo g\n\n# 启动预览\nhexo s\n```\n\n此时若在浏览器访问`http://localhost:4000`，如果出现 Hexo 默认页面，则本地博客安装成功。\n\n### 将Hexo推送到GitHub\n\n1、安装推送插件。\n\n```\n# workdir 博客目录（/blog下）\nnpm install hexo-deployer-git --save\n```\n\n2、修改工作目录下的`_config.yml` 文件的deploy部分，修改成如下\n\n```\ndeploy:\n  type: git\n  repository: git@github.com:用户名/用户名.github.io.git\n  branch: main\n```\n\n3、将Hexo推送到GitHub。\n\n```\nhexo d\n```\n\n4、访问`https://用户名.github.io` 来确认下推送结果。\n\n### 使用next主题\n\n1、到博客目录下载next主题资源。\n\n```\n# cd到博客目录\ngit clone https://github.com/next-theme/hexo-theme-next themes/next\n```\n\n2、修改Hexo的 `_config.yml` 中的theme为新主题名称 next，如下\n\n```\ntheme: next\n```\n\n3、推送到GitHub。\n\n```\nhexo d\n```\n\n4、访问`https://用户名.github.io` 来确认下推送结果。\n\n### 结语\n\n 到此，一个简单的个人博客雏形就搭建完毕了。Next主体有许多美化配置，可以让我们的博客更好看。接下来就让我们来看看next的个性化配置。\n","source":"_posts/2.使用hexo搭建个人博客.md","raw":"---\ntitle: 使用hexo搭建个人博客\ndate: 2021-12-11 16:17:26\ntags:\n- hexo\n- next\n- 博客\ncategories:\n- 技术\ntype: \"tags\"\n---\n\n# 使用hexo搭建个人博客\n\n### 前言\n\n 目前使用hexo配合github来搭建个人博客十分常见，最近摸索了下相关技术，使用hexo➕GitHub搭建了个人博客，并且使用到了next主题，在此做个总结。\n\n### 环境准备\n\n1、安装Node.js环境。（Hexo基于Node.js，因此搭建过程需要使用到相关环境）\n\n2、安装Git。（用于与GitHub链接及日常推送）\n\n3、将本地环境的ssh公钥配置到GitHub。\n\n4、初始化本地git配置。\n\n```\ngit config --global user.name \"GitHub 用户名\"\ngit config --global user.email \"GitHub 邮箱\"\n```\n\n5、创建GitHub的仓库。（仓库名使用：用户名.github.io）\n\n### 安装本地Hexo\n\n1、npm一键安装hexo.\n\n```\n# Mac环境。\nsudo npm install -g hexo-cli\n```\n\n2、hexo初始化\n\n```\n# cd到准备的博客目录（如blog）\ncd /blog\n\n# 初始化\nhexo init\n\n# 安装组件\nnpm install\n```\n\n3、测试安装结果。\n\n```\n# 生成页面\nhexo g\n\n# 启动预览\nhexo s\n```\n\n此时若在浏览器访问`http://localhost:4000`，如果出现 Hexo 默认页面，则本地博客安装成功。\n\n### 将Hexo推送到GitHub\n\n1、安装推送插件。\n\n```\n# workdir 博客目录（/blog下）\nnpm install hexo-deployer-git --save\n```\n\n2、修改工作目录下的`_config.yml` 文件的deploy部分，修改成如下\n\n```\ndeploy:\n  type: git\n  repository: git@github.com:用户名/用户名.github.io.git\n  branch: main\n```\n\n3、将Hexo推送到GitHub。\n\n```\nhexo d\n```\n\n4、访问`https://用户名.github.io` 来确认下推送结果。\n\n### 使用next主题\n\n1、到博客目录下载next主题资源。\n\n```\n# cd到博客目录\ngit clone https://github.com/next-theme/hexo-theme-next themes/next\n```\n\n2、修改Hexo的 `_config.yml` 中的theme为新主题名称 next，如下\n\n```\ntheme: next\n```\n\n3、推送到GitHub。\n\n```\nhexo d\n```\n\n4、访问`https://用户名.github.io` 来确认下推送结果。\n\n### 结语\n\n 到此，一个简单的个人博客雏形就搭建完毕了。Next主体有许多美化配置，可以让我们的博客更好看。接下来就让我们来看看next的个性化配置。\n","slug":"2.使用hexo搭建个人博客","published":1,"updated":"2023-12-21T03:48:21.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg5a1000om0fv8hvma3i0","content":"<h1 id=\"使用hexo搭建个人博客\"><a href=\"#使用hexo搭建个人博客\" class=\"headerlink\" title=\"使用hexo搭建个人博客\"></a>使用hexo搭建个人博客</h1><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p> 目前使用hexo配合github来搭建个人博客十分常见，最近摸索了下相关技术，使用hexo➕GitHub搭建了个人博客，并且使用到了next主题，在此做个总结。</p>\n<h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><p>1、安装Node.js环境。（Hexo基于Node.js，因此搭建过程需要使用到相关环境）</p>\n<p>2、安装Git。（用于与GitHub链接及日常推送）</p>\n<p>3、将本地环境的ssh公钥配置到GitHub。</p>\n<p>4、初始化本地git配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>\n\n<p>5、创建GitHub的仓库。（仓库名使用：用户名.github.io）</p>\n<h3 id=\"安装本地Hexo\"><a href=\"#安装本地Hexo\" class=\"headerlink\" title=\"安装本地Hexo\"></a>安装本地Hexo</h3><p>1、npm一键安装hexo.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Mac环境。</span><br><span class=\"line\">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>2、hexo初始化</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cd到准备的博客目录（如blog）</span><br><span class=\"line\">cd /blog</span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化</span><br><span class=\"line\">hexo init</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装组件</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>3、测试安装结果。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 生成页面</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动预览</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>此时若在浏览器访问<code>http://localhost:4000</code>，如果出现 Hexo 默认页面，则本地博客安装成功。</p>\n<h3 id=\"将Hexo推送到GitHub\"><a href=\"#将Hexo推送到GitHub\" class=\"headerlink\" title=\"将Hexo推送到GitHub\"></a>将Hexo推送到GitHub</h3><p>1、安装推送插件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># workdir 博客目录（/blog下）</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>2、修改工作目录下的<code>_config.yml</code> 文件的deploy部分，修改成如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class=\"line\">  branch: main</span><br></pre></td></tr></table></figure>\n\n<p>3、将Hexo推送到GitHub。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>4、访问<code>https://用户名.github.io</code> 来确认下推送结果。</p>\n<h3 id=\"使用next主题\"><a href=\"#使用next主题\" class=\"headerlink\" title=\"使用next主题\"></a>使用next主题</h3><p>1、到博客目录下载next主题资源。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cd到博客目录</span><br><span class=\"line\">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p>2、修改Hexo的 <code>_config.yml</code> 中的theme为新主题名称 next，如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n\n<p>3、推送到GitHub。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>4、访问<code>https://用户名.github.io</code> 来确认下推送结果。</p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p> 到此，一个简单的个人博客雏形就搭建完毕了。Next主体有许多美化配置，可以让我们的博客更好看。接下来就让我们来看看next的个性化配置。</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"使用hexo搭建个人博客\"><a href=\"#使用hexo搭建个人博客\" class=\"headerlink\" title=\"使用hexo搭建个人博客\"></a>使用hexo搭建个人博客</h1><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p> 目前使用hexo配合github来搭建个人博客十分常见，最近摸索了下相关技术，使用hexo➕GitHub搭建了个人博客，并且使用到了next主题，在此做个总结。</p>\n<h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><p>1、安装Node.js环境。（Hexo基于Node.js，因此搭建过程需要使用到相关环境）</p>\n<p>2、安装Git。（用于与GitHub链接及日常推送）</p>\n<p>3、将本地环境的ssh公钥配置到GitHub。</p>\n<p>4、初始化本地git配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>\n\n<p>5、创建GitHub的仓库。（仓库名使用：用户名.github.io）</p>\n<h3 id=\"安装本地Hexo\"><a href=\"#安装本地Hexo\" class=\"headerlink\" title=\"安装本地Hexo\"></a>安装本地Hexo</h3><p>1、npm一键安装hexo.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Mac环境。</span><br><span class=\"line\">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>2、hexo初始化</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cd到准备的博客目录（如blog）</span><br><span class=\"line\">cd /blog</span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化</span><br><span class=\"line\">hexo init</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装组件</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>3、测试安装结果。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 生成页面</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动预览</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>此时若在浏览器访问<code>http://localhost:4000</code>，如果出现 Hexo 默认页面，则本地博客安装成功。</p>\n<h3 id=\"将Hexo推送到GitHub\"><a href=\"#将Hexo推送到GitHub\" class=\"headerlink\" title=\"将Hexo推送到GitHub\"></a>将Hexo推送到GitHub</h3><p>1、安装推送插件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># workdir 博客目录（/blog下）</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>2、修改工作目录下的<code>_config.yml</code> 文件的deploy部分，修改成如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class=\"line\">  branch: main</span><br></pre></td></tr></table></figure>\n\n<p>3、将Hexo推送到GitHub。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>4、访问<code>https://用户名.github.io</code> 来确认下推送结果。</p>\n<h3 id=\"使用next主题\"><a href=\"#使用next主题\" class=\"headerlink\" title=\"使用next主题\"></a>使用next主题</h3><p>1、到博客目录下载next主题资源。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cd到博客目录</span><br><span class=\"line\">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p>2、修改Hexo的 <code>_config.yml</code> 中的theme为新主题名称 next，如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n\n<p>3、推送到GitHub。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>4、访问<code>https://用户名.github.io</code> 来确认下推送结果。</p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p> 到此，一个简单的个人博客雏形就搭建完毕了。Next主体有许多美化配置，可以让我们的博客更好看。接下来就让我们来看看next的个性化配置。</p>\n"},{"title":"next主题美化配置","date":"2021-12-11T08:14:58.000Z","type":"tags","_content":"\n# next主题美化配置\n\n### 前言\n\n 网上关于Hexo的主题美化博客较多，本文用以记录搭建本博客网站过程中使用到的next主题美化配置。给大家做个参考，与大家一起学习进步。\n\n### 常规配置\n\n1、打开**站点**配置文件(hexo的配置文件)`_config.yml`,修改配置。\n\n```\n# Site\ntitle: baronの博客\nsubtitle: '指点江山，激扬文字，粪土当年万户侯。'\ndescription: '生活、工作、游戏、读书，偶有所得，以此为记。'\nkeywords: baron\nauthor: baron\nlanguage: zh-CN\ntimezone: Asia/Shanghai\n```\n\n<!--more-->\n\n2、将我们的头像放置在/themes/next/sources/images目录下，打开主题配置文件`_config.yml`，修改配置。\n\n```\n# Sidebar Avatar\navatar:\n  # Replace the default image and set the url here.\n  url: /images/baron.jpg\n  # If true, the avatar will be dispalyed in circle.\n  rounded: false\n  # If true, the avatar will be rotated with the cursor.\n  rotated: false\n```\n\n### 自定义博客图标\n\n next博客的默认图标是`H`，不过Next支持修改图标。\n\n我们需要将我们的图标放置在/themes/next/sources/images目录下，并在主题配置文件中进行如下配置，只需要设置small和medium两个就可以（不同尺寸的图标可以到网上制作）。\n\n```\nfavicon:\n  small: /images/baron_16px.ico\n  medium: /images/baron_32px.ico\n  apple_touch_icon: /images/apple-touch-icon-next.png\n  safari_pinned_tab: /images/logo.svg\n```\n\n### 添加点击效果\n\n1、在/themes/next/source/js目录下，新建clicklove.js文件：\n\n```\ncd /themes/next/source/js\ntouch clicklove.js\n```\n\n2、将下面的代码粘贴进clicklove.js文件中：\n\n```\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n\n3、在`\\themes\\next\\layout\\_layout.swig`文件末尾添加：\n\n```\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/clicklove.js\"></script>\n```\n\n### 添加社交信息\n\n1、打开主题配置`_config.yml`，进行相关参数修改：\n\n```\n# 修改对应的社交信息。\nsocial:\n  GitHub: https://github.com/mebaron || fab fa-github\n  E-Mail: mailto:ecustbaron@gmail.com || fa fa-envelope\n  #Weibo: https://weibo.com/yourname || fab fa-weibo\n  #Google: https://plus.google.com/yourname || fab fa-google\n  #Twitter: https://twitter.com/yourname || fab fa-twitter\n  #FB Page: https://www.facebook.com/yourname || fab fa-facebook\n  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow\n  #YouTube: https://youtube.com/yourname || fab fa-youtube\n  #Instagram: https://instagram.com/yourname || fab fa-instagram\n  #Skype: skype:yourname?call|chat || fab fa-skype\n```\n\n### 添加背景\n\n1、下载相应的资源包：\n\n```\n# 在工作目录执行\ngit clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest\n```\n\n2、在主题配置`themes/next/_config.yml`中做相关参数修改：\n\n```\n# Canvas-nest\n# Dependencies: https://github.com/theme-next/theme-next-canvas-nest\ncanvas_nest: # 网络背景\n  enable: true\n  onmobile: true # display on mobile or not\n  color: '0,0,0' # RGB values, use ',' to separate\n  opacity: 0.5 # the opacity of line: 0~1\n  zIndex: -1 # z-index property of the background\n  count: 150 # the number of lines\n```\n\n### 增加文章结束标志\n\n1、在路径/themes/next/layout/_macro文件夹中新建passage-end-tag.swig文件：\n\n```\n# 切换到路径_macro\ncd [_macro路径]\n# 创建passage-end-tag.swig文件\ntouch passage-end-tag.swig\n```\n\n2、打开passage-end-tag.swig文件，添加以下内容：\n\n```\n<div>\n    {% if not is_index %}\n        <div style=\"text-align:center;color: #ccc;font-size:14px;\">-------------本文结束<i class=\"fa fa-paw\"></i>感谢您的阅读-------------</div>\n    {% endif %}\n</div>\n```\n\n3、打开/themes/next/layout/_macro/post.swig，在post-body之后，post-footer之前，添加以下代码：\n\n```\n<div>\n  {% if not is_index %}\n    {% include 'passage-end-tag.swig' %}\n  {% endif %}\n</div>\n```\n\n4、然后打开主题配置文件`_config.yml`,在末尾添加：\n\n```\n# 文章末尾添加“本文结束”标记\npassage_end_tag:\n  enabled: true\n```\n\n### 添加文章版权信息\n\n1、打开主题配置_config.yml，进行相关参数设置：\n\n```\ncreative_commons:\n  license: by-nc-sa\n  sidebar: true\n  post: true\n```\n\n### 添加搜索功能\n\n1、安装hexo-generator-searchdb插件.\n\n```\ncd 文件目录\nnpm install hexo-generator-searchdb --save\n```\n\n2、打开**站点**配置文件(hexo的配置文件)`_config.yml`,添加配置:\n\n```\n# 搜索\nsearch:\n  path: ./public/search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n","source":"_posts/3.next主题美化配置.md","raw":"---\ntitle: next主题美化配置\ndate: 2021-12-11 16:14:58\ntags:\n- hexo\n- next\n- 博客\ncategories:\n- 技术\ntype: \"tags\"\n---\n\n# next主题美化配置\n\n### 前言\n\n 网上关于Hexo的主题美化博客较多，本文用以记录搭建本博客网站过程中使用到的next主题美化配置。给大家做个参考，与大家一起学习进步。\n\n### 常规配置\n\n1、打开**站点**配置文件(hexo的配置文件)`_config.yml`,修改配置。\n\n```\n# Site\ntitle: baronの博客\nsubtitle: '指点江山，激扬文字，粪土当年万户侯。'\ndescription: '生活、工作、游戏、读书，偶有所得，以此为记。'\nkeywords: baron\nauthor: baron\nlanguage: zh-CN\ntimezone: Asia/Shanghai\n```\n\n<!--more-->\n\n2、将我们的头像放置在/themes/next/sources/images目录下，打开主题配置文件`_config.yml`，修改配置。\n\n```\n# Sidebar Avatar\navatar:\n  # Replace the default image and set the url here.\n  url: /images/baron.jpg\n  # If true, the avatar will be dispalyed in circle.\n  rounded: false\n  # If true, the avatar will be rotated with the cursor.\n  rotated: false\n```\n\n### 自定义博客图标\n\n next博客的默认图标是`H`，不过Next支持修改图标。\n\n我们需要将我们的图标放置在/themes/next/sources/images目录下，并在主题配置文件中进行如下配置，只需要设置small和medium两个就可以（不同尺寸的图标可以到网上制作）。\n\n```\nfavicon:\n  small: /images/baron_16px.ico\n  medium: /images/baron_32px.ico\n  apple_touch_icon: /images/apple-touch-icon-next.png\n  safari_pinned_tab: /images/logo.svg\n```\n\n### 添加点击效果\n\n1、在/themes/next/source/js目录下，新建clicklove.js文件：\n\n```\ncd /themes/next/source/js\ntouch clicklove.js\n```\n\n2、将下面的代码粘贴进clicklove.js文件中：\n\n```\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n\n3、在`\\themes\\next\\layout\\_layout.swig`文件末尾添加：\n\n```\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/clicklove.js\"></script>\n```\n\n### 添加社交信息\n\n1、打开主题配置`_config.yml`，进行相关参数修改：\n\n```\n# 修改对应的社交信息。\nsocial:\n  GitHub: https://github.com/mebaron || fab fa-github\n  E-Mail: mailto:ecustbaron@gmail.com || fa fa-envelope\n  #Weibo: https://weibo.com/yourname || fab fa-weibo\n  #Google: https://plus.google.com/yourname || fab fa-google\n  #Twitter: https://twitter.com/yourname || fab fa-twitter\n  #FB Page: https://www.facebook.com/yourname || fab fa-facebook\n  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow\n  #YouTube: https://youtube.com/yourname || fab fa-youtube\n  #Instagram: https://instagram.com/yourname || fab fa-instagram\n  #Skype: skype:yourname?call|chat || fab fa-skype\n```\n\n### 添加背景\n\n1、下载相应的资源包：\n\n```\n# 在工作目录执行\ngit clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest\n```\n\n2、在主题配置`themes/next/_config.yml`中做相关参数修改：\n\n```\n# Canvas-nest\n# Dependencies: https://github.com/theme-next/theme-next-canvas-nest\ncanvas_nest: # 网络背景\n  enable: true\n  onmobile: true # display on mobile or not\n  color: '0,0,0' # RGB values, use ',' to separate\n  opacity: 0.5 # the opacity of line: 0~1\n  zIndex: -1 # z-index property of the background\n  count: 150 # the number of lines\n```\n\n### 增加文章结束标志\n\n1、在路径/themes/next/layout/_macro文件夹中新建passage-end-tag.swig文件：\n\n```\n# 切换到路径_macro\ncd [_macro路径]\n# 创建passage-end-tag.swig文件\ntouch passage-end-tag.swig\n```\n\n2、打开passage-end-tag.swig文件，添加以下内容：\n\n```\n<div>\n    {% if not is_index %}\n        <div style=\"text-align:center;color: #ccc;font-size:14px;\">-------------本文结束<i class=\"fa fa-paw\"></i>感谢您的阅读-------------</div>\n    {% endif %}\n</div>\n```\n\n3、打开/themes/next/layout/_macro/post.swig，在post-body之后，post-footer之前，添加以下代码：\n\n```\n<div>\n  {% if not is_index %}\n    {% include 'passage-end-tag.swig' %}\n  {% endif %}\n</div>\n```\n\n4、然后打开主题配置文件`_config.yml`,在末尾添加：\n\n```\n# 文章末尾添加“本文结束”标记\npassage_end_tag:\n  enabled: true\n```\n\n### 添加文章版权信息\n\n1、打开主题配置_config.yml，进行相关参数设置：\n\n```\ncreative_commons:\n  license: by-nc-sa\n  sidebar: true\n  post: true\n```\n\n### 添加搜索功能\n\n1、安装hexo-generator-searchdb插件.\n\n```\ncd 文件目录\nnpm install hexo-generator-searchdb --save\n```\n\n2、打开**站点**配置文件(hexo的配置文件)`_config.yml`,添加配置:\n\n```\n# 搜索\nsearch:\n  path: ./public/search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n","slug":"3.next主题美化配置","published":1,"updated":"2023-12-25T09:15:49.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg5a2000rm0fv5gsd2tvz","content":"<h1 id=\"next主题美化配置\"><a href=\"#next主题美化配置\" class=\"headerlink\" title=\"next主题美化配置\"></a>next主题美化配置</h1><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p> 网上关于Hexo的主题美化博客较多，本文用以记录搭建本博客网站过程中使用到的next主题美化配置。给大家做个参考，与大家一起学习进步。</p>\n<h3 id=\"常规配置\"><a href=\"#常规配置\" class=\"headerlink\" title=\"常规配置\"></a>常规配置</h3><p>1、打开<strong>站点</strong>配置文件(hexo的配置文件)<code>_config.yml</code>,修改配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: baronの博客</span><br><span class=\"line\">subtitle: &#x27;指点江山，激扬文字，粪土当年万户侯。&#x27;</span><br><span class=\"line\">description: &#x27;生活、工作、游戏、读书，偶有所得，以此为记。&#x27;</span><br><span class=\"line\">keywords: baron</span><br><span class=\"line\">author: baron</span><br><span class=\"line\">language: zh-CN</span><br><span class=\"line\">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<p>2、将我们的头像放置在/themes/next/sources/images目录下，打开主题配置文件<code>_config.yml</code>，修改配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Sidebar Avatar</span><br><span class=\"line\">avatar:</span><br><span class=\"line\">  # Replace the default image and set the url here.</span><br><span class=\"line\">  url: /images/baron.jpg</span><br><span class=\"line\">  # If true, the avatar will be dispalyed in circle.</span><br><span class=\"line\">  rounded: false</span><br><span class=\"line\">  # If true, the avatar will be rotated with the cursor.</span><br><span class=\"line\">  rotated: false</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义博客图标\"><a href=\"#自定义博客图标\" class=\"headerlink\" title=\"自定义博客图标\"></a>自定义博客图标</h3><p> next博客的默认图标是<code>H</code>，不过Next支持修改图标。</p>\n<p>我们需要将我们的图标放置在/themes/next/sources/images目录下，并在主题配置文件中进行如下配置，只需要设置small和medium两个就可以（不同尺寸的图标可以到网上制作）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favicon:</span><br><span class=\"line\">  small: /images/baron_16px.ico</span><br><span class=\"line\">  medium: /images/baron_32px.ico</span><br><span class=\"line\">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class=\"line\">  safari_pinned_tab: /images/logo.svg</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加点击效果\"><a href=\"#添加点击效果\" class=\"headerlink\" title=\"添加点击效果\"></a>添加点击效果</h3><p>1、在/themes/next/source/js目录下，新建clicklove.js文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /themes/next/source/js</span><br><span class=\"line\">touch clicklove.js</span><br></pre></td></tr></table></figure>\n\n<p>2、将下面的代码粘贴进clicklove.js文件中：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>\n\n<p>3、在<code>\\themes\\next\\layout\\_layout.swig</code>文件末尾添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加社交信息\"><a href=\"#添加社交信息\" class=\"headerlink\" title=\"添加社交信息\"></a>添加社交信息</h3><p>1、打开主题配置<code>_config.yml</code>，进行相关参数修改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 修改对应的社交信息。</span><br><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/mebaron || fab fa-github</span><br><span class=\"line\">  E-Mail: mailto:ecustbaron@gmail.com || fa fa-envelope</span><br><span class=\"line\">  #Weibo: https://weibo.com/yourname || fab fa-weibo</span><br><span class=\"line\">  #Google: https://plus.google.com/yourname || fab fa-google</span><br><span class=\"line\">  #Twitter: https://twitter.com/yourname || fab fa-twitter</span><br><span class=\"line\">  #FB Page: https://www.facebook.com/yourname || fab fa-facebook</span><br><span class=\"line\">  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span><br><span class=\"line\">  #YouTube: https://youtube.com/yourname || fab fa-youtube</span><br><span class=\"line\">  #Instagram: https://instagram.com/yourname || fab fa-instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加背景\"><a href=\"#添加背景\" class=\"headerlink\" title=\"添加背景\"></a>添加背景</h3><p>1、下载相应的资源包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 在工作目录执行</span><br><span class=\"line\">git clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest</span><br></pre></td></tr></table></figure>\n\n<p>2、在主题配置<code>themes/next/_config.yml</code>中做相关参数修改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Canvas-nest</span><br><span class=\"line\"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span><br><span class=\"line\">canvas_nest: # 网络背景</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  onmobile: true # display on mobile or not</span><br><span class=\"line\">  color: &#x27;0,0,0&#x27; # RGB values, use &#x27;,&#x27; to separate</span><br><span class=\"line\">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class=\"line\">  zIndex: -1 # z-index property of the background</span><br><span class=\"line\">  count: 150 # the number of lines</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"增加文章结束标志\"><a href=\"#增加文章结束标志\" class=\"headerlink\" title=\"增加文章结束标志\"></a>增加文章结束标志</h3><p>1、在路径/themes/next/layout/_macro文件夹中新建passage-end-tag.swig文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 切换到路径_macro</span><br><span class=\"line\">cd [_macro路径]</span><br><span class=\"line\"># 创建passage-end-tag.swig文件</span><br><span class=\"line\">touch passage-end-tag.swig</span><br></pre></td></tr></table></figure>\n\n<p>2、打开passage-end-tag.swig文件，添加以下内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &#123;% if not is_index %&#125;</span><br><span class=\"line\">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>3、打开/themes/next/layout/_macro/post.swig，在post-body之后，post-footer之前，添加以下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &#123;% if not is_index %&#125;</span><br><span class=\"line\">    &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125;</span><br><span class=\"line\">  &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>4、然后打开主题配置文件<code>_config.yml</code>,在末尾添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章末尾添加“本文结束”标记</span><br><span class=\"line\">passage_end_tag:</span><br><span class=\"line\">  enabled: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加文章版权信息\"><a href=\"#添加文章版权信息\" class=\"headerlink\" title=\"添加文章版权信息\"></a>添加文章版权信息</h3><p>1、打开主题配置_config.yml，进行相关参数设置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">creative_commons:</span><br><span class=\"line\">  license: by-nc-sa</span><br><span class=\"line\">  sidebar: true</span><br><span class=\"line\">  post: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加搜索功能\"><a href=\"#添加搜索功能\" class=\"headerlink\" title=\"添加搜索功能\"></a>添加搜索功能</h3><p>1、安装hexo-generator-searchdb插件.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 文件目录</span><br><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n\n<p>2、打开<strong>站点</strong>配置文件(hexo的配置文件)<code>_config.yml</code>,添加配置:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 搜索</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: ./public/search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"<h1 id=\"next主题美化配置\"><a href=\"#next主题美化配置\" class=\"headerlink\" title=\"next主题美化配置\"></a>next主题美化配置</h1><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p> 网上关于Hexo的主题美化博客较多，本文用以记录搭建本博客网站过程中使用到的next主题美化配置。给大家做个参考，与大家一起学习进步。</p>\n<h3 id=\"常规配置\"><a href=\"#常规配置\" class=\"headerlink\" title=\"常规配置\"></a>常规配置</h3><p>1、打开<strong>站点</strong>配置文件(hexo的配置文件)<code>_config.yml</code>,修改配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: baronの博客</span><br><span class=\"line\">subtitle: &#x27;指点江山，激扬文字，粪土当年万户侯。&#x27;</span><br><span class=\"line\">description: &#x27;生活、工作、游戏、读书，偶有所得，以此为记。&#x27;</span><br><span class=\"line\">keywords: baron</span><br><span class=\"line\">author: baron</span><br><span class=\"line\">language: zh-CN</span><br><span class=\"line\">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure>","more":"<p>2、将我们的头像放置在/themes/next/sources/images目录下，打开主题配置文件<code>_config.yml</code>，修改配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Sidebar Avatar</span><br><span class=\"line\">avatar:</span><br><span class=\"line\">  # Replace the default image and set the url here.</span><br><span class=\"line\">  url: /images/baron.jpg</span><br><span class=\"line\">  # If true, the avatar will be dispalyed in circle.</span><br><span class=\"line\">  rounded: false</span><br><span class=\"line\">  # If true, the avatar will be rotated with the cursor.</span><br><span class=\"line\">  rotated: false</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义博客图标\"><a href=\"#自定义博客图标\" class=\"headerlink\" title=\"自定义博客图标\"></a>自定义博客图标</h3><p> next博客的默认图标是<code>H</code>，不过Next支持修改图标。</p>\n<p>我们需要将我们的图标放置在/themes/next/sources/images目录下，并在主题配置文件中进行如下配置，只需要设置small和medium两个就可以（不同尺寸的图标可以到网上制作）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favicon:</span><br><span class=\"line\">  small: /images/baron_16px.ico</span><br><span class=\"line\">  medium: /images/baron_32px.ico</span><br><span class=\"line\">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class=\"line\">  safari_pinned_tab: /images/logo.svg</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加点击效果\"><a href=\"#添加点击效果\" class=\"headerlink\" title=\"添加点击效果\"></a>添加点击效果</h3><p>1、在/themes/next/source/js目录下，新建clicklove.js文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /themes/next/source/js</span><br><span class=\"line\">touch clicklove.js</span><br></pre></td></tr></table></figure>\n\n<p>2、将下面的代码粘贴进clicklove.js文件中：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>\n\n<p>3、在<code>\\themes\\next\\layout\\_layout.swig</code>文件末尾添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加社交信息\"><a href=\"#添加社交信息\" class=\"headerlink\" title=\"添加社交信息\"></a>添加社交信息</h3><p>1、打开主题配置<code>_config.yml</code>，进行相关参数修改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 修改对应的社交信息。</span><br><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/mebaron || fab fa-github</span><br><span class=\"line\">  E-Mail: mailto:ecustbaron@gmail.com || fa fa-envelope</span><br><span class=\"line\">  #Weibo: https://weibo.com/yourname || fab fa-weibo</span><br><span class=\"line\">  #Google: https://plus.google.com/yourname || fab fa-google</span><br><span class=\"line\">  #Twitter: https://twitter.com/yourname || fab fa-twitter</span><br><span class=\"line\">  #FB Page: https://www.facebook.com/yourname || fab fa-facebook</span><br><span class=\"line\">  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span><br><span class=\"line\">  #YouTube: https://youtube.com/yourname || fab fa-youtube</span><br><span class=\"line\">  #Instagram: https://instagram.com/yourname || fab fa-instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加背景\"><a href=\"#添加背景\" class=\"headerlink\" title=\"添加背景\"></a>添加背景</h3><p>1、下载相应的资源包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 在工作目录执行</span><br><span class=\"line\">git clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest</span><br></pre></td></tr></table></figure>\n\n<p>2、在主题配置<code>themes/next/_config.yml</code>中做相关参数修改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Canvas-nest</span><br><span class=\"line\"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span><br><span class=\"line\">canvas_nest: # 网络背景</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  onmobile: true # display on mobile or not</span><br><span class=\"line\">  color: &#x27;0,0,0&#x27; # RGB values, use &#x27;,&#x27; to separate</span><br><span class=\"line\">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class=\"line\">  zIndex: -1 # z-index property of the background</span><br><span class=\"line\">  count: 150 # the number of lines</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"增加文章结束标志\"><a href=\"#增加文章结束标志\" class=\"headerlink\" title=\"增加文章结束标志\"></a>增加文章结束标志</h3><p>1、在路径/themes/next/layout/_macro文件夹中新建passage-end-tag.swig文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 切换到路径_macro</span><br><span class=\"line\">cd [_macro路径]</span><br><span class=\"line\"># 创建passage-end-tag.swig文件</span><br><span class=\"line\">touch passage-end-tag.swig</span><br></pre></td></tr></table></figure>\n\n<p>2、打开passage-end-tag.swig文件，添加以下内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &#123;% if not is_index %&#125;</span><br><span class=\"line\">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>3、打开/themes/next/layout/_macro/post.swig，在post-body之后，post-footer之前，添加以下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &#123;% if not is_index %&#125;</span><br><span class=\"line\">    &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125;</span><br><span class=\"line\">  &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>4、然后打开主题配置文件<code>_config.yml</code>,在末尾添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章末尾添加“本文结束”标记</span><br><span class=\"line\">passage_end_tag:</span><br><span class=\"line\">  enabled: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加文章版权信息\"><a href=\"#添加文章版权信息\" class=\"headerlink\" title=\"添加文章版权信息\"></a>添加文章版权信息</h3><p>1、打开主题配置_config.yml，进行相关参数设置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">creative_commons:</span><br><span class=\"line\">  license: by-nc-sa</span><br><span class=\"line\">  sidebar: true</span><br><span class=\"line\">  post: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加搜索功能\"><a href=\"#添加搜索功能\" class=\"headerlink\" title=\"添加搜索功能\"></a>添加搜索功能</h3><p>1、安装hexo-generator-searchdb插件.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 文件目录</span><br><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n\n<p>2、打开<strong>站点</strong>配置文件(hexo的配置文件)<code>_config.yml</code>,添加配置:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 搜索</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: ./public/search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>"},{"title":"nodejs版本管理工具nvm的使用","date":"2023-02-16T01:48:59.000Z","type":"tags","_content":"\n## nodejs版本管理工具nvm的使用\n\n#### 1、什么是nvm\n\n如今的web前端开发多数大多都离不开Node，而且node更新迭代很快；不同项目依赖的node版本不同，会导致需要安装对应的node版本才能正常运行;同时维护多个版本的node将会是一件非常麻烦的事情，此时此刻我们就需要一个可以安装多个node版本并随时可以切换的版本控制工具来简化我们的工作，常用的node版本管理工具有n、nvm、nvs，这里我主要介绍nvm。\n\n<!--more-->\n\n#### 2、安装下载\n\n[nvm安装包下载地址](https://github.com/coreybutler/nvm-windows/releases)\n\n### 3、常见的使用命令\n\n```bash\n# 显示nvm版本\nnvm v\n\n# 列出本地已安装所有版本\nnvm list      \n\n# 添加可选参数available列出所有克下载版本\nnvm list available    \n\n# 安装node.js的命令 version指定版本号\nnvm install 10.22.0   \n\n# 安装最新稳定版node.js\nnvm install stable    \n\n# 卸载node.js的命令 version指定版本号\nnvm uninstall 10.22.0 \n\n# 切换到指定的node.js版本，使用此版本nodejs\nnvm use 10.22.0   \n\n# 启用node.js版本管理\nnvm on           \n\n# 关闭node.js版本管理  \nnvm off                \n```\n\n","source":"_posts/4.nodejs版本管理工具nvm的使用.md","raw":"---\ntitle: nodejs版本管理工具nvm的使用\ndate: 2023-02-16 09:48:59\ntags:\n- nodejs\n- nvm\n- 版本管理\ncategories:\n- JavaScript\n- 工具使用\ntype: \"tags\"\n---\n\n## nodejs版本管理工具nvm的使用\n\n#### 1、什么是nvm\n\n如今的web前端开发多数大多都离不开Node，而且node更新迭代很快；不同项目依赖的node版本不同，会导致需要安装对应的node版本才能正常运行;同时维护多个版本的node将会是一件非常麻烦的事情，此时此刻我们就需要一个可以安装多个node版本并随时可以切换的版本控制工具来简化我们的工作，常用的node版本管理工具有n、nvm、nvs，这里我主要介绍nvm。\n\n<!--more-->\n\n#### 2、安装下载\n\n[nvm安装包下载地址](https://github.com/coreybutler/nvm-windows/releases)\n\n### 3、常见的使用命令\n\n```bash\n# 显示nvm版本\nnvm v\n\n# 列出本地已安装所有版本\nnvm list      \n\n# 添加可选参数available列出所有克下载版本\nnvm list available    \n\n# 安装node.js的命令 version指定版本号\nnvm install 10.22.0   \n\n# 安装最新稳定版node.js\nnvm install stable    \n\n# 卸载node.js的命令 version指定版本号\nnvm uninstall 10.22.0 \n\n# 切换到指定的node.js版本，使用此版本nodejs\nnvm use 10.22.0   \n\n# 启用node.js版本管理\nnvm on           \n\n# 关闭node.js版本管理  \nnvm off                \n```\n\n","slug":"4.nodejs版本管理工具nvm的使用","published":1,"updated":"2023-12-20T14:01:18.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg5a3000vm0fv0ofu3hln","content":"<h2 id=\"nodejs版本管理工具nvm的使用\"><a href=\"#nodejs版本管理工具nvm的使用\" class=\"headerlink\" title=\"nodejs版本管理工具nvm的使用\"></a>nodejs版本管理工具nvm的使用</h2><h4 id=\"1、什么是nvm\"><a href=\"#1、什么是nvm\" class=\"headerlink\" title=\"1、什么是nvm\"></a>1、什么是nvm</h4><p>如今的web前端开发多数大多都离不开Node，而且node更新迭代很快；不同项目依赖的node版本不同，会导致需要安装对应的node版本才能正常运行;同时维护多个版本的node将会是一件非常麻烦的事情，此时此刻我们就需要一个可以安装多个node版本并随时可以切换的版本控制工具来简化我们的工作，常用的node版本管理工具有n、nvm、nvs，这里我主要介绍nvm。</p>\n<span id=\"more\"></span>\n\n<h4 id=\"2、安装下载\"><a href=\"#2、安装下载\" class=\"headerlink\" title=\"2、安装下载\"></a>2、安装下载</h4><p><a href=\"https://github.com/coreybutler/nvm-windows/releases\">nvm安装包下载地址</a></p>\n<h3 id=\"3、常见的使用命令\"><a href=\"#3、常见的使用命令\" class=\"headerlink\" title=\"3、常见的使用命令\"></a>3、常见的使用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示nvm版本</span></span><br><span class=\"line\">nvm v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出本地已安装所有版本</span></span><br><span class=\"line\">nvm list      </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加可选参数available列出所有克下载版本</span></span><br><span class=\"line\">nvm list available    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装node.js的命令 version指定版本号</span></span><br><span class=\"line\">nvm install 10.22.0   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装最新稳定版node.js</span></span><br><span class=\"line\">nvm install stable    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 卸载node.js的命令 version指定版本号</span></span><br><span class=\"line\">nvm uninstall 10.22.0 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换到指定的node.js版本，使用此版本nodejs</span></span><br><span class=\"line\">nvm use 10.22.0   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启用node.js版本管理</span></span><br><span class=\"line\">nvm on           </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭node.js版本管理  </span></span><br><span class=\"line\">nvm off                </span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"<h2 id=\"nodejs版本管理工具nvm的使用\"><a href=\"#nodejs版本管理工具nvm的使用\" class=\"headerlink\" title=\"nodejs版本管理工具nvm的使用\"></a>nodejs版本管理工具nvm的使用</h2><h4 id=\"1、什么是nvm\"><a href=\"#1、什么是nvm\" class=\"headerlink\" title=\"1、什么是nvm\"></a>1、什么是nvm</h4><p>如今的web前端开发多数大多都离不开Node，而且node更新迭代很快；不同项目依赖的node版本不同，会导致需要安装对应的node版本才能正常运行;同时维护多个版本的node将会是一件非常麻烦的事情，此时此刻我们就需要一个可以安装多个node版本并随时可以切换的版本控制工具来简化我们的工作，常用的node版本管理工具有n、nvm、nvs，这里我主要介绍nvm。</p>","more":"<h4 id=\"2、安装下载\"><a href=\"#2、安装下载\" class=\"headerlink\" title=\"2、安装下载\"></a>2、安装下载</h4><p><a href=\"https://github.com/coreybutler/nvm-windows/releases\">nvm安装包下载地址</a></p>\n<h3 id=\"3、常见的使用命令\"><a href=\"#3、常见的使用命令\" class=\"headerlink\" title=\"3、常见的使用命令\"></a>3、常见的使用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示nvm版本</span></span><br><span class=\"line\">nvm v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出本地已安装所有版本</span></span><br><span class=\"line\">nvm list      </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加可选参数available列出所有克下载版本</span></span><br><span class=\"line\">nvm list available    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装node.js的命令 version指定版本号</span></span><br><span class=\"line\">nvm install 10.22.0   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装最新稳定版node.js</span></span><br><span class=\"line\">nvm install stable    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 卸载node.js的命令 version指定版本号</span></span><br><span class=\"line\">nvm uninstall 10.22.0 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换到指定的node.js版本，使用此版本nodejs</span></span><br><span class=\"line\">nvm use 10.22.0   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启用node.js版本管理</span></span><br><span class=\"line\">nvm on           </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭node.js版本管理  </span></span><br><span class=\"line\">nvm off                </span><br></pre></td></tr></table></figure>"},{"title":"七层OSI模型","type":"tags","date":"2023-12-21T03:49:40.000Z","_content":"\n## 七层OSI模型\n\n七层OSI模型有应用层、表示层、会话层、传输层、网络层、数据链路层、物理层；各个层次上的典型网络协议如下：\n\n|    层次    |                 协议                  |\n| :--------: | :-----------------------------------: |\n|   应用层   |        HTTP、SMTP、FTP、Telnet        |\n|   表示层   |        ASCII、MPEG、JPEG、MIDI        |\n|   会话层   |       NetBIOS、SAP、SDP、NWLink       |\n|   传输层   |             TCP、UDP、SPX             |\n|   网络层   |                IP、IPX                |\n| 数据链路层 | Ethernet、Token Ring、FDDI、AppleTalk |\n\n","source":"_posts/5.七层OSI模型.md","raw":"---\ntitle: 七层OSI模型\ntype: tags\ndate: 2023-12-21 11:49:40\ntags:\n- osi\n- 网络\ncategories:\n- 技术\n---\n\n## 七层OSI模型\n\n七层OSI模型有应用层、表示层、会话层、传输层、网络层、数据链路层、物理层；各个层次上的典型网络协议如下：\n\n|    层次    |                 协议                  |\n| :--------: | :-----------------------------------: |\n|   应用层   |        HTTP、SMTP、FTP、Telnet        |\n|   表示层   |        ASCII、MPEG、JPEG、MIDI        |\n|   会话层   |       NetBIOS、SAP、SDP、NWLink       |\n|   传输层   |             TCP、UDP、SPX             |\n|   网络层   |                IP、IPX                |\n| 数据链路层 | Ethernet、Token Ring、FDDI、AppleTalk |\n\n","slug":"5.七层OSI模型","published":1,"updated":"2023-12-25T09:14:41.749Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg5a4000xm0fv66yx70ej","content":"<h2 id=\"七层OSI模型\"><a href=\"#七层OSI模型\" class=\"headerlink\" title=\"七层OSI模型\"></a>七层OSI模型</h2><p>七层OSI模型有应用层、表示层、会话层、传输层、网络层、数据链路层、物理层；各个层次上的典型网络协议如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">层次</th>\n<th align=\"center\">协议</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">应用层</td>\n<td align=\"center\">HTTP、SMTP、FTP、Telnet</td>\n</tr>\n<tr>\n<td align=\"center\">表示层</td>\n<td align=\"center\">ASCII、MPEG、JPEG、MIDI</td>\n</tr>\n<tr>\n<td align=\"center\">会话层</td>\n<td align=\"center\">NetBIOS、SAP、SDP、NWLink</td>\n</tr>\n<tr>\n<td align=\"center\">传输层</td>\n<td align=\"center\">TCP、UDP、SPX</td>\n</tr>\n<tr>\n<td align=\"center\">网络层</td>\n<td align=\"center\">IP、IPX</td>\n</tr>\n<tr>\n<td align=\"center\">数据链路层</td>\n<td align=\"center\">Ethernet、Token Ring、FDDI、AppleTalk</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"七层OSI模型\"><a href=\"#七层OSI模型\" class=\"headerlink\" title=\"七层OSI模型\"></a>七层OSI模型</h2><p>七层OSI模型有应用层、表示层、会话层、传输层、网络层、数据链路层、物理层；各个层次上的典型网络协议如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">层次</th>\n<th align=\"center\">协议</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">应用层</td>\n<td align=\"center\">HTTP、SMTP、FTP、Telnet</td>\n</tr>\n<tr>\n<td align=\"center\">表示层</td>\n<td align=\"center\">ASCII、MPEG、JPEG、MIDI</td>\n</tr>\n<tr>\n<td align=\"center\">会话层</td>\n<td align=\"center\">NetBIOS、SAP、SDP、NWLink</td>\n</tr>\n<tr>\n<td align=\"center\">传输层</td>\n<td align=\"center\">TCP、UDP、SPX</td>\n</tr>\n<tr>\n<td align=\"center\">网络层</td>\n<td align=\"center\">IP、IPX</td>\n</tr>\n<tr>\n<td align=\"center\">数据链路层</td>\n<td align=\"center\">Ethernet、Token Ring、FDDI、AppleTalk</td>\n</tr>\n</tbody></table>\n"},{"title":"go交叉编译(Mac/Linux/Windows)","date":"2023-02-25T12:33:09.000Z","type":"tags","_content":"\n# go交叉编译(Mac/Linux/Windows)\n\n## 1、MAC 下编译 Linux 、Windows\n\n```bash\n#linux\n\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build  -o name   main.go\n```\n\n---\n\n```bash\n#windows\n\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name  main.go\n```\n\n## 2、Linux 下编译 Mac、 Windows\n\n```bash\n#Mac\n\nCGO_ENABLED=0 GOOS=darwin GOARCH=amd64  go build  -o name   main.go\n```\n\n---\n\n```bash\n#Windows\n\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name   main.go\n```\n\n## 3、Windows 下编译 Mac 、Linux\n\n```bash\n#Mac\n\nSET CGO_ENABLED=0\n\nSET GOOS=darwin\n\nSET GOARCH=amd64\n\ngo build  -o name   main.go\n```\n\n---\n\n```bash\n#Linux\n\nSET CGO_ENABLED=0\n\nSET GOOS=linux\n\nSET GOARCH=amd64\n\ngo build  -o name   main.go\n```\n\n","source":"_posts/6.go交叉编译-Mac-Linux-Windows.md","raw":"---\ntitle: go交叉编译(Mac/Linux/Windows)\ndate: 2023-02-25 20:33:09\ntags:\n- go\n- build\ncategories:\n- 技术\ntype: \"tags\"\n---\n\n# go交叉编译(Mac/Linux/Windows)\n\n## 1、MAC 下编译 Linux 、Windows\n\n```bash\n#linux\n\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build  -o name   main.go\n```\n\n---\n\n```bash\n#windows\n\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name  main.go\n```\n\n## 2、Linux 下编译 Mac、 Windows\n\n```bash\n#Mac\n\nCGO_ENABLED=0 GOOS=darwin GOARCH=amd64  go build  -o name   main.go\n```\n\n---\n\n```bash\n#Windows\n\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name   main.go\n```\n\n## 3、Windows 下编译 Mac 、Linux\n\n```bash\n#Mac\n\nSET CGO_ENABLED=0\n\nSET GOOS=darwin\n\nSET GOARCH=amd64\n\ngo build  -o name   main.go\n```\n\n---\n\n```bash\n#Linux\n\nSET CGO_ENABLED=0\n\nSET GOOS=linux\n\nSET GOARCH=amd64\n\ngo build  -o name   main.go\n```\n\n","slug":"6.go交叉编译-Mac-Linux-Windows","published":1,"updated":"2023-12-21T03:48:14.369Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg5a50010m0fv3rma99p0","content":"<h1 id=\"go交叉编译-Mac-Linux-Windows\"><a href=\"#go交叉编译-Mac-Linux-Windows\" class=\"headerlink\" title=\"go交叉编译(Mac/Linux/Windows)\"></a>go交叉编译(Mac/Linux/Windows)</h1><h2 id=\"1、MAC-下编译-Linux-、Windows\"><a href=\"#1、MAC-下编译-Linux-、Windows\" class=\"headerlink\" title=\"1、MAC 下编译 Linux 、Windows\"></a>1、MAC 下编译 Linux 、Windows</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#linux</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#windows</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name  main.go</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、Linux-下编译-Mac、-Windows\"><a href=\"#2、Linux-下编译-Mac、-Windows\" class=\"headerlink\" title=\"2、Linux 下编译 Mac、 Windows\"></a>2、Linux 下编译 Mac、 Windows</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Mac</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=darwin GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Windows</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3、Windows-下编译-Mac-、Linux\"><a href=\"#3、Windows-下编译-Mac-、Linux\" class=\"headerlink\" title=\"3、Windows 下编译 Mac 、Linux\"></a>3、Windows 下编译 Mac 、Linux</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Mac</span></span><br><span class=\"line\"></span><br><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOOS=darwin</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\"></span><br><span class=\"line\">go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Linux</span></span><br><span class=\"line\"></span><br><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOOS=linux</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\"></span><br><span class=\"line\">go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"go交叉编译-Mac-Linux-Windows\"><a href=\"#go交叉编译-Mac-Linux-Windows\" class=\"headerlink\" title=\"go交叉编译(Mac/Linux/Windows)\"></a>go交叉编译(Mac/Linux/Windows)</h1><h2 id=\"1、MAC-下编译-Linux-、Windows\"><a href=\"#1、MAC-下编译-Linux-、Windows\" class=\"headerlink\" title=\"1、MAC 下编译 Linux 、Windows\"></a>1、MAC 下编译 Linux 、Windows</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#linux</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#windows</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name  main.go</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、Linux-下编译-Mac、-Windows\"><a href=\"#2、Linux-下编译-Mac、-Windows\" class=\"headerlink\" title=\"2、Linux 下编译 Mac、 Windows\"></a>2、Linux 下编译 Mac、 Windows</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Mac</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=darwin GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Windows</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3、Windows-下编译-Mac-、Linux\"><a href=\"#3、Windows-下编译-Mac-、Linux\" class=\"headerlink\" title=\"3、Windows 下编译 Mac 、Linux\"></a>3、Windows 下编译 Mac 、Linux</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Mac</span></span><br><span class=\"line\"></span><br><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOOS=darwin</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\"></span><br><span class=\"line\">go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Linux</span></span><br><span class=\"line\"></span><br><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOOS=linux</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\"></span><br><span class=\"line\">go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n"},{"title":"01背包问题(go实现)","date":"2023-02-27T02:19:04.000Z","type":"tags","_content":"\n# 01背包问题(go实现)\n\n## 1.问题\n\n有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。\n\n第 i 件物品的体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\n输出最大价值。\n\n输入格式\n\n​    第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。\n\n​\t接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。\n\n输出格式\n\n​    输出一个整数，表示最大价值。\n\n数据范围\n\n​    0<N,V≤1000\n\n​    0<vi,wi≤1000\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t/*\n\t   问题：\n\t   有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。\n\n\t   第 i 件物品的体积是 vi，价值是 wi。\n\n\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\t   输出最大价值。\n\n\t   输入格式\n\t   第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。\n\n\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。\n\n\t   输出格式\n\t   输出一个整数，表示最大价值。\n\n\t   数据范围\n\t   0<N,V≤1000\n\t   0<vi,wi≤1000\n\n\t*/\n\toptimize()\n\t// simplicity()\n}\n\nfunc max(x, y int) int {\n\tif x < y {\n\t\treturn y\n\t} else {\n\t\treturn x\n\t}\n}\n\nfunc simplicity() {\n\t/*\n\t\t思路：\n\t\t   1、朴素实现\n\t\t   f[i][j]:表示前i件物品恰放入一个容量为j的背包可以获得的最大价值。\n\n\t\t   转移方程：\n\t\t   1.不选第i件物品。\n\t\t   f[i][j]=f[i-1][j]\n\n\t\t   2.选择第i件物品。\n\t\t   f[i][j]=f[i-1][j-v[i]]+w[i]\n\n\t\t   汇总：\n\t\t   f[i][j]=max{f[i-1][j],f[i-1][j-v[i]]+w[i]}\n\n\t\t复杂度：\n\t\t\t时间和空间复杂度均为O(N*V)\n\n\t*/\n\tconst N = 1010\n\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N][N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := 0; j <= m; j++ {\n\t\t\tf[i][j] = f[i-1][j]\n\t\t\tif j >= v[i] {\n\t\t\t\tf[i][j] = max(f[i][j], f[i-1][j-v[i]]+w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[n][m])\n}\n\nfunc optimize() {\n\t/*\n\t\t1、优化空间复杂度\n\t\t   f[j]:表示容量为j的背包可以获得的最大价值。\n\n\t\t   转移方程：\n\t\t   1.不选第i件物品。\n\t\t   f[j]=f[j]\n\n\t\t   2.选择第i件物品。\n\t\t   f[j]=f[j-v[i]]+w[i]\n\n\t\t   汇总：\n\t\t   f[j]=max{f[j],f[j-v[i]]+w[i]}\n\n\t\t复杂度：\n\t\t\t时间复杂度均为O(N*V)\n\t\t\t空间复杂度均为O(V)\n\n\t*/\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t\tfor j := m; j >= v[i]; j-- {\n\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])\n\t\t}\n\t}\n\tfmt.Println(f[m])\n}\n\n```\n\n\n\n\n\n","source":"_posts/8.01背包问题-go实现.md","raw":"---\ntitle: 01背包问题(go实现)\ndate: 2023-02-27 10:19:04\ntags:\n- 01背包问题\n- go\ncategories:\n- 技术\ntype: \"tags\"\n---\n\n# 01背包问题(go实现)\n\n## 1.问题\n\n有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。\n\n第 i 件物品的体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\n输出最大价值。\n\n输入格式\n\n​    第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。\n\n​\t接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。\n\n输出格式\n\n​    输出一个整数，表示最大价值。\n\n数据范围\n\n​    0<N,V≤1000\n\n​    0<vi,wi≤1000\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t/*\n\t   问题：\n\t   有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。\n\n\t   第 i 件物品的体积是 vi，价值是 wi。\n\n\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\t   输出最大价值。\n\n\t   输入格式\n\t   第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。\n\n\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。\n\n\t   输出格式\n\t   输出一个整数，表示最大价值。\n\n\t   数据范围\n\t   0<N,V≤1000\n\t   0<vi,wi≤1000\n\n\t*/\n\toptimize()\n\t// simplicity()\n}\n\nfunc max(x, y int) int {\n\tif x < y {\n\t\treturn y\n\t} else {\n\t\treturn x\n\t}\n}\n\nfunc simplicity() {\n\t/*\n\t\t思路：\n\t\t   1、朴素实现\n\t\t   f[i][j]:表示前i件物品恰放入一个容量为j的背包可以获得的最大价值。\n\n\t\t   转移方程：\n\t\t   1.不选第i件物品。\n\t\t   f[i][j]=f[i-1][j]\n\n\t\t   2.选择第i件物品。\n\t\t   f[i][j]=f[i-1][j-v[i]]+w[i]\n\n\t\t   汇总：\n\t\t   f[i][j]=max{f[i-1][j],f[i-1][j-v[i]]+w[i]}\n\n\t\t复杂度：\n\t\t\t时间和空间复杂度均为O(N*V)\n\n\t*/\n\tconst N = 1010\n\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N][N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := 0; j <= m; j++ {\n\t\t\tf[i][j] = f[i-1][j]\n\t\t\tif j >= v[i] {\n\t\t\t\tf[i][j] = max(f[i][j], f[i-1][j-v[i]]+w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[n][m])\n}\n\nfunc optimize() {\n\t/*\n\t\t1、优化空间复杂度\n\t\t   f[j]:表示容量为j的背包可以获得的最大价值。\n\n\t\t   转移方程：\n\t\t   1.不选第i件物品。\n\t\t   f[j]=f[j]\n\n\t\t   2.选择第i件物品。\n\t\t   f[j]=f[j-v[i]]+w[i]\n\n\t\t   汇总：\n\t\t   f[j]=max{f[j],f[j-v[i]]+w[i]}\n\n\t\t复杂度：\n\t\t\t时间复杂度均为O(N*V)\n\t\t\t空间复杂度均为O(V)\n\n\t*/\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t\tfor j := m; j >= v[i]; j-- {\n\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])\n\t\t}\n\t}\n\tfmt.Println(f[m])\n}\n\n```\n\n\n\n\n\n","slug":"8.01背包问题-go实现","published":1,"updated":"2023-12-20T14:01:35.177Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg5a60014m0fvgiog4t3f","content":"<h1 id=\"01背包问题-go实现\"><a href=\"#01背包问题-go实现\" class=\"headerlink\" title=\"01背包问题(go实现)\"></a>01背包问题(go实现)</h1><h2 id=\"1-问题\"><a href=\"#1-问题\" class=\"headerlink\" title=\"1.问题\"></a>1.问题</h2><p>有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。</p>\n<p>第 i 件物品的体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</p>\n<p>输出最大价值。</p>\n<p>输入格式</p>\n<p>​    第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。</p>\n<p>​    接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。</p>\n<p>输出格式</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>​    0&lt;N,V≤1000</p>\n<p>​    0&lt;vi,wi≤1000</p>\n<span id=\"more\"></span>\n\n<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t   问题：</span></span><br><span class=\"line\"><span class=\"comment\">\t   有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   第 i 件物品的体积是 vi，价值是 wi。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输入格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输出格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出一个整数，表示最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   数据范围</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;N,V≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;vi,wi≤1000</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\toptimize()</span><br><span class=\"line\">\t<span class=\"comment\">// simplicity()</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(x, y <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> x &lt; y &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> y</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">simplicity</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t思路：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1、朴素实现</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]:表示前i件物品恰放入一个容量为j的背包可以获得的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1.不选第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=f[i-1][j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   2.选择第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=f[i-1][j-v[i]]+w[i]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=max&#123;f[i-1][j],f[i-1][j-v[i]]+w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t时间和空间复杂度均为O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N][N]<span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := <span class=\"number\">0</span>; j &lt;= m; j++ &#123;</span><br><span class=\"line\">\t\t\tf[i][j] = f[i<span class=\"number\">-1</span>][j]</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> j &gt;= v[i] &#123;</span><br><span class=\"line\">\t\t\t\tf[i][j] = max(f[i][j], f[i<span class=\"number\">-1</span>][j-v[i]]+w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[n][m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">optimize</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1、优化空间复杂度</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]:表示容量为j的背包可以获得的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1.不选第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=f[j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   2.选择第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=f[j-v[i]]+w[i]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=max&#123;f[j],f[j-v[i]]+w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t时间复杂度均为O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t空间复杂度均为O(V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N]<span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := m; j &gt;= v[i]; j-- &#123;</span><br><span class=\"line\">\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"cover":false,"excerpt":"<h1 id=\"01背包问题-go实现\"><a href=\"#01背包问题-go实现\" class=\"headerlink\" title=\"01背包问题(go实现)\"></a>01背包问题(go实现)</h1><h2 id=\"1-问题\"><a href=\"#1-问题\" class=\"headerlink\" title=\"1.问题\"></a>1.问题</h2><p>有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。</p>\n<p>第 i 件物品的体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</p>\n<p>输出最大价值。</p>\n<p>输入格式</p>\n<p>​    第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。</p>\n<p>​    接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。</p>\n<p>输出格式</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>​    0&lt;N,V≤1000</p>\n<p>​    0&lt;vi,wi≤1000</p>","more":"<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t   问题：</span></span><br><span class=\"line\"><span class=\"comment\">\t   有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   第 i 件物品的体积是 vi，价值是 wi。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输入格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输出格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出一个整数，表示最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   数据范围</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;N,V≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;vi,wi≤1000</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\toptimize()</span><br><span class=\"line\">\t<span class=\"comment\">// simplicity()</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(x, y <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> x &lt; y &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> y</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">simplicity</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t思路：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1、朴素实现</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]:表示前i件物品恰放入一个容量为j的背包可以获得的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1.不选第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=f[i-1][j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   2.选择第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=f[i-1][j-v[i]]+w[i]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=max&#123;f[i-1][j],f[i-1][j-v[i]]+w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t时间和空间复杂度均为O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N][N]<span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := <span class=\"number\">0</span>; j &lt;= m; j++ &#123;</span><br><span class=\"line\">\t\t\tf[i][j] = f[i<span class=\"number\">-1</span>][j]</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> j &gt;= v[i] &#123;</span><br><span class=\"line\">\t\t\t\tf[i][j] = max(f[i][j], f[i<span class=\"number\">-1</span>][j-v[i]]+w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[n][m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">optimize</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1、优化空间复杂度</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]:表示容量为j的背包可以获得的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1.不选第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=f[j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   2.选择第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=f[j-v[i]]+w[i]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=max&#123;f[j],f[j-v[i]]+w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t时间复杂度均为O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t空间复杂度均为O(V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N]<span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := m; j &gt;= v[i]; j-- &#123;</span><br><span class=\"line\">\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"完全背包问题(go实现)","date":"2023-02-27T09:26:21.000Z","type":"tags","_content":"\n# 完全背包问题(go实现)\n\n## 1.题目\n\n有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。\n\n第 i 种物品的体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\n输出最大价值。\n\n输入格式：\n\n​\t第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。\n\n​\t接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。\n\n输出格式：\n\n​\t输出一个整数，表示最大价值。\n\n数据范围：\n\n​\t0<N,V≤1000\n\n​\t0<vi,wi≤1000\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t/*\n\t   题目：\n\t   有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。\n\n\t   第 i 种物品的体积是 vi，价值是 wi。\n\n\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\t   输出最大价值。\n\n\t   输入格式\n\t   第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。\n\n\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。\n\n\t   输出格式\n\t   输出一个整数，表示最大价值。\n\n\t   数据范围\n\t   0<N,V≤1000\n\t   0<vi,wi≤1000\n\t*/\n\tsimplicity()\n\t// optimize()\n}\n\nfunc max(x, y int) int {\n\tif x < y {\n\t\treturn y\n\t}\n\treturn x\n}\n\nfunc simplicity() {\n\n\t/*\n\t\t1.朴素解法\n\t\t状态表示：f[i][j] 表示考虑前i个物品的情况下，总体积为j时的最大价值。\n\n\t\t转移方程：\n\t\t1.不考虑i个物品的情况\n\t\tf[i][j] = f[i-1][j]\n\n\t\t2.考虑第i个物品的情况\n\t\tf[i][j] = f[i-1][j-k*v[i]]+k*w[i]  k在体积足够的情况下穷举\n\n\t\t汇总：\n\t\tf[i][j] = max{f[i-1][j],f[i-1][j-k*v[i]]+k*w[i]} k在体积足够的情况下穷举\n\n\n\t\t复杂度：\n\t\t时间复杂度O(N*V*K)\n\t\t空间复杂度O(N*V)\n\n\t*/\n\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N][N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := m; j >= v[i]; j-- {\n\t\t\tfor k := 0; k*v[i] <= j; k++ {\n\t\t\t\tf[i][j] = max(f[i-1][j], f[i-1][j-k*v[i]]+k*w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[n][m])\n}\n\nfunc optimize() {\n\t/*\n\t\t2.优化实现\n\t\t状态表示：f[i]表示总体积为i时的最大价值。\n\n\t\t转移方程：\n\t\tfor i=1...n\n\t\tfor j=0...m\n\t\tf[j]= max{f[j], f[j - v[i]] + w[i]}\n\n\t\t复杂度：\n\t\t时间复杂度O(VN)\n\t\t空间复杂度O(V)\n\n\n\t\t证明一下转移方程的正确性（数学归纳法）：\n\t\t初始条件：f[0] = 0\n\t\t1、假设考虑前i-1个物品之后，所有的f[j]是正确的。\n\t\t2、证明： 考虑完i个物品之后，所有的f[j]是正确的。\n\n\t\t对某个j而言，如果最优解中包含k个v[i]，\n\t\t则有：\n\t\tf[j - k*v[i]] 不包含第i个物品的情况；此时所有的f[j]是正确的。 ------ （假设条件）\n\n\t\t递推：\n\t\t转移方程：\tf[j] = max{ f[j], f[j - v[i]] + w[i] }\n\t\t则\n\t\tf[j] = max{f[j],f[j - (k-1)*v[i] -v[i]] + w[i]}  包含1个v[i]的情况\n\t\t...\n\t\tf[j] = max{f[j], f[j - v[i]] + w[i]} 包含k-1个v[i]的情况\n\t\tf[j] = max{f[j], f[j]} 包含k个v[i]的情况\n\t\t表明，在考虑完第i个物品之后，所有的f[j]也是正确的。\n\t\t证毕。\n\t*/\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := 0; j <= m; j++ {\n\t\t\tif j >= v[i] {\n\t\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[m])\n}\n\n```\n\n","source":"_posts/9.完全背包问题-go实现.md","raw":"---\ntitle: 完全背包问题(go实现)\ndate: 2023-02-27 17:26:21\ntags:\n- 完全背包\n- go\n- 算法\ncategories:\n- 技术\n- 算法\ntype: \"tags\"\n---\n\n# 完全背包问题(go实现)\n\n## 1.题目\n\n有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。\n\n第 i 种物品的体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\n输出最大价值。\n\n输入格式：\n\n​\t第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。\n\n​\t接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。\n\n输出格式：\n\n​\t输出一个整数，表示最大价值。\n\n数据范围：\n\n​\t0<N,V≤1000\n\n​\t0<vi,wi≤1000\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t/*\n\t   题目：\n\t   有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。\n\n\t   第 i 种物品的体积是 vi，价值是 wi。\n\n\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\t   输出最大价值。\n\n\t   输入格式\n\t   第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。\n\n\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。\n\n\t   输出格式\n\t   输出一个整数，表示最大价值。\n\n\t   数据范围\n\t   0<N,V≤1000\n\t   0<vi,wi≤1000\n\t*/\n\tsimplicity()\n\t// optimize()\n}\n\nfunc max(x, y int) int {\n\tif x < y {\n\t\treturn y\n\t}\n\treturn x\n}\n\nfunc simplicity() {\n\n\t/*\n\t\t1.朴素解法\n\t\t状态表示：f[i][j] 表示考虑前i个物品的情况下，总体积为j时的最大价值。\n\n\t\t转移方程：\n\t\t1.不考虑i个物品的情况\n\t\tf[i][j] = f[i-1][j]\n\n\t\t2.考虑第i个物品的情况\n\t\tf[i][j] = f[i-1][j-k*v[i]]+k*w[i]  k在体积足够的情况下穷举\n\n\t\t汇总：\n\t\tf[i][j] = max{f[i-1][j],f[i-1][j-k*v[i]]+k*w[i]} k在体积足够的情况下穷举\n\n\n\t\t复杂度：\n\t\t时间复杂度O(N*V*K)\n\t\t空间复杂度O(N*V)\n\n\t*/\n\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N][N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := m; j >= v[i]; j-- {\n\t\t\tfor k := 0; k*v[i] <= j; k++ {\n\t\t\t\tf[i][j] = max(f[i-1][j], f[i-1][j-k*v[i]]+k*w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[n][m])\n}\n\nfunc optimize() {\n\t/*\n\t\t2.优化实现\n\t\t状态表示：f[i]表示总体积为i时的最大价值。\n\n\t\t转移方程：\n\t\tfor i=1...n\n\t\tfor j=0...m\n\t\tf[j]= max{f[j], f[j - v[i]] + w[i]}\n\n\t\t复杂度：\n\t\t时间复杂度O(VN)\n\t\t空间复杂度O(V)\n\n\n\t\t证明一下转移方程的正确性（数学归纳法）：\n\t\t初始条件：f[0] = 0\n\t\t1、假设考虑前i-1个物品之后，所有的f[j]是正确的。\n\t\t2、证明： 考虑完i个物品之后，所有的f[j]是正确的。\n\n\t\t对某个j而言，如果最优解中包含k个v[i]，\n\t\t则有：\n\t\tf[j - k*v[i]] 不包含第i个物品的情况；此时所有的f[j]是正确的。 ------ （假设条件）\n\n\t\t递推：\n\t\t转移方程：\tf[j] = max{ f[j], f[j - v[i]] + w[i] }\n\t\t则\n\t\tf[j] = max{f[j],f[j - (k-1)*v[i] -v[i]] + w[i]}  包含1个v[i]的情况\n\t\t...\n\t\tf[j] = max{f[j], f[j - v[i]] + w[i]} 包含k-1个v[i]的情况\n\t\tf[j] = max{f[j], f[j]} 包含k个v[i]的情况\n\t\t表明，在考虑完第i个物品之后，所有的f[j]也是正确的。\n\t\t证毕。\n\t*/\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := 0; j <= m; j++ {\n\t\t\tif j >= v[i] {\n\t\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[m])\n}\n\n```\n\n","slug":"9.完全背包问题-go实现","published":1,"updated":"2023-12-20T14:01:39.332Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg5a70017m0fv17eofkpw","content":"<h1 id=\"完全背包问题-go实现\"><a href=\"#完全背包问题-go实现\" class=\"headerlink\" title=\"完全背包问题(go实现)\"></a>完全背包问题(go实现)</h1><h2 id=\"1-题目\"><a href=\"#1-题目\" class=\"headerlink\" title=\"1.题目\"></a>1.题目</h2><p>有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。</p>\n<p>第 i 种物品的体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</p>\n<p>输出最大价值。</p>\n<p>输入格式：</p>\n<p>​    第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。</p>\n<p>​    接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。</p>\n<p>输出格式：</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围：</p>\n<p>​    0&lt;N,V≤1000</p>\n<p>​    0&lt;vi,wi≤1000</p>\n<span id=\"more\"></span>\n\n<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t   题目：</span></span><br><span class=\"line\"><span class=\"comment\">\t   有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   第 i 种物品的体积是 vi，价值是 wi。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输入格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输出格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出一个整数，表示最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   数据范围</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;N,V≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;vi,wi≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\tsimplicity()</span><br><span class=\"line\">\t<span class=\"comment\">// optimize()</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(x, y <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> x &lt; y &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> y</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">simplicity</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1.朴素解法</span></span><br><span class=\"line\"><span class=\"comment\">\t\t状态表示：f[i][j] 表示考虑前i个物品的情况下，总体积为j时的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1.不考虑i个物品的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = f[i-1][j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t2.考虑第i个物品的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = f[i-1][j-k*v[i]]+k*w[i]  k在体积足够的情况下穷举</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = max&#123;f[i-1][j],f[i-1][j-k*v[i]]+k*w[i]&#125; k在体积足够的情况下穷举</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t时间复杂度O(N*V*K)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t空间复杂度O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N][N]<span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := m; j &gt;= v[i]; j-- &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> k := <span class=\"number\">0</span>; k*v[i] &lt;= j; k++ &#123;</span><br><span class=\"line\">\t\t\t\tf[i][j] = max(f[i<span class=\"number\">-1</span>][j], f[i<span class=\"number\">-1</span>][j-k*v[i]]+k*w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[n][m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">optimize</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t2.优化实现</span></span><br><span class=\"line\"><span class=\"comment\">\t\t状态表示：f[i]表示总体积为i时的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfor i=1...n</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfor j=0...m</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j]= max&#123;f[j], f[j - v[i]] + w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t时间复杂度O(VN)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t空间复杂度O(V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t证明一下转移方程的正确性（数学归纳法）：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t初始条件：f[0] = 0</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1、假设考虑前i-1个物品之后，所有的f[j]是正确的。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t2、证明： 考虑完i个物品之后，所有的f[j]是正确的。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t对某个j而言，如果最优解中包含k个v[i]，</span></span><br><span class=\"line\"><span class=\"comment\">\t\t则有：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j - k*v[i]] 不包含第i个物品的情况；此时所有的f[j]是正确的。 ------ （假设条件）</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t递推：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：\tf[j] = max&#123; f[j], f[j - v[i]] + w[i] &#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t则</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j],f[j - (k-1)*v[i] -v[i]] + w[i]&#125;  包含1个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\t...</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j], f[j - v[i]] + w[i]&#125; 包含k-1个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j], f[j]&#125; 包含k个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\t表明，在考虑完第i个物品之后，所有的f[j]也是正确的。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t证毕。</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N]<span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := <span class=\"number\">0</span>; j &lt;= m; j++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> j &gt;= v[i] &#123;</span><br><span class=\"line\">\t\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"<h1 id=\"完全背包问题-go实现\"><a href=\"#完全背包问题-go实现\" class=\"headerlink\" title=\"完全背包问题(go实现)\"></a>完全背包问题(go实现)</h1><h2 id=\"1-题目\"><a href=\"#1-题目\" class=\"headerlink\" title=\"1.题目\"></a>1.题目</h2><p>有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。</p>\n<p>第 i 种物品的体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</p>\n<p>输出最大价值。</p>\n<p>输入格式：</p>\n<p>​    第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。</p>\n<p>​    接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。</p>\n<p>输出格式：</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围：</p>\n<p>​    0&lt;N,V≤1000</p>\n<p>​    0&lt;vi,wi≤1000</p>","more":"<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t   题目：</span></span><br><span class=\"line\"><span class=\"comment\">\t   有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   第 i 种物品的体积是 vi，价值是 wi。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输入格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输出格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出一个整数，表示最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   数据范围</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;N,V≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;vi,wi≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\tsimplicity()</span><br><span class=\"line\">\t<span class=\"comment\">// optimize()</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(x, y <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> x &lt; y &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> y</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">simplicity</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1.朴素解法</span></span><br><span class=\"line\"><span class=\"comment\">\t\t状态表示：f[i][j] 表示考虑前i个物品的情况下，总体积为j时的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1.不考虑i个物品的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = f[i-1][j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t2.考虑第i个物品的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = f[i-1][j-k*v[i]]+k*w[i]  k在体积足够的情况下穷举</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = max&#123;f[i-1][j],f[i-1][j-k*v[i]]+k*w[i]&#125; k在体积足够的情况下穷举</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t时间复杂度O(N*V*K)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t空间复杂度O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N][N]<span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := m; j &gt;= v[i]; j-- &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> k := <span class=\"number\">0</span>; k*v[i] &lt;= j; k++ &#123;</span><br><span class=\"line\">\t\t\t\tf[i][j] = max(f[i<span class=\"number\">-1</span>][j], f[i<span class=\"number\">-1</span>][j-k*v[i]]+k*w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[n][m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">optimize</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t2.优化实现</span></span><br><span class=\"line\"><span class=\"comment\">\t\t状态表示：f[i]表示总体积为i时的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfor i=1...n</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfor j=0...m</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j]= max&#123;f[j], f[j - v[i]] + w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t时间复杂度O(VN)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t空间复杂度O(V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t证明一下转移方程的正确性（数学归纳法）：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t初始条件：f[0] = 0</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1、假设考虑前i-1个物品之后，所有的f[j]是正确的。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t2、证明： 考虑完i个物品之后，所有的f[j]是正确的。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t对某个j而言，如果最优解中包含k个v[i]，</span></span><br><span class=\"line\"><span class=\"comment\">\t\t则有：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j - k*v[i]] 不包含第i个物品的情况；此时所有的f[j]是正确的。 ------ （假设条件）</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t递推：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：\tf[j] = max&#123; f[j], f[j - v[i]] + w[i] &#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t则</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j],f[j - (k-1)*v[i] -v[i]] + w[i]&#125;  包含1个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\t...</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j], f[j - v[i]] + w[i]&#125; 包含k-1个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j], f[j]&#125; 包含k个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\t表明，在考虑完第i个物品之后，所有的f[j]也是正确的。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t证毕。</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"type\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N]<span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := <span class=\"number\">0</span>; j &lt;= m; j++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> j &gt;= v[i] &#123;</span><br><span class=\"line\">\t\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"dd大牛的《背包九讲》","date":"2023-02-25T13:47:59.000Z","type":"tags","_content":"\n# dd大牛的《背包九讲》\n\n## 1.01背包问题\n\n### 1.1.题目\n\n有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 1.2.基本思路\n\n这是最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。\n\n用子问题定义状态：即`f[i][v]`表示前i件物品恰放入一个容量为v的背包可以获得的最大价值。则其状态转移方程便是：\n\n`f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}`。\n\n<!--more-->\n\n这个方程非常重要，基本上所有跟背包相关的问题的方程都是由它衍生出来的。所以有必要将它详细解释一下：“将前i件物品放入容量为v的背包中”这个子问题，若只考虑第i件物品的策略（放或不放），那么就可以转化为一个只牵扯前i-1件物品的问题。如果不放第i件物品，那么问题就转化为“前i-1件物品放入容量为v的背包中”；如果放第i件物品，那么问题就转化为“前i-1件物品放入剩下的容量为`v-c[i]`的背包中”，此时能获得的最大价值就是`f [i-1][v-c[i]]`再加上通过放入第i件物品获得的价值w[i]。\n\n注意`f[i][v]`有意义当且仅当存在一个前i件物品的子集，其费用总和为v。所以按照这个方程递推完毕后，最终的答案并不一定是`f[N] [V]`，而是`f[N][0..V]`的最大值。如果将状态的定义中的“恰”字去掉，在转移方程中就要再加入一项`f[i][v-1]`，这样就可以保证f[N] [V]就是最后的答案。至于为什么这样就可以，由你自己来体会了。\n\n### 1.3.优化空间复杂度\n\n以上方法的时间和空间复杂度均为O(N*V)，其中时间复杂度基本已经不能再优化了，但空间复杂度却可以优化到O(V)。\n\n先考虑上面讲的基本思路如何实现，肯定是有一个主循环i=1..N，每次算出来二维数组`f[i][0..V]`的所有值。那么，如果只用一个数组f [0..V]，能不能保证第i次循环结束后f[v]中表示的就是我们定义的状态`f[i][v]`呢？`f[i][v]`是由`f[i-1][v]`和f[i-1] [v-c[i]]两个子问题递推而来，能否保证在推`f[i][v]`时（也即在第i次主循环中推f[v]时）能够得到`f[i-1][v]`和`f[i-1][v -c[i]]`的值呢？事实上，这要求在每次主循环中我们以v=V..0的顺序推f[v]，这样才能保证推f[v]时f[v-c[i]]保存的是状态`f[i -1][v-c[i]]`的值。伪代码如下：\n\n```go\nfor i=1..N\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n其中的f[v]=max{f[v],f[v-c[i]]}一句恰就相当于我们的转移方程`f[i][v]=max{f[i-1][v],f[i- 1][v-c[i]]}`，因为现在的f[v-c[i]]就相当于原来的`f[i-1][v-c[i]]`。如果将v的循环顺序从上面的逆序改成顺序的话，那么则成了`f[i][v]`由`f[i][v-c[i]]`推知，与本题意不符，但它却是另一个重要的背包问题P02最简捷的解决方案，故学习只用一维数组解01背包问题是十分必要的。\n\n### 1.4.总结\n\n01背包问题是最基本的背包问题，它包含了背包问题中设计状态、方程的最基本思想，另外，别的类型的背包问题往往也可以转换成01背包问题求解。故一定要仔细体会上面基本思路的得出方法，状态转移方程的意义，以及最后怎样优化的空间复杂度。\n\n## 2. 完全背包问题\n\n### 2.1.题目\n\n有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 2.2.基本思路\n\n这个问题非常类似于01背包问题，所不同的是每种物品有无限件。也就是从每种物品的角度考虑，与它相关的策略已并非取或不取两种，而是有取0件、取1件、取2件……等很多种。如果仍然按照解01背包时的思路，令`f[i][v]`表示前i种物品恰放入一个容量为v的背包的最大权值。仍然可以按照每种物品不同的策略写出状态转移方程，像这样：`f[i][v]=max{f[i-1][v-k*c[i]]+k*w[i]|0<=k*c[i]<= v}`。这跟01背包问题一样有`O(N*V)`个状态需要求解，但求解每个状态的时间则不是常数了，求解状态`f[i][v]`的时间是O(v/c[i])，总的复杂度是超过`O(VN)`的。\n\n将01背包问题的基本思路加以改进，得到了这样一个清晰的方法。这说明01背包问题的方程的确是很重要，可以推及其它类型的背包问题。但我们还是试图改进这个复杂度。\n\n### 2.3.一个简单有效的优化\n\n完全背包问题有一个很简单有效的优化，是这样的：若两件物品i、j满足`c[i]<=c[j]`且`w[i]>=w[j]`，则将物品j去掉，不用考虑。这个优化的正确性显然：任何情况下都可将价值小费用高得j换成物美价廉的i，得到至少不会更差的方案。对于随机生成的数据，这个方法往往会大大减少物品的件数，从而加快速度。然而这个并不能改善最坏情况的复杂度，因为有可能特别设计的数据可以一件物品也去不掉。\n\n转化为01背包问题求解\n既然01背包问题是最基本的背包问题，那么我们可以考虑把完全背包问题转化为01背包问题来解。最简单的想法是，考虑到第i种物品最多选`V/c [i]`件，于是可以把第i种物品转化为`V/c[i]`件费用及价值均不变的物品，然后求解这个01背包问题。这样完全没有改进基本思路的时间复杂度，但这毕竟给了我们将完全背包问题转化为01背包问题的思路：将一种物品拆成多件物品。\n\n更高效的转化方法是：把第i种物品拆成费用为`c[i]*2^k`、价值为`w[i]*2^k`的若干件物品，其中k满足`c[i]*2^k<V`。这是二进制的思想，因为不管最优策略选几件第i种物品，总可以表示成若干个`2^k`件物品的和。这样把每种物品拆成`O(log(V/c[i]))`件物品，是一个很大的改进。但我们有更优的`O(VN)`的算法。` * O(VN)`的算法这个算法使用一维数组，先看伪代码：\n\n```go\nfor i=1..N \nfor v=0..V \nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n你会发现，这个伪代码与01背包问题的伪代码只有v的循环次序不同而已。为什么这样一改就可行呢？首先想想为什么01背包问题中要按照v=V..0的逆序来循环。这是因为要保证第i次循环中的状态`f[i][v]`是由状态`f[i-1][v-c[i]]`递推而来。换句话说，这正是为了保证每件物品只选一次，保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果`f[i-1][v-c[i]]`。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果`f[i][v-c[i]]`，所以就可以并且必须采用v= 0..V的顺序循环。这就是这个简单的程序为何成立的道理。\n\n这个算法也可以以另外的思路得出。例如，基本思路中的状态转移方程可以等价地变形成这种形式：`f[i][v]=max{f[i-1][v],f[i][v-c[i]]+w[i]}`，将这个方程用一维数组实现，便得到了上面的伪代码。\n\n### 2.4.总结\n\n完全背包问题也是一个相当基础的背包问题，它有两个状态转移方程，分别在“基本思路”以及“`O(VN)`的算法“的小节中给出。希望你能够对这两个状态转移方程都仔细地体会，不仅记住，也要弄明白它们是怎么得出来的，最好能够自己想一种得到这些方程的方法。事实上，对每一道动态规划题目都思考其方程的意义以及如何得来，是加深对动态规划的理解、提高动态规划功力的好方法。\n\n## 3.多重背包问题\n\n### 3.1.题目\n\n有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 3.2.基本算法\n\n这题目和完全背包问题很类似。基本的方程只需将完全背包问题的方程略微一改即可，因为对于第i种物品有n[i]+1种策略：取0件，取1件……取 n[i]件。令`f[i][v]`表示前i种物品恰放入一个容量为v的背包的最大权值，则：`f[i][v]=max{f[i-1][v-k*c[i]]+ k*w[i]|0<=k<=n[i]}`。复杂度是`O(V*∑n[i])`。\n\n转化为01背包问题\n另一种好想好写的基本方法是转化为01背包求解：把第i种物品换成n[i]件01背包中的物品，则得到了物品数为`∑n[i]`的01背包问题，直接求解，复杂度仍然是`O(V*∑n[i])`。\n\n但是我们期望将它转化为01背包问题之后能够像完全背包一样降低复杂度。仍然考虑二进制的思想，我们考虑把第i种物品换成若干件物品，使得原问题中第i种物品可取的每种策略——取0..n[i]件——均能等价于取若干件代换以后的物品。另外，取超过n[i]件的策略必不能出现。\n\n方法是：将第i种物品分成若干件物品，其中每件物品有一个系数，这件物品的费用和价值均是原来的费用和价值乘以这个系数。使这些系数分别为 `1,2,4,...,2^(k-1)`,`n[i]-2^k+1`，且k是满足`n[i]-2^k+1>0`的最大整数。例如，如果n[i]为13，就将这种物品分成系数分别为1,2,4,6的四件物品。\n\n分成的这几件物品的系数和为n[i]，表明不可能取多于n[i]件的第i种物品。另外这种方法也能保证对于`0..n[i]`间的每一个整数，均可以用若干个系数的和表示，这个证明可以分`0..2^k-1`和`2^k..n[i]`两段来分别讨论得出，并不难，希望你自己思考尝试一下。\n\n这样就将第i种物品分成了`O(log n[i])`种物品，将原问题转化为了复杂度为`O(V*∑log n[i])`的01背包问题，是很大的改进。\n\n### 3.3.`O(VN)`的算法\n\n多重背包问题同样有`O(VN)`的算法。这个算法基于基本算法的状态转移方程，但应用单调队列的方法使每个状态的值可以以均摊O(1)的时间求解。由于用单调队列优化的DP已超出了`NOIP`的范围，故本文不再展开讲解。我最初了解到这个方法是在楼天成的“男人八题”幻灯片上。\n\n### 3.4.小结\n\n这里我们看到了将一个算法的复杂度由`O(V*∑n[i])`改进到`O(V*∑log n[i])`的过程，还知道了存在应用超出`NOIP`范围的知识的`O(VN)`算法。希望你特别注意“拆分物品”的思想和方法，自己证明一下它的正确性，并用尽量简洁的程序来实现。\n\n## 4.混合三种背包问题\n\n### 4.1.问题\n\n如果将P01、P02、P03混合起来。也就是说，有的物品只可以取一次（01背包），有的物品可以取无限次（完全背包），有的物品可以取的次数有一个上限（多重背包）。应该怎么求解呢？\n\n### 4.2.01背包与完全背包的混合\n\n考虑到在P01和P02中最后给出的伪代码只有一处不同，故如果只有两类物品：一类物品只能取一次，另一类物品可以取无限次，那么只需在对每个物品应用转移方程时，根据物品的类别选用顺序或逆序的循环即可，复杂度是`O(VN)`。伪代码如下：\n\n```go\n\nfor i=1..N\nif 第i件物品是01背包\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]};\nelse if 第i件物品是完全背包\nfor v=0..V\nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n### 4.3.再加上多重背包\n\n如果再加上有的物品最多可以取有限次，那么原则上也可以给出`O(VN)`的解法：遇到多重背包类型的物品用单调队列解即可。但如果不考虑超过NOIP范围的算法的话，用P03中将每个这类物品分成O(log n[i])个01背包的物品的方法也已经很优了。\n\n### 4.4.小结\n\n有人说，困难的题目都是由简单的题目叠加而来的。这句话是否公理暂且存之不论，但它在本讲中已经得到了充分的体现。本来01背包、完全背包、多重背包都不是什么难题，但将它们简单地组合起来以后就得到了这样一道一定能吓倒不少人的题目。但只要基础扎实，领会三种基本背包问题的思想，就可以做到把困难的题目拆分成简单的题目来解决。\n\n## 5.二维费用的背包问题\n\n### 5.1.问题\n\n二维费用的背包问题是指：对于每件物品，具有两种不同的费用；选择这件物品必须同时付出这两种代价；对于每种代价都有一个可付出的最大值（背包容量）。问怎样选择物品可以得到最大的价值。设这两种代价分别为代价1和代价2，第i件物品所需的两种代价分别为a[i]和b[i]。两种代价可付出的最大值（两种背包容量）分别为V和U。物品的价值为w[i]。\n\n### 5.2.算法\n\n费用加了一维，只需状态也加一维即可。设`f[i][v][u]`表示前i件物品付出两种代价分别为v和u时可获得的最大价值。状态转移方程就是：`f [i][v][u]=max{f[i-1][v][u],f[i-1][v-a[i]][u-b[i]]+w[i]}`。如前述方法，可以只使用二维的数组：当每件物品只可以取一次时变量v和u采用顺序的循环，当物品有如完全背包问题时采用逆序的循环。当物品有如多重背包问题时拆分物品。\n\n### 5.3.物品总个数的限制\n\n有时，“二维费用”的条件是以这样一种隐含的方式给出的：最多只能取M件物品。这事实上相当于每件物品多了一种“件数”的费用，每个物品的件数费用均为1，可以付出的最大件数费用为M。换句话说，设`f[v][m]`表示付出费用v、最多选m件时可得到的最大价值，则根据物品的类型（01、完全、多重）用不同的方法循环更新，最后在`f[0..V`][0..M]范围内寻找答案。\n\n另外，如果要求“恰取M件物品”，则在`f[0..V][M]`范围内寻找答案。\n\n### 5.4.小结\n\n事实上，当发现由熟悉的动态规划题目变形得来的题目时，在原来的状态中加一纬以满足新的限制是一种比较通用的方法。希望你能从本讲中初步体会到这种方法。\n\n## 6.分组的背包问题\n\n### 6.1.问题\n\n有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。这些物品被划分为若干组，每组中的物品互相冲突，最多选一件。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 6.2.算法\n\n这个问题变成了每组物品有若干种策略：是选择本组的某一件，还是一件都不选。也就是说设`f[k`][v]表示前k组物品花费费用v能取得的最大权值，则有`f[k][v]=max{f[k-1][v],f[k-1][v-c[i]]+w[i]|`物品i属于第k组}。\n\n使用一维数组的伪代码如下：\n\n```go\nfor 所有的组k\nfor 所有的i属于组k\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]}\n```\n\n\n\n另外，显然可以对每组中的物品应用P02中“一个简单有效的优化”。\n\n### 6.3.小结\n\n分组的背包问题将彼此互斥的若干物品称为一个组，这建立了一个很好的模型。不少背包问题的变形都可以转化为分组的背包问题（例如P07），由分组的背包问题进一步可定义“泛化物品”的概念，十分有利于解题。 \n\n## 7.有依赖的背包问题\n\n### 7.1.简化的问题\n\n这种背包问题的物品间存在某种“依赖”的关系。也就是说，i依赖于j，表示若选物品i，则必须选物品j。为了简化起见，我们先设没有某个物品既依赖于别的物品，又被别的物品所依赖；另外，没有某件物品同时依赖多件物品。\n\n### 7.2.算法\n\n这个问题由NOIP2006金明的预算方案一题扩展而来。遵从该题的提法，将不依赖于别的物品的物品称为“主件”，依赖于某主件的物品称为“附件”。由这个问题的简化条件可知所有的物品由若干主件和依赖于每个主件的一个附件集合组成。\n\n按照背包问题的一般思路，仅考虑一个主件和它的附件集合。可是，可用的策略非常多，包括：一个也不选，仅选择主件，选择主件后再选择一个附件，选择主件后再选择两个附件……无法用状态转移方程来表示如此多的策略。（事实上，设有n个附件，则策略有2^n+1个，为指数级。）\n\n考虑到所有这些策略都是互斥的（也就是说，你只能选择一种策略），所以一个主件和它的附件集合实际上对应于P06中的一个物品组，每个选择了主件又选择了若干个附件的策略对应于这个物品组中的一个物品，其费用和价值都是这个策略中的物品的值的和。但仅仅是这一步转化并不能给出一个好的算法，因为物品组中的物品还是像原问题的策略一样多。\n\n再考虑P06中的一句话：可以对每组中的物品应用P02中“一个简单有效的优化”。这提示我们，对于一个物品组中的物品，所有费用相同的物品只留一个价值最大的，不影响结果。所以，我们可以对主件i的“附件集合”先进行一次01背包，得到费用依次为0..V-c[i]所有这些值时相应的最大价值f'[0..V-c[i]]。那么这个主件及它的附件集合相当于V-c[i]+1个物品的物品组，其中费用为c[i]+k的物品的价值为f'[k]+w[i]。也就是说原来指数级的策略中有很多策略都是冗余的，通过一次01背包后，将主件i转化为 V-c[i]+1个物品的物品组，就可以直接应用P06的算法解决问题了。\n\n### 7.3.更一般的问题\n\n更一般的问题是：依赖关系以图论中“森林”的形式给出（森林即多叉树的集合），也就是说，主件的附件仍然可以具有自己的附件集合，限制只是每个物品最多只依赖于一个物品（只有一个主件）且不出现循环依赖。\n\n解决这个问题仍然可以用将每个主件及其附件集合转化为物品组的方式。唯一不同的是，由于附件可能还有附件，就不能将每个附件都看作一个一般的01 背包中的物品了。若这个附件也有附件集合，则它必定要被先转化为物品组，然后用分组的背包问题解出主件及其附件集合所对应的附件组中各个费用的附件所对应的价值。\n\n事实上，这是一种树形DP，其特点是每个父节点都需要对它的各个儿子的属性进行一次DP以求得自己的相关属性。这已经触及到了“泛化物品”的思想。看完P08后，你会发现这个“依赖关系树”每一个子树都等价于一件泛化物品，求某节点为根的子树对应的泛化物品相当于求其所有儿子的对应的泛化物品之和。\n\n### 7.4.小结\n\nNOIP2006的那道背包问题我做得很失败，写了上百行的代码，却一分未得。后来我通过思考发现通过引入“物品组”和“依赖”的概念可以加深对这题的理解，还可以解决它的推广问题。用物品组的思想考虑那题中极其特殊的依赖关系：物品不能既作主件又作附件，每个主件最多有两个附件，可以发现一个主件和它的两个附件等价于一个由四个物品组成的物品组，这便揭示了问题的某种本质。\n\n我想说：失败不是什么丢人的事情，从失败中全无收获才是。\n\n## 8.泛化物品\n\n### 8.1.定义\n\n考虑这样一种物品，它并没有固定的费用和价值，而是它的价值随着你分配给它的费用而变化。这就是泛化物品的概念。\n\n更严格的定义之。在背包容量为V的背包问题中，泛化物品是一个定义域为0..V中的整数的函数h，当分配给它的费用为v时，能得到的价值就是h(v)。\n\n这个定义有一点点抽象，另一种理解是一个泛化物品就是一个数组h[0..V]，给它费用v，可得到价值h[V]。\n\n一个费用为c价值为w的物品，如果它是01背包中的物品，那么把它看成泛化物品，它就是除了h(c)=w其它函数值都为0的一个函数。如果它是完全背包中的物品，那么它可以看成这样一个函数，仅当v被c整除时有h(v)=v/c*w，其它函数值均为0。如果它是多重背包中重复次数最多为n的物品，那么它对应的泛化物品的函数有h(v)=v/c*w仅当v被c整除且v/c<=n，其它情况函数值均为0。\n\n一个物品组可以看作一个泛化物品h。对于一个0..V中的v，若物品组中不存在费用为v的的物品，则h(v)=0，否则h(v)为所有费用为v的物品的最大价值。P07中每个主件及其附件集合等价于一个物品组，自然也可看作一个泛化物品。\n\n### 8.2.泛化物品的和\n\n如果面对两个泛化物品h和l，要用给定的费用从这两个泛化物品中得到最大的价值，怎么求呢？事实上，对于一个给定的费用v，只需枚举将这个费用如何分配给两个泛化物品就可以了。同样的，对于0..V的每一个整数v，可以求得费用v分配到h和l中的最大价值f(v)。也即`f(v)=max{h(k) +l(v-k)|0<=k<=v}`。可以看到，f也是一个由泛化物品h和l决定的定义域为0..V的函数，也就是说，f是一个由泛化物品h和 l决定的泛化物品。\n\n由此可以定义泛化物品的和：h、l都是泛化物品，若泛化物品f满足`f(v)=max{h(k)+l(v-k)|0<=k<=v}`，则称f是h与l的和，即f=h+l。这个运算的时间复杂度是O(V^2)。\n\n泛化物品的定义表明：在一个背包问题中，若将两个泛化物品代以它们的和，不影响问题的答案。事实上，对于其中的物品都是泛化物品的背包问题，求它的答案的过程也就是求所有这些泛化物品之和的过程。设此和为s，则答案就是s[0..V]中的最大值。\n\n### 8.3.背包问题的泛化物品\n\n一个背包问题中，可能会给出很多条件，包括每种物品的费用、价值等属性，物品之间的分组、依赖等关系等。但肯定能将问题对应于某个泛化物品。也就是说，给定了所有条件以后，就可以对每个非负整数v求得：若背包容量为v，将物品装入背包可得到的最大价值是多少，这可以认为是定义在非负整数集上的一件泛化物品。这个泛化物品——或者说问题所对应的一个定义域为非负整数的函数——包含了关于问题本身的高度浓缩的信息。一般而言，求得这个泛化物品的一个子域（例如0..V）的值之后，就可以根据这个函数的取值得到背包问题的最终答案。\n\n综上所述，一般而言，求解背包问题，即求解这个问题所对应的一个函数，即该问题的泛化物品。而求解某个泛化物品的一种方法就是将它表示为若干泛化物品的和然后求之。\n\n### 8.4.小结\n\n本讲可以说都是我自己的原创思想。具体来说，是我在学习函数式编程的 Scheme 语言时，用函数编程的眼光审视各类背包问题得出的理论。这一讲真的很抽象，也许在“模型的抽象程度”这一方面已经超出了NOIP的要求，所以暂且看不懂也没关系。相信随着你的OI之路逐渐延伸，有一天你会理解的。\n\n我想说：“思考”是一个`OIer`最重要的品质。简单的问题，深入思考以后，也能发现更多。\n\n## 9.背包问题问法的变化\n\n以上涉及的各种背包问题都是要求在背包容量（费用）的限制下求可以取到的最大价值，但背包问题还有很多种灵活的问法，在这里值得提一下。但是我认为，只要深入理解了求背包问题最大价值的方法，即使问法变化了，也是不难想出算法的。\n\n例如，求解最多可以放多少件物品或者最多可以装满多少背包的空间。这都可以根据具体问题利用前面的方程求出所有状态的值（f数组）之后得到。\n\n还有，如果要求的是“总价值最小”“总件数最小”，只需简单的将上面的状态转移方程中的max改成min即可。\n\n下面说一些变化更大的问法。\n\n### 9.1.输出方案\n\n一般而言，背包问题是要求一个最优值，如果要求输出这个最优值的方案，可以参照一般动态规划问题输出方案的方法：记录下每个状态的最优值是由状态转移方程的哪一项推出来的，换句话说，记录下它是由哪一个策略推出来的。便可根据这条策略找到上一个状态，从上一个状态接着向前推即可。\n\n还是以01背包为例，方程为`f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}`。再用一个数组g[i] [v]，设`g[i][v]=0`表示推出`f[i`][v]的值时是采用了方程的前一项（也即`f[i][v]=f[i-1][v]`），`g[i][v]`表示采用了方程的后一项。注意这两项分别表示了两种策略：未选第i个物品及选了第i个物品。那么输出方案的伪代码可以这样写（设最终状态为`f[N`][V]）：\n\n```go\ni=N\nv=V\nwhile(i>0)\nif(g[i][v]==0)\nprint \"未选第i项物品\"\nelse if(g[i][v]==1)\nprint \"选了第i项物品\"\nv=v-c[i]\n```\n\n另外，采用方程的前一项或后一项也可以在输出方案的过程中根据f[i][v]的值实时地求出来，也即不须纪录g数组，将上述代码中的`g[i] [v]==0`改成`f[i][v]==f[i-1][v]`，`g[i][v]==1`改成`f[i][v]==f[i-1][v-c[i]]+w[i]`也可。\n\n### 9.2.输出字典序最小的最优方案\n\n这里“字典序最小”的意思是1..N号物品的选择方案排列出来以后字典序最小。以输出01背包最小字典序的方案为例。\n\n一般而言，求一个字典序最小的最优方案，只需要在转移时注意策略。首先，子问题的定义要略改一些。我们注意到，如果存在一个选了物品1的最优方案，那么答案一定包含物品1，原问题转化为一个背包容量为v-c[1]，物品为2..N的子问题。反之，如果答案不包含物品1，则转化成背包容量仍为V，物品为2..N的子问题。不管答案怎样，子问题的物品都是以i..N而非前所述的1..i的形式来定义的，所以状态的定义和转移方程都需要改一下。但也许更简易的方法是先把物品逆序排列一下，以下按物品已被逆序排列来叙述。\n\n在这种情况下，可以按照前面经典的状态转移方程来求值，只是输出方案的时候要注意：从N到1输入时，如果`f[i][v]==f[i-v]`及`f[i][v]==f[i-1][f-c[i]]+w[i]`同时成立，应该按照后者（即选择了物品i）来输出方案。\n\n求方案总数\n对于一个给定了背包容量、物品费用、物品间相互关系（分组、依赖等）的背包问题，除了再给定每个物品的价值后求可得到的最大价值外，还可以得到装满背包或将背包装至某一指定容量的方案总数。\n\n对于这类改变问法的问题，一般只需将状态转移方程中的max改成sum即可。例如若每件物品均是01背包中的物品，转移方程即为`f[i][v]=sum{f[i-1][v],f[i-1][v-c[i]]+w[i]}`，初始条件`f[0][0]=1`。\n\n事实上，这样做可行的原因在于状态转移方程已经考察了所有可能的背包组成方案。\n\n### 9.3.最优方案的总数\n\n这里的最优方案是指物品总价值最大的方案。还是以01背包为例。\n\n结合求最大总价值和方案总数两个问题的思路，最优方案的总数可以这样求：f[i][v]意义同前述，g[i][v]表示这个子问题的最优方案的总数，则在求f[i][v]的同时求g[i][v]的伪代码如下：\n\n```go\nfor i=1..N\nfor v=0..V\nf[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}\ng[i][v]=0\nif(f[i][v]==f[i-1][v])\ninc(g[i][v],g[i-1][v]\nif(f[i][v]==f[i-1][v-c[i]]+w[i])\ninc(g[i][v],g[i-1][v-c[i]])\n```\n\n如果你是第一次看到这样的问题，请仔细体会上面的伪代码。\n\n### 9.4.小结\n\n显然，这里不可能穷尽背包类动态规划问题所有的问法。甚至还存在一类将背包类动态规划问题与其它领域（例如数论、图论）结合起来的问题，在这篇论背包问题的专文中也不会论及。但只要深刻领会前述所有类别的背包问题的思路和状态转移方程，遇到其它的变形问法，只要题目难度还属于NOIP，应该也不难想出算法。\n\n触类旁通、举一反三，应该也是一个OIer应有的品质吧。\n","source":"_posts/7.dd大牛的《背包九讲》.md","raw":"---\ntitle: dd大牛的《背包九讲》\ndate: 2023-02-25 21:47:59\ntags:\n- 背包九讲\n- 算法\ncategories:\n- 技术\ntype: \"tags\"\n---\n\n# dd大牛的《背包九讲》\n\n## 1.01背包问题\n\n### 1.1.题目\n\n有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 1.2.基本思路\n\n这是最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。\n\n用子问题定义状态：即`f[i][v]`表示前i件物品恰放入一个容量为v的背包可以获得的最大价值。则其状态转移方程便是：\n\n`f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}`。\n\n<!--more-->\n\n这个方程非常重要，基本上所有跟背包相关的问题的方程都是由它衍生出来的。所以有必要将它详细解释一下：“将前i件物品放入容量为v的背包中”这个子问题，若只考虑第i件物品的策略（放或不放），那么就可以转化为一个只牵扯前i-1件物品的问题。如果不放第i件物品，那么问题就转化为“前i-1件物品放入容量为v的背包中”；如果放第i件物品，那么问题就转化为“前i-1件物品放入剩下的容量为`v-c[i]`的背包中”，此时能获得的最大价值就是`f [i-1][v-c[i]]`再加上通过放入第i件物品获得的价值w[i]。\n\n注意`f[i][v]`有意义当且仅当存在一个前i件物品的子集，其费用总和为v。所以按照这个方程递推完毕后，最终的答案并不一定是`f[N] [V]`，而是`f[N][0..V]`的最大值。如果将状态的定义中的“恰”字去掉，在转移方程中就要再加入一项`f[i][v-1]`，这样就可以保证f[N] [V]就是最后的答案。至于为什么这样就可以，由你自己来体会了。\n\n### 1.3.优化空间复杂度\n\n以上方法的时间和空间复杂度均为O(N*V)，其中时间复杂度基本已经不能再优化了，但空间复杂度却可以优化到O(V)。\n\n先考虑上面讲的基本思路如何实现，肯定是有一个主循环i=1..N，每次算出来二维数组`f[i][0..V]`的所有值。那么，如果只用一个数组f [0..V]，能不能保证第i次循环结束后f[v]中表示的就是我们定义的状态`f[i][v]`呢？`f[i][v]`是由`f[i-1][v]`和f[i-1] [v-c[i]]两个子问题递推而来，能否保证在推`f[i][v]`时（也即在第i次主循环中推f[v]时）能够得到`f[i-1][v]`和`f[i-1][v -c[i]]`的值呢？事实上，这要求在每次主循环中我们以v=V..0的顺序推f[v]，这样才能保证推f[v]时f[v-c[i]]保存的是状态`f[i -1][v-c[i]]`的值。伪代码如下：\n\n```go\nfor i=1..N\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n其中的f[v]=max{f[v],f[v-c[i]]}一句恰就相当于我们的转移方程`f[i][v]=max{f[i-1][v],f[i- 1][v-c[i]]}`，因为现在的f[v-c[i]]就相当于原来的`f[i-1][v-c[i]]`。如果将v的循环顺序从上面的逆序改成顺序的话，那么则成了`f[i][v]`由`f[i][v-c[i]]`推知，与本题意不符，但它却是另一个重要的背包问题P02最简捷的解决方案，故学习只用一维数组解01背包问题是十分必要的。\n\n### 1.4.总结\n\n01背包问题是最基本的背包问题，它包含了背包问题中设计状态、方程的最基本思想，另外，别的类型的背包问题往往也可以转换成01背包问题求解。故一定要仔细体会上面基本思路的得出方法，状态转移方程的意义，以及最后怎样优化的空间复杂度。\n\n## 2. 完全背包问题\n\n### 2.1.题目\n\n有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 2.2.基本思路\n\n这个问题非常类似于01背包问题，所不同的是每种物品有无限件。也就是从每种物品的角度考虑，与它相关的策略已并非取或不取两种，而是有取0件、取1件、取2件……等很多种。如果仍然按照解01背包时的思路，令`f[i][v]`表示前i种物品恰放入一个容量为v的背包的最大权值。仍然可以按照每种物品不同的策略写出状态转移方程，像这样：`f[i][v]=max{f[i-1][v-k*c[i]]+k*w[i]|0<=k*c[i]<= v}`。这跟01背包问题一样有`O(N*V)`个状态需要求解，但求解每个状态的时间则不是常数了，求解状态`f[i][v]`的时间是O(v/c[i])，总的复杂度是超过`O(VN)`的。\n\n将01背包问题的基本思路加以改进，得到了这样一个清晰的方法。这说明01背包问题的方程的确是很重要，可以推及其它类型的背包问题。但我们还是试图改进这个复杂度。\n\n### 2.3.一个简单有效的优化\n\n完全背包问题有一个很简单有效的优化，是这样的：若两件物品i、j满足`c[i]<=c[j]`且`w[i]>=w[j]`，则将物品j去掉，不用考虑。这个优化的正确性显然：任何情况下都可将价值小费用高得j换成物美价廉的i，得到至少不会更差的方案。对于随机生成的数据，这个方法往往会大大减少物品的件数，从而加快速度。然而这个并不能改善最坏情况的复杂度，因为有可能特别设计的数据可以一件物品也去不掉。\n\n转化为01背包问题求解\n既然01背包问题是最基本的背包问题，那么我们可以考虑把完全背包问题转化为01背包问题来解。最简单的想法是，考虑到第i种物品最多选`V/c [i]`件，于是可以把第i种物品转化为`V/c[i]`件费用及价值均不变的物品，然后求解这个01背包问题。这样完全没有改进基本思路的时间复杂度，但这毕竟给了我们将完全背包问题转化为01背包问题的思路：将一种物品拆成多件物品。\n\n更高效的转化方法是：把第i种物品拆成费用为`c[i]*2^k`、价值为`w[i]*2^k`的若干件物品，其中k满足`c[i]*2^k<V`。这是二进制的思想，因为不管最优策略选几件第i种物品，总可以表示成若干个`2^k`件物品的和。这样把每种物品拆成`O(log(V/c[i]))`件物品，是一个很大的改进。但我们有更优的`O(VN)`的算法。` * O(VN)`的算法这个算法使用一维数组，先看伪代码：\n\n```go\nfor i=1..N \nfor v=0..V \nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n你会发现，这个伪代码与01背包问题的伪代码只有v的循环次序不同而已。为什么这样一改就可行呢？首先想想为什么01背包问题中要按照v=V..0的逆序来循环。这是因为要保证第i次循环中的状态`f[i][v]`是由状态`f[i-1][v-c[i]]`递推而来。换句话说，这正是为了保证每件物品只选一次，保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果`f[i-1][v-c[i]]`。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果`f[i][v-c[i]]`，所以就可以并且必须采用v= 0..V的顺序循环。这就是这个简单的程序为何成立的道理。\n\n这个算法也可以以另外的思路得出。例如，基本思路中的状态转移方程可以等价地变形成这种形式：`f[i][v]=max{f[i-1][v],f[i][v-c[i]]+w[i]}`，将这个方程用一维数组实现，便得到了上面的伪代码。\n\n### 2.4.总结\n\n完全背包问题也是一个相当基础的背包问题，它有两个状态转移方程，分别在“基本思路”以及“`O(VN)`的算法“的小节中给出。希望你能够对这两个状态转移方程都仔细地体会，不仅记住，也要弄明白它们是怎么得出来的，最好能够自己想一种得到这些方程的方法。事实上，对每一道动态规划题目都思考其方程的意义以及如何得来，是加深对动态规划的理解、提高动态规划功力的好方法。\n\n## 3.多重背包问题\n\n### 3.1.题目\n\n有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 3.2.基本算法\n\n这题目和完全背包问题很类似。基本的方程只需将完全背包问题的方程略微一改即可，因为对于第i种物品有n[i]+1种策略：取0件，取1件……取 n[i]件。令`f[i][v]`表示前i种物品恰放入一个容量为v的背包的最大权值，则：`f[i][v]=max{f[i-1][v-k*c[i]]+ k*w[i]|0<=k<=n[i]}`。复杂度是`O(V*∑n[i])`。\n\n转化为01背包问题\n另一种好想好写的基本方法是转化为01背包求解：把第i种物品换成n[i]件01背包中的物品，则得到了物品数为`∑n[i]`的01背包问题，直接求解，复杂度仍然是`O(V*∑n[i])`。\n\n但是我们期望将它转化为01背包问题之后能够像完全背包一样降低复杂度。仍然考虑二进制的思想，我们考虑把第i种物品换成若干件物品，使得原问题中第i种物品可取的每种策略——取0..n[i]件——均能等价于取若干件代换以后的物品。另外，取超过n[i]件的策略必不能出现。\n\n方法是：将第i种物品分成若干件物品，其中每件物品有一个系数，这件物品的费用和价值均是原来的费用和价值乘以这个系数。使这些系数分别为 `1,2,4,...,2^(k-1)`,`n[i]-2^k+1`，且k是满足`n[i]-2^k+1>0`的最大整数。例如，如果n[i]为13，就将这种物品分成系数分别为1,2,4,6的四件物品。\n\n分成的这几件物品的系数和为n[i]，表明不可能取多于n[i]件的第i种物品。另外这种方法也能保证对于`0..n[i]`间的每一个整数，均可以用若干个系数的和表示，这个证明可以分`0..2^k-1`和`2^k..n[i]`两段来分别讨论得出，并不难，希望你自己思考尝试一下。\n\n这样就将第i种物品分成了`O(log n[i])`种物品，将原问题转化为了复杂度为`O(V*∑log n[i])`的01背包问题，是很大的改进。\n\n### 3.3.`O(VN)`的算法\n\n多重背包问题同样有`O(VN)`的算法。这个算法基于基本算法的状态转移方程，但应用单调队列的方法使每个状态的值可以以均摊O(1)的时间求解。由于用单调队列优化的DP已超出了`NOIP`的范围，故本文不再展开讲解。我最初了解到这个方法是在楼天成的“男人八题”幻灯片上。\n\n### 3.4.小结\n\n这里我们看到了将一个算法的复杂度由`O(V*∑n[i])`改进到`O(V*∑log n[i])`的过程，还知道了存在应用超出`NOIP`范围的知识的`O(VN)`算法。希望你特别注意“拆分物品”的思想和方法，自己证明一下它的正确性，并用尽量简洁的程序来实现。\n\n## 4.混合三种背包问题\n\n### 4.1.问题\n\n如果将P01、P02、P03混合起来。也就是说，有的物品只可以取一次（01背包），有的物品可以取无限次（完全背包），有的物品可以取的次数有一个上限（多重背包）。应该怎么求解呢？\n\n### 4.2.01背包与完全背包的混合\n\n考虑到在P01和P02中最后给出的伪代码只有一处不同，故如果只有两类物品：一类物品只能取一次，另一类物品可以取无限次，那么只需在对每个物品应用转移方程时，根据物品的类别选用顺序或逆序的循环即可，复杂度是`O(VN)`。伪代码如下：\n\n```go\n\nfor i=1..N\nif 第i件物品是01背包\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]};\nelse if 第i件物品是完全背包\nfor v=0..V\nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n### 4.3.再加上多重背包\n\n如果再加上有的物品最多可以取有限次，那么原则上也可以给出`O(VN)`的解法：遇到多重背包类型的物品用单调队列解即可。但如果不考虑超过NOIP范围的算法的话，用P03中将每个这类物品分成O(log n[i])个01背包的物品的方法也已经很优了。\n\n### 4.4.小结\n\n有人说，困难的题目都是由简单的题目叠加而来的。这句话是否公理暂且存之不论，但它在本讲中已经得到了充分的体现。本来01背包、完全背包、多重背包都不是什么难题，但将它们简单地组合起来以后就得到了这样一道一定能吓倒不少人的题目。但只要基础扎实，领会三种基本背包问题的思想，就可以做到把困难的题目拆分成简单的题目来解决。\n\n## 5.二维费用的背包问题\n\n### 5.1.问题\n\n二维费用的背包问题是指：对于每件物品，具有两种不同的费用；选择这件物品必须同时付出这两种代价；对于每种代价都有一个可付出的最大值（背包容量）。问怎样选择物品可以得到最大的价值。设这两种代价分别为代价1和代价2，第i件物品所需的两种代价分别为a[i]和b[i]。两种代价可付出的最大值（两种背包容量）分别为V和U。物品的价值为w[i]。\n\n### 5.2.算法\n\n费用加了一维，只需状态也加一维即可。设`f[i][v][u]`表示前i件物品付出两种代价分别为v和u时可获得的最大价值。状态转移方程就是：`f [i][v][u]=max{f[i-1][v][u],f[i-1][v-a[i]][u-b[i]]+w[i]}`。如前述方法，可以只使用二维的数组：当每件物品只可以取一次时变量v和u采用顺序的循环，当物品有如完全背包问题时采用逆序的循环。当物品有如多重背包问题时拆分物品。\n\n### 5.3.物品总个数的限制\n\n有时，“二维费用”的条件是以这样一种隐含的方式给出的：最多只能取M件物品。这事实上相当于每件物品多了一种“件数”的费用，每个物品的件数费用均为1，可以付出的最大件数费用为M。换句话说，设`f[v][m]`表示付出费用v、最多选m件时可得到的最大价值，则根据物品的类型（01、完全、多重）用不同的方法循环更新，最后在`f[0..V`][0..M]范围内寻找答案。\n\n另外，如果要求“恰取M件物品”，则在`f[0..V][M]`范围内寻找答案。\n\n### 5.4.小结\n\n事实上，当发现由熟悉的动态规划题目变形得来的题目时，在原来的状态中加一纬以满足新的限制是一种比较通用的方法。希望你能从本讲中初步体会到这种方法。\n\n## 6.分组的背包问题\n\n### 6.1.问题\n\n有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。这些物品被划分为若干组，每组中的物品互相冲突，最多选一件。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 6.2.算法\n\n这个问题变成了每组物品有若干种策略：是选择本组的某一件，还是一件都不选。也就是说设`f[k`][v]表示前k组物品花费费用v能取得的最大权值，则有`f[k][v]=max{f[k-1][v],f[k-1][v-c[i]]+w[i]|`物品i属于第k组}。\n\n使用一维数组的伪代码如下：\n\n```go\nfor 所有的组k\nfor 所有的i属于组k\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]}\n```\n\n\n\n另外，显然可以对每组中的物品应用P02中“一个简单有效的优化”。\n\n### 6.3.小结\n\n分组的背包问题将彼此互斥的若干物品称为一个组，这建立了一个很好的模型。不少背包问题的变形都可以转化为分组的背包问题（例如P07），由分组的背包问题进一步可定义“泛化物品”的概念，十分有利于解题。 \n\n## 7.有依赖的背包问题\n\n### 7.1.简化的问题\n\n这种背包问题的物品间存在某种“依赖”的关系。也就是说，i依赖于j，表示若选物品i，则必须选物品j。为了简化起见，我们先设没有某个物品既依赖于别的物品，又被别的物品所依赖；另外，没有某件物品同时依赖多件物品。\n\n### 7.2.算法\n\n这个问题由NOIP2006金明的预算方案一题扩展而来。遵从该题的提法，将不依赖于别的物品的物品称为“主件”，依赖于某主件的物品称为“附件”。由这个问题的简化条件可知所有的物品由若干主件和依赖于每个主件的一个附件集合组成。\n\n按照背包问题的一般思路，仅考虑一个主件和它的附件集合。可是，可用的策略非常多，包括：一个也不选，仅选择主件，选择主件后再选择一个附件，选择主件后再选择两个附件……无法用状态转移方程来表示如此多的策略。（事实上，设有n个附件，则策略有2^n+1个，为指数级。）\n\n考虑到所有这些策略都是互斥的（也就是说，你只能选择一种策略），所以一个主件和它的附件集合实际上对应于P06中的一个物品组，每个选择了主件又选择了若干个附件的策略对应于这个物品组中的一个物品，其费用和价值都是这个策略中的物品的值的和。但仅仅是这一步转化并不能给出一个好的算法，因为物品组中的物品还是像原问题的策略一样多。\n\n再考虑P06中的一句话：可以对每组中的物品应用P02中“一个简单有效的优化”。这提示我们，对于一个物品组中的物品，所有费用相同的物品只留一个价值最大的，不影响结果。所以，我们可以对主件i的“附件集合”先进行一次01背包，得到费用依次为0..V-c[i]所有这些值时相应的最大价值f'[0..V-c[i]]。那么这个主件及它的附件集合相当于V-c[i]+1个物品的物品组，其中费用为c[i]+k的物品的价值为f'[k]+w[i]。也就是说原来指数级的策略中有很多策略都是冗余的，通过一次01背包后，将主件i转化为 V-c[i]+1个物品的物品组，就可以直接应用P06的算法解决问题了。\n\n### 7.3.更一般的问题\n\n更一般的问题是：依赖关系以图论中“森林”的形式给出（森林即多叉树的集合），也就是说，主件的附件仍然可以具有自己的附件集合，限制只是每个物品最多只依赖于一个物品（只有一个主件）且不出现循环依赖。\n\n解决这个问题仍然可以用将每个主件及其附件集合转化为物品组的方式。唯一不同的是，由于附件可能还有附件，就不能将每个附件都看作一个一般的01 背包中的物品了。若这个附件也有附件集合，则它必定要被先转化为物品组，然后用分组的背包问题解出主件及其附件集合所对应的附件组中各个费用的附件所对应的价值。\n\n事实上，这是一种树形DP，其特点是每个父节点都需要对它的各个儿子的属性进行一次DP以求得自己的相关属性。这已经触及到了“泛化物品”的思想。看完P08后，你会发现这个“依赖关系树”每一个子树都等价于一件泛化物品，求某节点为根的子树对应的泛化物品相当于求其所有儿子的对应的泛化物品之和。\n\n### 7.4.小结\n\nNOIP2006的那道背包问题我做得很失败，写了上百行的代码，却一分未得。后来我通过思考发现通过引入“物品组”和“依赖”的概念可以加深对这题的理解，还可以解决它的推广问题。用物品组的思想考虑那题中极其特殊的依赖关系：物品不能既作主件又作附件，每个主件最多有两个附件，可以发现一个主件和它的两个附件等价于一个由四个物品组成的物品组，这便揭示了问题的某种本质。\n\n我想说：失败不是什么丢人的事情，从失败中全无收获才是。\n\n## 8.泛化物品\n\n### 8.1.定义\n\n考虑这样一种物品，它并没有固定的费用和价值，而是它的价值随着你分配给它的费用而变化。这就是泛化物品的概念。\n\n更严格的定义之。在背包容量为V的背包问题中，泛化物品是一个定义域为0..V中的整数的函数h，当分配给它的费用为v时，能得到的价值就是h(v)。\n\n这个定义有一点点抽象，另一种理解是一个泛化物品就是一个数组h[0..V]，给它费用v，可得到价值h[V]。\n\n一个费用为c价值为w的物品，如果它是01背包中的物品，那么把它看成泛化物品，它就是除了h(c)=w其它函数值都为0的一个函数。如果它是完全背包中的物品，那么它可以看成这样一个函数，仅当v被c整除时有h(v)=v/c*w，其它函数值均为0。如果它是多重背包中重复次数最多为n的物品，那么它对应的泛化物品的函数有h(v)=v/c*w仅当v被c整除且v/c<=n，其它情况函数值均为0。\n\n一个物品组可以看作一个泛化物品h。对于一个0..V中的v，若物品组中不存在费用为v的的物品，则h(v)=0，否则h(v)为所有费用为v的物品的最大价值。P07中每个主件及其附件集合等价于一个物品组，自然也可看作一个泛化物品。\n\n### 8.2.泛化物品的和\n\n如果面对两个泛化物品h和l，要用给定的费用从这两个泛化物品中得到最大的价值，怎么求呢？事实上，对于一个给定的费用v，只需枚举将这个费用如何分配给两个泛化物品就可以了。同样的，对于0..V的每一个整数v，可以求得费用v分配到h和l中的最大价值f(v)。也即`f(v)=max{h(k) +l(v-k)|0<=k<=v}`。可以看到，f也是一个由泛化物品h和l决定的定义域为0..V的函数，也就是说，f是一个由泛化物品h和 l决定的泛化物品。\n\n由此可以定义泛化物品的和：h、l都是泛化物品，若泛化物品f满足`f(v)=max{h(k)+l(v-k)|0<=k<=v}`，则称f是h与l的和，即f=h+l。这个运算的时间复杂度是O(V^2)。\n\n泛化物品的定义表明：在一个背包问题中，若将两个泛化物品代以它们的和，不影响问题的答案。事实上，对于其中的物品都是泛化物品的背包问题，求它的答案的过程也就是求所有这些泛化物品之和的过程。设此和为s，则答案就是s[0..V]中的最大值。\n\n### 8.3.背包问题的泛化物品\n\n一个背包问题中，可能会给出很多条件，包括每种物品的费用、价值等属性，物品之间的分组、依赖等关系等。但肯定能将问题对应于某个泛化物品。也就是说，给定了所有条件以后，就可以对每个非负整数v求得：若背包容量为v，将物品装入背包可得到的最大价值是多少，这可以认为是定义在非负整数集上的一件泛化物品。这个泛化物品——或者说问题所对应的一个定义域为非负整数的函数——包含了关于问题本身的高度浓缩的信息。一般而言，求得这个泛化物品的一个子域（例如0..V）的值之后，就可以根据这个函数的取值得到背包问题的最终答案。\n\n综上所述，一般而言，求解背包问题，即求解这个问题所对应的一个函数，即该问题的泛化物品。而求解某个泛化物品的一种方法就是将它表示为若干泛化物品的和然后求之。\n\n### 8.4.小结\n\n本讲可以说都是我自己的原创思想。具体来说，是我在学习函数式编程的 Scheme 语言时，用函数编程的眼光审视各类背包问题得出的理论。这一讲真的很抽象，也许在“模型的抽象程度”这一方面已经超出了NOIP的要求，所以暂且看不懂也没关系。相信随着你的OI之路逐渐延伸，有一天你会理解的。\n\n我想说：“思考”是一个`OIer`最重要的品质。简单的问题，深入思考以后，也能发现更多。\n\n## 9.背包问题问法的变化\n\n以上涉及的各种背包问题都是要求在背包容量（费用）的限制下求可以取到的最大价值，但背包问题还有很多种灵活的问法，在这里值得提一下。但是我认为，只要深入理解了求背包问题最大价值的方法，即使问法变化了，也是不难想出算法的。\n\n例如，求解最多可以放多少件物品或者最多可以装满多少背包的空间。这都可以根据具体问题利用前面的方程求出所有状态的值（f数组）之后得到。\n\n还有，如果要求的是“总价值最小”“总件数最小”，只需简单的将上面的状态转移方程中的max改成min即可。\n\n下面说一些变化更大的问法。\n\n### 9.1.输出方案\n\n一般而言，背包问题是要求一个最优值，如果要求输出这个最优值的方案，可以参照一般动态规划问题输出方案的方法：记录下每个状态的最优值是由状态转移方程的哪一项推出来的，换句话说，记录下它是由哪一个策略推出来的。便可根据这条策略找到上一个状态，从上一个状态接着向前推即可。\n\n还是以01背包为例，方程为`f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}`。再用一个数组g[i] [v]，设`g[i][v]=0`表示推出`f[i`][v]的值时是采用了方程的前一项（也即`f[i][v]=f[i-1][v]`），`g[i][v]`表示采用了方程的后一项。注意这两项分别表示了两种策略：未选第i个物品及选了第i个物品。那么输出方案的伪代码可以这样写（设最终状态为`f[N`][V]）：\n\n```go\ni=N\nv=V\nwhile(i>0)\nif(g[i][v]==0)\nprint \"未选第i项物品\"\nelse if(g[i][v]==1)\nprint \"选了第i项物品\"\nv=v-c[i]\n```\n\n另外，采用方程的前一项或后一项也可以在输出方案的过程中根据f[i][v]的值实时地求出来，也即不须纪录g数组，将上述代码中的`g[i] [v]==0`改成`f[i][v]==f[i-1][v]`，`g[i][v]==1`改成`f[i][v]==f[i-1][v-c[i]]+w[i]`也可。\n\n### 9.2.输出字典序最小的最优方案\n\n这里“字典序最小”的意思是1..N号物品的选择方案排列出来以后字典序最小。以输出01背包最小字典序的方案为例。\n\n一般而言，求一个字典序最小的最优方案，只需要在转移时注意策略。首先，子问题的定义要略改一些。我们注意到，如果存在一个选了物品1的最优方案，那么答案一定包含物品1，原问题转化为一个背包容量为v-c[1]，物品为2..N的子问题。反之，如果答案不包含物品1，则转化成背包容量仍为V，物品为2..N的子问题。不管答案怎样，子问题的物品都是以i..N而非前所述的1..i的形式来定义的，所以状态的定义和转移方程都需要改一下。但也许更简易的方法是先把物品逆序排列一下，以下按物品已被逆序排列来叙述。\n\n在这种情况下，可以按照前面经典的状态转移方程来求值，只是输出方案的时候要注意：从N到1输入时，如果`f[i][v]==f[i-v]`及`f[i][v]==f[i-1][f-c[i]]+w[i]`同时成立，应该按照后者（即选择了物品i）来输出方案。\n\n求方案总数\n对于一个给定了背包容量、物品费用、物品间相互关系（分组、依赖等）的背包问题，除了再给定每个物品的价值后求可得到的最大价值外，还可以得到装满背包或将背包装至某一指定容量的方案总数。\n\n对于这类改变问法的问题，一般只需将状态转移方程中的max改成sum即可。例如若每件物品均是01背包中的物品，转移方程即为`f[i][v]=sum{f[i-1][v],f[i-1][v-c[i]]+w[i]}`，初始条件`f[0][0]=1`。\n\n事实上，这样做可行的原因在于状态转移方程已经考察了所有可能的背包组成方案。\n\n### 9.3.最优方案的总数\n\n这里的最优方案是指物品总价值最大的方案。还是以01背包为例。\n\n结合求最大总价值和方案总数两个问题的思路，最优方案的总数可以这样求：f[i][v]意义同前述，g[i][v]表示这个子问题的最优方案的总数，则在求f[i][v]的同时求g[i][v]的伪代码如下：\n\n```go\nfor i=1..N\nfor v=0..V\nf[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}\ng[i][v]=0\nif(f[i][v]==f[i-1][v])\ninc(g[i][v],g[i-1][v]\nif(f[i][v]==f[i-1][v-c[i]]+w[i])\ninc(g[i][v],g[i-1][v-c[i]])\n```\n\n如果你是第一次看到这样的问题，请仔细体会上面的伪代码。\n\n### 9.4.小结\n\n显然，这里不可能穷尽背包类动态规划问题所有的问法。甚至还存在一类将背包类动态规划问题与其它领域（例如数论、图论）结合起来的问题，在这篇论背包问题的专文中也不会论及。但只要深刻领会前述所有类别的背包问题的思路和状态转移方程，遇到其它的变形问法，只要题目难度还属于NOIP，应该也不难想出算法。\n\n触类旁通、举一反三，应该也是一个OIer应有的品质吧。\n","slug":"7.dd大牛的《背包九讲》","published":1,"updated":"2023-12-20T14:01:31.181Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkpg5ar002xm0fvewdb7sas","content":"<h1 id=\"dd大牛的《背包九讲》\"><a href=\"#dd大牛的《背包九讲》\" class=\"headerlink\" title=\"dd大牛的《背包九讲》\"></a>dd大牛的《背包九讲》</h1><h2 id=\"1-01背包问题\"><a href=\"#1-01背包问题\" class=\"headerlink\" title=\"1.01背包问题\"></a>1.01背包问题</h2><h3 id=\"1-1-题目\"><a href=\"#1-1-题目\" class=\"headerlink\" title=\"1.1.题目\"></a>1.1.题目</h3><p>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"1-2-基本思路\"><a href=\"#1-2-基本思路\" class=\"headerlink\" title=\"1.2.基本思路\"></a>1.2.基本思路</h3><p>这是最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。</p>\n<p>用子问题定义状态：即<code>f[i][v]</code>表示前i件物品恰放入一个容量为v的背包可以获得的最大价值。则其状态转移方程便是：</p>\n<p><code>f[i][v]=max&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>。</p>\n<span id=\"more\"></span>\n\n<p>这个方程非常重要，基本上所有跟背包相关的问题的方程都是由它衍生出来的。所以有必要将它详细解释一下：“将前i件物品放入容量为v的背包中”这个子问题，若只考虑第i件物品的策略（放或不放），那么就可以转化为一个只牵扯前i-1件物品的问题。如果不放第i件物品，那么问题就转化为“前i-1件物品放入容量为v的背包中”；如果放第i件物品，那么问题就转化为“前i-1件物品放入剩下的容量为<code>v-c[i]</code>的背包中”，此时能获得的最大价值就是<code>f [i-1][v-c[i]]</code>再加上通过放入第i件物品获得的价值w[i]。</p>\n<p>注意<code>f[i][v]</code>有意义当且仅当存在一个前i件物品的子集，其费用总和为v。所以按照这个方程递推完毕后，最终的答案并不一定是<code>f[N] [V]</code>，而是<code>f[N][0..V]</code>的最大值。如果将状态的定义中的“恰”字去掉，在转移方程中就要再加入一项<code>f[i][v-1]</code>，这样就可以保证f[N] [V]就是最后的答案。至于为什么这样就可以，由你自己来体会了。</p>\n<h3 id=\"1-3-优化空间复杂度\"><a href=\"#1-3-优化空间复杂度\" class=\"headerlink\" title=\"1.3.优化空间复杂度\"></a>1.3.优化空间复杂度</h3><p>以上方法的时间和空间复杂度均为O(N*V)，其中时间复杂度基本已经不能再优化了，但空间复杂度却可以优化到O(V)。</p>\n<p>先考虑上面讲的基本思路如何实现，肯定是有一个主循环i=1..N，每次算出来二维数组<code>f[i][0..V]</code>的所有值。那么，如果只用一个数组f [0..V]，能不能保证第i次循环结束后f[v]中表示的就是我们定义的状态<code>f[i][v]</code>呢？<code>f[i][v]</code>是由<code>f[i-1][v]</code>和f[i-1] [v-c[i]]两个子问题递推而来，能否保证在推<code>f[i][v]</code>时（也即在第i次主循环中推f[v]时）能够得到<code>f[i-1][v]</code>和<code>f[i-1][v -c[i]]</code>的值呢？事实上，这要求在每次主循环中我们以v=V..0的顺序推f[v]，这样才能保证推f[v]时f[v-c[i]]保存的是状态<code>f[i -1][v-c[i]]</code>的值。伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>其中的f[v]=max{f[v],f[v-c[i]]}一句恰就相当于我们的转移方程<code>f[i][v]=max&#123;f[i-1][v],f[i- 1][v-c[i]]&#125;</code>，因为现在的f[v-c[i]]就相当于原来的<code>f[i-1][v-c[i]]</code>。如果将v的循环顺序从上面的逆序改成顺序的话，那么则成了<code>f[i][v]</code>由<code>f[i][v-c[i]]</code>推知，与本题意不符，但它却是另一个重要的背包问题P02最简捷的解决方案，故学习只用一维数组解01背包问题是十分必要的。</p>\n<h3 id=\"1-4-总结\"><a href=\"#1-4-总结\" class=\"headerlink\" title=\"1.4.总结\"></a>1.4.总结</h3><p>01背包问题是最基本的背包问题，它包含了背包问题中设计状态、方程的最基本思想，另外，别的类型的背包问题往往也可以转换成01背包问题求解。故一定要仔细体会上面基本思路的得出方法，状态转移方程的意义，以及最后怎样优化的空间复杂度。</p>\n<h2 id=\"2-完全背包问题\"><a href=\"#2-完全背包问题\" class=\"headerlink\" title=\"2. 完全背包问题\"></a>2. 完全背包问题</h2><h3 id=\"2-1-题目\"><a href=\"#2-1-题目\" class=\"headerlink\" title=\"2.1.题目\"></a>2.1.题目</h3><p>有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"2-2-基本思路\"><a href=\"#2-2-基本思路\" class=\"headerlink\" title=\"2.2.基本思路\"></a>2.2.基本思路</h3><p>这个问题非常类似于01背包问题，所不同的是每种物品有无限件。也就是从每种物品的角度考虑，与它相关的策略已并非取或不取两种，而是有取0件、取1件、取2件……等很多种。如果仍然按照解01背包时的思路，令<code>f[i][v]</code>表示前i种物品恰放入一个容量为v的背包的最大权值。仍然可以按照每种物品不同的策略写出状态转移方程，像这样：<code>f[i][v]=max&#123;f[i-1][v-k*c[i]]+k*w[i]|0&lt;=k*c[i]&lt;= v&#125;</code>。这跟01背包问题一样有<code>O(N*V)</code>个状态需要求解，但求解每个状态的时间则不是常数了，求解状态<code>f[i][v]</code>的时间是O(v/c[i])，总的复杂度是超过<code>O(VN)</code>的。</p>\n<p>将01背包问题的基本思路加以改进，得到了这样一个清晰的方法。这说明01背包问题的方程的确是很重要，可以推及其它类型的背包问题。但我们还是试图改进这个复杂度。</p>\n<h3 id=\"2-3-一个简单有效的优化\"><a href=\"#2-3-一个简单有效的优化\" class=\"headerlink\" title=\"2.3.一个简单有效的优化\"></a>2.3.一个简单有效的优化</h3><p>完全背包问题有一个很简单有效的优化，是这样的：若两件物品i、j满足<code>c[i]&lt;=c[j]</code>且<code>w[i]&gt;=w[j]</code>，则将物品j去掉，不用考虑。这个优化的正确性显然：任何情况下都可将价值小费用高得j换成物美价廉的i，得到至少不会更差的方案。对于随机生成的数据，这个方法往往会大大减少物品的件数，从而加快速度。然而这个并不能改善最坏情况的复杂度，因为有可能特别设计的数据可以一件物品也去不掉。</p>\n<p>转化为01背包问题求解<br>既然01背包问题是最基本的背包问题，那么我们可以考虑把完全背包问题转化为01背包问题来解。最简单的想法是，考虑到第i种物品最多选<code>V/c [i]</code>件，于是可以把第i种物品转化为<code>V/c[i]</code>件费用及价值均不变的物品，然后求解这个01背包问题。这样完全没有改进基本思路的时间复杂度，但这毕竟给了我们将完全背包问题转化为01背包问题的思路：将一种物品拆成多件物品。</p>\n<p>更高效的转化方法是：把第i种物品拆成费用为<code>c[i]*2^k</code>、价值为<code>w[i]*2^k</code>的若干件物品，其中k满足<code>c[i]*2^k&lt;V</code>。这是二进制的思想，因为不管最优策略选几件第i种物品，总可以表示成若干个<code>2^k</code>件物品的和。这样把每种物品拆成<code>O(log(V/c[i]))</code>件物品，是一个很大的改进。但我们有更优的<code>O(VN)</code>的算法。<code> * O(VN)</code>的算法这个算法使用一维数组，先看伪代码：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N </span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V </span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>你会发现，这个伪代码与01背包问题的伪代码只有v的循环次序不同而已。为什么这样一改就可行呢？首先想想为什么01背包问题中要按照v=V..0的逆序来循环。这是因为要保证第i次循环中的状态<code>f[i][v]</code>是由状态<code>f[i-1][v-c[i]]</code>递推而来。换句话说，这正是为了保证每件物品只选一次，保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果<code>f[i-1][v-c[i]]</code>。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果<code>f[i][v-c[i]]</code>，所以就可以并且必须采用v= 0..V的顺序循环。这就是这个简单的程序为何成立的道理。</p>\n<p>这个算法也可以以另外的思路得出。例如，基本思路中的状态转移方程可以等价地变形成这种形式：<code>f[i][v]=max&#123;f[i-1][v],f[i][v-c[i]]+w[i]&#125;</code>，将这个方程用一维数组实现，便得到了上面的伪代码。</p>\n<h3 id=\"2-4-总结\"><a href=\"#2-4-总结\" class=\"headerlink\" title=\"2.4.总结\"></a>2.4.总结</h3><p>完全背包问题也是一个相当基础的背包问题，它有两个状态转移方程，分别在“基本思路”以及“<code>O(VN)</code>的算法“的小节中给出。希望你能够对这两个状态转移方程都仔细地体会，不仅记住，也要弄明白它们是怎么得出来的，最好能够自己想一种得到这些方程的方法。事实上，对每一道动态规划题目都思考其方程的意义以及如何得来，是加深对动态规划的理解、提高动态规划功力的好方法。</p>\n<h2 id=\"3-多重背包问题\"><a href=\"#3-多重背包问题\" class=\"headerlink\" title=\"3.多重背包问题\"></a>3.多重背包问题</h2><h3 id=\"3-1-题目\"><a href=\"#3-1-题目\" class=\"headerlink\" title=\"3.1.题目\"></a>3.1.题目</h3><p>有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"3-2-基本算法\"><a href=\"#3-2-基本算法\" class=\"headerlink\" title=\"3.2.基本算法\"></a>3.2.基本算法</h3><p>这题目和完全背包问题很类似。基本的方程只需将完全背包问题的方程略微一改即可，因为对于第i种物品有n[i]+1种策略：取0件，取1件……取 n[i]件。令<code>f[i][v]</code>表示前i种物品恰放入一个容量为v的背包的最大权值，则：<code>f[i][v]=max&#123;f[i-1][v-k*c[i]]+ k*w[i]|0&lt;=k&lt;=n[i]&#125;</code>。复杂度是<code>O(V*∑n[i])</code>。</p>\n<p>转化为01背包问题<br>另一种好想好写的基本方法是转化为01背包求解：把第i种物品换成n[i]件01背包中的物品，则得到了物品数为<code>∑n[i]</code>的01背包问题，直接求解，复杂度仍然是<code>O(V*∑n[i])</code>。</p>\n<p>但是我们期望将它转化为01背包问题之后能够像完全背包一样降低复杂度。仍然考虑二进制的思想，我们考虑把第i种物品换成若干件物品，使得原问题中第i种物品可取的每种策略——取0..n[i]件——均能等价于取若干件代换以后的物品。另外，取超过n[i]件的策略必不能出现。</p>\n<p>方法是：将第i种物品分成若干件物品，其中每件物品有一个系数，这件物品的费用和价值均是原来的费用和价值乘以这个系数。使这些系数分别为 <code>1,2,4,...,2^(k-1)</code>,<code>n[i]-2^k+1</code>，且k是满足<code>n[i]-2^k+1&gt;0</code>的最大整数。例如，如果n[i]为13，就将这种物品分成系数分别为1,2,4,6的四件物品。</p>\n<p>分成的这几件物品的系数和为n[i]，表明不可能取多于n[i]件的第i种物品。另外这种方法也能保证对于<code>0..n[i]</code>间的每一个整数，均可以用若干个系数的和表示，这个证明可以分<code>0..2^k-1</code>和<code>2^k..n[i]</code>两段来分别讨论得出，并不难，希望你自己思考尝试一下。</p>\n<p>这样就将第i种物品分成了<code>O(log n[i])</code>种物品，将原问题转化为了复杂度为<code>O(V*∑log n[i])</code>的01背包问题，是很大的改进。</p>\n<h3 id=\"3-3-O-VN-的算法\"><a href=\"#3-3-O-VN-的算法\" class=\"headerlink\" title=\"3.3.O(VN)的算法\"></a>3.3.<code>O(VN)</code>的算法</h3><p>多重背包问题同样有<code>O(VN)</code>的算法。这个算法基于基本算法的状态转移方程，但应用单调队列的方法使每个状态的值可以以均摊O(1)的时间求解。由于用单调队列优化的DP已超出了<code>NOIP</code>的范围，故本文不再展开讲解。我最初了解到这个方法是在楼天成的“男人八题”幻灯片上。</p>\n<h3 id=\"3-4-小结\"><a href=\"#3-4-小结\" class=\"headerlink\" title=\"3.4.小结\"></a>3.4.小结</h3><p>这里我们看到了将一个算法的复杂度由<code>O(V*∑n[i])</code>改进到<code>O(V*∑log n[i])</code>的过程，还知道了存在应用超出<code>NOIP</code>范围的知识的<code>O(VN)</code>算法。希望你特别注意“拆分物品”的思想和方法，自己证明一下它的正确性，并用尽量简洁的程序来实现。</p>\n<h2 id=\"4-混合三种背包问题\"><a href=\"#4-混合三种背包问题\" class=\"headerlink\" title=\"4.混合三种背包问题\"></a>4.混合三种背包问题</h2><h3 id=\"4-1-问题\"><a href=\"#4-1-问题\" class=\"headerlink\" title=\"4.1.问题\"></a>4.1.问题</h3><p>如果将P01、P02、P03混合起来。也就是说，有的物品只可以取一次（01背包），有的物品可以取无限次（完全背包），有的物品可以取的次数有一个上限（多重背包）。应该怎么求解呢？</p>\n<h3 id=\"4-2-01背包与完全背包的混合\"><a href=\"#4-2-01背包与完全背包的混合\" class=\"headerlink\" title=\"4.2.01背包与完全背包的混合\"></a>4.2.01背包与完全背包的混合</h3><p>考虑到在P01和P02中最后给出的伪代码只有一处不同，故如果只有两类物品：一类物品只能取一次，另一类物品可以取无限次，那么只需在对每个物品应用转移方程时，根据物品的类别选用顺序或逆序的循环即可，复杂度是<code>O(VN)</code>。伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">if</span> 第i件物品是<span class=\"number\">01</span>背包</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> 第i件物品是完全背包</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V</span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-再加上多重背包\"><a href=\"#4-3-再加上多重背包\" class=\"headerlink\" title=\"4.3.再加上多重背包\"></a>4.3.再加上多重背包</h3><p>如果再加上有的物品最多可以取有限次，那么原则上也可以给出<code>O(VN)</code>的解法：遇到多重背包类型的物品用单调队列解即可。但如果不考虑超过NOIP范围的算法的话，用P03中将每个这类物品分成O(log n[i])个01背包的物品的方法也已经很优了。</p>\n<h3 id=\"4-4-小结\"><a href=\"#4-4-小结\" class=\"headerlink\" title=\"4.4.小结\"></a>4.4.小结</h3><p>有人说，困难的题目都是由简单的题目叠加而来的。这句话是否公理暂且存之不论，但它在本讲中已经得到了充分的体现。本来01背包、完全背包、多重背包都不是什么难题，但将它们简单地组合起来以后就得到了这样一道一定能吓倒不少人的题目。但只要基础扎实，领会三种基本背包问题的思想，就可以做到把困难的题目拆分成简单的题目来解决。</p>\n<h2 id=\"5-二维费用的背包问题\"><a href=\"#5-二维费用的背包问题\" class=\"headerlink\" title=\"5.二维费用的背包问题\"></a>5.二维费用的背包问题</h2><h3 id=\"5-1-问题\"><a href=\"#5-1-问题\" class=\"headerlink\" title=\"5.1.问题\"></a>5.1.问题</h3><p>二维费用的背包问题是指：对于每件物品，具有两种不同的费用；选择这件物品必须同时付出这两种代价；对于每种代价都有一个可付出的最大值（背包容量）。问怎样选择物品可以得到最大的价值。设这两种代价分别为代价1和代价2，第i件物品所需的两种代价分别为a[i]和b[i]。两种代价可付出的最大值（两种背包容量）分别为V和U。物品的价值为w[i]。</p>\n<h3 id=\"5-2-算法\"><a href=\"#5-2-算法\" class=\"headerlink\" title=\"5.2.算法\"></a>5.2.算法</h3><p>费用加了一维，只需状态也加一维即可。设<code>f[i][v][u]</code>表示前i件物品付出两种代价分别为v和u时可获得的最大价值。状态转移方程就是：<code>f [i][v][u]=max&#123;f[i-1][v][u],f[i-1][v-a[i]][u-b[i]]+w[i]&#125;</code>。如前述方法，可以只使用二维的数组：当每件物品只可以取一次时变量v和u采用顺序的循环，当物品有如完全背包问题时采用逆序的循环。当物品有如多重背包问题时拆分物品。</p>\n<h3 id=\"5-3-物品总个数的限制\"><a href=\"#5-3-物品总个数的限制\" class=\"headerlink\" title=\"5.3.物品总个数的限制\"></a>5.3.物品总个数的限制</h3><p>有时，“二维费用”的条件是以这样一种隐含的方式给出的：最多只能取M件物品。这事实上相当于每件物品多了一种“件数”的费用，每个物品的件数费用均为1，可以付出的最大件数费用为M。换句话说，设<code>f[v][m]</code>表示付出费用v、最多选m件时可得到的最大价值，则根据物品的类型（01、完全、多重）用不同的方法循环更新，最后在<code>f[0..V</code>][0..M]范围内寻找答案。</p>\n<p>另外，如果要求“恰取M件物品”，则在<code>f[0..V][M]</code>范围内寻找答案。</p>\n<h3 id=\"5-4-小结\"><a href=\"#5-4-小结\" class=\"headerlink\" title=\"5.4.小结\"></a>5.4.小结</h3><p>事实上，当发现由熟悉的动态规划题目变形得来的题目时，在原来的状态中加一纬以满足新的限制是一种比较通用的方法。希望你能从本讲中初步体会到这种方法。</p>\n<h2 id=\"6-分组的背包问题\"><a href=\"#6-分组的背包问题\" class=\"headerlink\" title=\"6.分组的背包问题\"></a>6.分组的背包问题</h2><h3 id=\"6-1-问题\"><a href=\"#6-1-问题\" class=\"headerlink\" title=\"6.1.问题\"></a>6.1.问题</h3><p>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。这些物品被划分为若干组，每组中的物品互相冲突，最多选一件。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"6-2-算法\"><a href=\"#6-2-算法\" class=\"headerlink\" title=\"6.2.算法\"></a>6.2.算法</h3><p>这个问题变成了每组物品有若干种策略：是选择本组的某一件，还是一件都不选。也就是说设<code>f[k</code>][v]表示前k组物品花费费用v能取得的最大权值，则有<code>f[k][v]=max&#123;f[k-1][v],f[k-1][v-c[i]]+w[i]|</code>物品i属于第k组}。</p>\n<p>使用一维数组的伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 所有的组k</span><br><span class=\"line\"><span class=\"keyword\">for</span> 所有的i属于组k</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>另外，显然可以对每组中的物品应用P02中“一个简单有效的优化”。</p>\n<h3 id=\"6-3-小结\"><a href=\"#6-3-小结\" class=\"headerlink\" title=\"6.3.小结\"></a>6.3.小结</h3><p>分组的背包问题将彼此互斥的若干物品称为一个组，这建立了一个很好的模型。不少背包问题的变形都可以转化为分组的背包问题（例如P07），由分组的背包问题进一步可定义“泛化物品”的概念，十分有利于解题。 </p>\n<h2 id=\"7-有依赖的背包问题\"><a href=\"#7-有依赖的背包问题\" class=\"headerlink\" title=\"7.有依赖的背包问题\"></a>7.有依赖的背包问题</h2><h3 id=\"7-1-简化的问题\"><a href=\"#7-1-简化的问题\" class=\"headerlink\" title=\"7.1.简化的问题\"></a>7.1.简化的问题</h3><p>这种背包问题的物品间存在某种“依赖”的关系。也就是说，i依赖于j，表示若选物品i，则必须选物品j。为了简化起见，我们先设没有某个物品既依赖于别的物品，又被别的物品所依赖；另外，没有某件物品同时依赖多件物品。</p>\n<h3 id=\"7-2-算法\"><a href=\"#7-2-算法\" class=\"headerlink\" title=\"7.2.算法\"></a>7.2.算法</h3><p>这个问题由NOIP2006金明的预算方案一题扩展而来。遵从该题的提法，将不依赖于别的物品的物品称为“主件”，依赖于某主件的物品称为“附件”。由这个问题的简化条件可知所有的物品由若干主件和依赖于每个主件的一个附件集合组成。</p>\n<p>按照背包问题的一般思路，仅考虑一个主件和它的附件集合。可是，可用的策略非常多，包括：一个也不选，仅选择主件，选择主件后再选择一个附件，选择主件后再选择两个附件……无法用状态转移方程来表示如此多的策略。（事实上，设有n个附件，则策略有2^n+1个，为指数级。）</p>\n<p>考虑到所有这些策略都是互斥的（也就是说，你只能选择一种策略），所以一个主件和它的附件集合实际上对应于P06中的一个物品组，每个选择了主件又选择了若干个附件的策略对应于这个物品组中的一个物品，其费用和价值都是这个策略中的物品的值的和。但仅仅是这一步转化并不能给出一个好的算法，因为物品组中的物品还是像原问题的策略一样多。</p>\n<p>再考虑P06中的一句话：可以对每组中的物品应用P02中“一个简单有效的优化”。这提示我们，对于一个物品组中的物品，所有费用相同的物品只留一个价值最大的，不影响结果。所以，我们可以对主件i的“附件集合”先进行一次01背包，得到费用依次为0..V-c[i]所有这些值时相应的最大价值f’[0..V-c[i]]。那么这个主件及它的附件集合相当于V-c[i]+1个物品的物品组，其中费用为c[i]+k的物品的价值为f’[k]+w[i]。也就是说原来指数级的策略中有很多策略都是冗余的，通过一次01背包后，将主件i转化为 V-c[i]+1个物品的物品组，就可以直接应用P06的算法解决问题了。</p>\n<h3 id=\"7-3-更一般的问题\"><a href=\"#7-3-更一般的问题\" class=\"headerlink\" title=\"7.3.更一般的问题\"></a>7.3.更一般的问题</h3><p>更一般的问题是：依赖关系以图论中“森林”的形式给出（森林即多叉树的集合），也就是说，主件的附件仍然可以具有自己的附件集合，限制只是每个物品最多只依赖于一个物品（只有一个主件）且不出现循环依赖。</p>\n<p>解决这个问题仍然可以用将每个主件及其附件集合转化为物品组的方式。唯一不同的是，由于附件可能还有附件，就不能将每个附件都看作一个一般的01 背包中的物品了。若这个附件也有附件集合，则它必定要被先转化为物品组，然后用分组的背包问题解出主件及其附件集合所对应的附件组中各个费用的附件所对应的价值。</p>\n<p>事实上，这是一种树形DP，其特点是每个父节点都需要对它的各个儿子的属性进行一次DP以求得自己的相关属性。这已经触及到了“泛化物品”的思想。看完P08后，你会发现这个“依赖关系树”每一个子树都等价于一件泛化物品，求某节点为根的子树对应的泛化物品相当于求其所有儿子的对应的泛化物品之和。</p>\n<h3 id=\"7-4-小结\"><a href=\"#7-4-小结\" class=\"headerlink\" title=\"7.4.小结\"></a>7.4.小结</h3><p>NOIP2006的那道背包问题我做得很失败，写了上百行的代码，却一分未得。后来我通过思考发现通过引入“物品组”和“依赖”的概念可以加深对这题的理解，还可以解决它的推广问题。用物品组的思想考虑那题中极其特殊的依赖关系：物品不能既作主件又作附件，每个主件最多有两个附件，可以发现一个主件和它的两个附件等价于一个由四个物品组成的物品组，这便揭示了问题的某种本质。</p>\n<p>我想说：失败不是什么丢人的事情，从失败中全无收获才是。</p>\n<h2 id=\"8-泛化物品\"><a href=\"#8-泛化物品\" class=\"headerlink\" title=\"8.泛化物品\"></a>8.泛化物品</h2><h3 id=\"8-1-定义\"><a href=\"#8-1-定义\" class=\"headerlink\" title=\"8.1.定义\"></a>8.1.定义</h3><p>考虑这样一种物品，它并没有固定的费用和价值，而是它的价值随着你分配给它的费用而变化。这就是泛化物品的概念。</p>\n<p>更严格的定义之。在背包容量为V的背包问题中，泛化物品是一个定义域为0..V中的整数的函数h，当分配给它的费用为v时，能得到的价值就是h(v)。</p>\n<p>这个定义有一点点抽象，另一种理解是一个泛化物品就是一个数组h[0..V]，给它费用v，可得到价值h[V]。</p>\n<p>一个费用为c价值为w的物品，如果它是01背包中的物品，那么把它看成泛化物品，它就是除了h(c)=w其它函数值都为0的一个函数。如果它是完全背包中的物品，那么它可以看成这样一个函数，仅当v被c整除时有h(v)=v/c<em>w，其它函数值均为0。如果它是多重背包中重复次数最多为n的物品，那么它对应的泛化物品的函数有h(v)=v/c</em>w仅当v被c整除且v/c&lt;=n，其它情况函数值均为0。</p>\n<p>一个物品组可以看作一个泛化物品h。对于一个0..V中的v，若物品组中不存在费用为v的的物品，则h(v)=0，否则h(v)为所有费用为v的物品的最大价值。P07中每个主件及其附件集合等价于一个物品组，自然也可看作一个泛化物品。</p>\n<h3 id=\"8-2-泛化物品的和\"><a href=\"#8-2-泛化物品的和\" class=\"headerlink\" title=\"8.2.泛化物品的和\"></a>8.2.泛化物品的和</h3><p>如果面对两个泛化物品h和l，要用给定的费用从这两个泛化物品中得到最大的价值，怎么求呢？事实上，对于一个给定的费用v，只需枚举将这个费用如何分配给两个泛化物品就可以了。同样的，对于0..V的每一个整数v，可以求得费用v分配到h和l中的最大价值f(v)。也即<code>f(v)=max&#123;h(k) +l(v-k)|0&lt;=k&lt;=v&#125;</code>。可以看到，f也是一个由泛化物品h和l决定的定义域为0..V的函数，也就是说，f是一个由泛化物品h和 l决定的泛化物品。</p>\n<p>由此可以定义泛化物品的和：h、l都是泛化物品，若泛化物品f满足<code>f(v)=max&#123;h(k)+l(v-k)|0&lt;=k&lt;=v&#125;</code>，则称f是h与l的和，即f=h+l。这个运算的时间复杂度是O(V^2)。</p>\n<p>泛化物品的定义表明：在一个背包问题中，若将两个泛化物品代以它们的和，不影响问题的答案。事实上，对于其中的物品都是泛化物品的背包问题，求它的答案的过程也就是求所有这些泛化物品之和的过程。设此和为s，则答案就是s[0..V]中的最大值。</p>\n<h3 id=\"8-3-背包问题的泛化物品\"><a href=\"#8-3-背包问题的泛化物品\" class=\"headerlink\" title=\"8.3.背包问题的泛化物品\"></a>8.3.背包问题的泛化物品</h3><p>一个背包问题中，可能会给出很多条件，包括每种物品的费用、价值等属性，物品之间的分组、依赖等关系等。但肯定能将问题对应于某个泛化物品。也就是说，给定了所有条件以后，就可以对每个非负整数v求得：若背包容量为v，将物品装入背包可得到的最大价值是多少，这可以认为是定义在非负整数集上的一件泛化物品。这个泛化物品——或者说问题所对应的一个定义域为非负整数的函数——包含了关于问题本身的高度浓缩的信息。一般而言，求得这个泛化物品的一个子域（例如0..V）的值之后，就可以根据这个函数的取值得到背包问题的最终答案。</p>\n<p>综上所述，一般而言，求解背包问题，即求解这个问题所对应的一个函数，即该问题的泛化物品。而求解某个泛化物品的一种方法就是将它表示为若干泛化物品的和然后求之。</p>\n<h3 id=\"8-4-小结\"><a href=\"#8-4-小结\" class=\"headerlink\" title=\"8.4.小结\"></a>8.4.小结</h3><p>本讲可以说都是我自己的原创思想。具体来说，是我在学习函数式编程的 Scheme 语言时，用函数编程的眼光审视各类背包问题得出的理论。这一讲真的很抽象，也许在“模型的抽象程度”这一方面已经超出了NOIP的要求，所以暂且看不懂也没关系。相信随着你的OI之路逐渐延伸，有一天你会理解的。</p>\n<p>我想说：“思考”是一个<code>OIer</code>最重要的品质。简单的问题，深入思考以后，也能发现更多。</p>\n<h2 id=\"9-背包问题问法的变化\"><a href=\"#9-背包问题问法的变化\" class=\"headerlink\" title=\"9.背包问题问法的变化\"></a>9.背包问题问法的变化</h2><p>以上涉及的各种背包问题都是要求在背包容量（费用）的限制下求可以取到的最大价值，但背包问题还有很多种灵活的问法，在这里值得提一下。但是我认为，只要深入理解了求背包问题最大价值的方法，即使问法变化了，也是不难想出算法的。</p>\n<p>例如，求解最多可以放多少件物品或者最多可以装满多少背包的空间。这都可以根据具体问题利用前面的方程求出所有状态的值（f数组）之后得到。</p>\n<p>还有，如果要求的是“总价值最小”“总件数最小”，只需简单的将上面的状态转移方程中的max改成min即可。</p>\n<p>下面说一些变化更大的问法。</p>\n<h3 id=\"9-1-输出方案\"><a href=\"#9-1-输出方案\" class=\"headerlink\" title=\"9.1.输出方案\"></a>9.1.输出方案</h3><p>一般而言，背包问题是要求一个最优值，如果要求输出这个最优值的方案，可以参照一般动态规划问题输出方案的方法：记录下每个状态的最优值是由状态转移方程的哪一项推出来的，换句话说，记录下它是由哪一个策略推出来的。便可根据这条策略找到上一个状态，从上一个状态接着向前推即可。</p>\n<p>还是以01背包为例，方程为<code>f[i][v]=max&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>。再用一个数组g[i] [v]，设<code>g[i][v]=0</code>表示推出<code>f[i</code>][v]的值时是采用了方程的前一项（也即<code>f[i][v]=f[i-1][v]</code>），<code>g[i][v]</code>表示采用了方程的后一项。注意这两项分别表示了两种策略：未选第i个物品及选了第i个物品。那么输出方案的伪代码可以这样写（设最终状态为<code>f[N</code>][V]）：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i=N</span><br><span class=\"line\">v=V</span><br><span class=\"line\">while(i&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span>(g[i][v]==<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;未选第i项物品&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(g[i][v]==<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;选了第i项物品&quot;</span></span><br><span class=\"line\">v=v-c[i]</span><br></pre></td></tr></table></figure>\n\n<p>另外，采用方程的前一项或后一项也可以在输出方案的过程中根据f[i][v]的值实时地求出来，也即不须纪录g数组，将上述代码中的<code>g[i] [v]==0</code>改成<code>f[i][v]==f[i-1][v]</code>，<code>g[i][v]==1</code>改成<code>f[i][v]==f[i-1][v-c[i]]+w[i]</code>也可。</p>\n<h3 id=\"9-2-输出字典序最小的最优方案\"><a href=\"#9-2-输出字典序最小的最优方案\" class=\"headerlink\" title=\"9.2.输出字典序最小的最优方案\"></a>9.2.输出字典序最小的最优方案</h3><p>这里“字典序最小”的意思是1..N号物品的选择方案排列出来以后字典序最小。以输出01背包最小字典序的方案为例。</p>\n<p>一般而言，求一个字典序最小的最优方案，只需要在转移时注意策略。首先，子问题的定义要略改一些。我们注意到，如果存在一个选了物品1的最优方案，那么答案一定包含物品1，原问题转化为一个背包容量为v-c[1]，物品为2..N的子问题。反之，如果答案不包含物品1，则转化成背包容量仍为V，物品为2..N的子问题。不管答案怎样，子问题的物品都是以i..N而非前所述的1..i的形式来定义的，所以状态的定义和转移方程都需要改一下。但也许更简易的方法是先把物品逆序排列一下，以下按物品已被逆序排列来叙述。</p>\n<p>在这种情况下，可以按照前面经典的状态转移方程来求值，只是输出方案的时候要注意：从N到1输入时，如果<code>f[i][v]==f[i-v]</code>及<code>f[i][v]==f[i-1][f-c[i]]+w[i]</code>同时成立，应该按照后者（即选择了物品i）来输出方案。</p>\n<p>求方案总数<br>对于一个给定了背包容量、物品费用、物品间相互关系（分组、依赖等）的背包问题，除了再给定每个物品的价值后求可得到的最大价值外，还可以得到装满背包或将背包装至某一指定容量的方案总数。</p>\n<p>对于这类改变问法的问题，一般只需将状态转移方程中的max改成sum即可。例如若每件物品均是01背包中的物品，转移方程即为<code>f[i][v]=sum&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>，初始条件<code>f[0][0]=1</code>。</p>\n<p>事实上，这样做可行的原因在于状态转移方程已经考察了所有可能的背包组成方案。</p>\n<h3 id=\"9-3-最优方案的总数\"><a href=\"#9-3-最优方案的总数\" class=\"headerlink\" title=\"9.3.最优方案的总数\"></a>9.3.最优方案的总数</h3><p>这里的最优方案是指物品总价值最大的方案。还是以01背包为例。</p>\n<p>结合求最大总价值和方案总数两个问题的思路，最优方案的总数可以这样求：f[i][v]意义同前述，g[i][v]表示这个子问题的最优方案的总数，则在求f[i][v]的同时求g[i][v]的伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V</span><br><span class=\"line\">f[i][v]=max&#123;f[i<span class=\"number\">-1</span>][v],f[i<span class=\"number\">-1</span>][v-c[i]]+w[i]&#125;</span><br><span class=\"line\">g[i][v]=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(f[i][v]==f[i<span class=\"number\">-1</span>][v])</span><br><span class=\"line\">inc(g[i][v],g[i<span class=\"number\">-1</span>][v]</span><br><span class=\"line\"><span class=\"keyword\">if</span>(f[i][v]==f[i<span class=\"number\">-1</span>][v-c[i]]+w[i])</span><br><span class=\"line\">inc(g[i][v],g[i<span class=\"number\">-1</span>][v-c[i]])</span><br></pre></td></tr></table></figure>\n\n<p>如果你是第一次看到这样的问题，请仔细体会上面的伪代码。</p>\n<h3 id=\"9-4-小结\"><a href=\"#9-4-小结\" class=\"headerlink\" title=\"9.4.小结\"></a>9.4.小结</h3><p>显然，这里不可能穷尽背包类动态规划问题所有的问法。甚至还存在一类将背包类动态规划问题与其它领域（例如数论、图论）结合起来的问题，在这篇论背包问题的专文中也不会论及。但只要深刻领会前述所有类别的背包问题的思路和状态转移方程，遇到其它的变形问法，只要题目难度还属于NOIP，应该也不难想出算法。</p>\n<p>触类旁通、举一反三，应该也是一个OIer应有的品质吧。</p>\n","site":{"data":{}},"cover":false,"excerpt":"<h1 id=\"dd大牛的《背包九讲》\"><a href=\"#dd大牛的《背包九讲》\" class=\"headerlink\" title=\"dd大牛的《背包九讲》\"></a>dd大牛的《背包九讲》</h1><h2 id=\"1-01背包问题\"><a href=\"#1-01背包问题\" class=\"headerlink\" title=\"1.01背包问题\"></a>1.01背包问题</h2><h3 id=\"1-1-题目\"><a href=\"#1-1-题目\" class=\"headerlink\" title=\"1.1.题目\"></a>1.1.题目</h3><p>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"1-2-基本思路\"><a href=\"#1-2-基本思路\" class=\"headerlink\" title=\"1.2.基本思路\"></a>1.2.基本思路</h3><p>这是最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。</p>\n<p>用子问题定义状态：即<code>f[i][v]</code>表示前i件物品恰放入一个容量为v的背包可以获得的最大价值。则其状态转移方程便是：</p>\n<p><code>f[i][v]=max&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>。</p>","more":"<p>这个方程非常重要，基本上所有跟背包相关的问题的方程都是由它衍生出来的。所以有必要将它详细解释一下：“将前i件物品放入容量为v的背包中”这个子问题，若只考虑第i件物品的策略（放或不放），那么就可以转化为一个只牵扯前i-1件物品的问题。如果不放第i件物品，那么问题就转化为“前i-1件物品放入容量为v的背包中”；如果放第i件物品，那么问题就转化为“前i-1件物品放入剩下的容量为<code>v-c[i]</code>的背包中”，此时能获得的最大价值就是<code>f [i-1][v-c[i]]</code>再加上通过放入第i件物品获得的价值w[i]。</p>\n<p>注意<code>f[i][v]</code>有意义当且仅当存在一个前i件物品的子集，其费用总和为v。所以按照这个方程递推完毕后，最终的答案并不一定是<code>f[N] [V]</code>，而是<code>f[N][0..V]</code>的最大值。如果将状态的定义中的“恰”字去掉，在转移方程中就要再加入一项<code>f[i][v-1]</code>，这样就可以保证f[N] [V]就是最后的答案。至于为什么这样就可以，由你自己来体会了。</p>\n<h3 id=\"1-3-优化空间复杂度\"><a href=\"#1-3-优化空间复杂度\" class=\"headerlink\" title=\"1.3.优化空间复杂度\"></a>1.3.优化空间复杂度</h3><p>以上方法的时间和空间复杂度均为O(N*V)，其中时间复杂度基本已经不能再优化了，但空间复杂度却可以优化到O(V)。</p>\n<p>先考虑上面讲的基本思路如何实现，肯定是有一个主循环i=1..N，每次算出来二维数组<code>f[i][0..V]</code>的所有值。那么，如果只用一个数组f [0..V]，能不能保证第i次循环结束后f[v]中表示的就是我们定义的状态<code>f[i][v]</code>呢？<code>f[i][v]</code>是由<code>f[i-1][v]</code>和f[i-1] [v-c[i]]两个子问题递推而来，能否保证在推<code>f[i][v]</code>时（也即在第i次主循环中推f[v]时）能够得到<code>f[i-1][v]</code>和<code>f[i-1][v -c[i]]</code>的值呢？事实上，这要求在每次主循环中我们以v=V..0的顺序推f[v]，这样才能保证推f[v]时f[v-c[i]]保存的是状态<code>f[i -1][v-c[i]]</code>的值。伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>其中的f[v]=max{f[v],f[v-c[i]]}一句恰就相当于我们的转移方程<code>f[i][v]=max&#123;f[i-1][v],f[i- 1][v-c[i]]&#125;</code>，因为现在的f[v-c[i]]就相当于原来的<code>f[i-1][v-c[i]]</code>。如果将v的循环顺序从上面的逆序改成顺序的话，那么则成了<code>f[i][v]</code>由<code>f[i][v-c[i]]</code>推知，与本题意不符，但它却是另一个重要的背包问题P02最简捷的解决方案，故学习只用一维数组解01背包问题是十分必要的。</p>\n<h3 id=\"1-4-总结\"><a href=\"#1-4-总结\" class=\"headerlink\" title=\"1.4.总结\"></a>1.4.总结</h3><p>01背包问题是最基本的背包问题，它包含了背包问题中设计状态、方程的最基本思想，另外，别的类型的背包问题往往也可以转换成01背包问题求解。故一定要仔细体会上面基本思路的得出方法，状态转移方程的意义，以及最后怎样优化的空间复杂度。</p>\n<h2 id=\"2-完全背包问题\"><a href=\"#2-完全背包问题\" class=\"headerlink\" title=\"2. 完全背包问题\"></a>2. 完全背包问题</h2><h3 id=\"2-1-题目\"><a href=\"#2-1-题目\" class=\"headerlink\" title=\"2.1.题目\"></a>2.1.题目</h3><p>有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"2-2-基本思路\"><a href=\"#2-2-基本思路\" class=\"headerlink\" title=\"2.2.基本思路\"></a>2.2.基本思路</h3><p>这个问题非常类似于01背包问题，所不同的是每种物品有无限件。也就是从每种物品的角度考虑，与它相关的策略已并非取或不取两种，而是有取0件、取1件、取2件……等很多种。如果仍然按照解01背包时的思路，令<code>f[i][v]</code>表示前i种物品恰放入一个容量为v的背包的最大权值。仍然可以按照每种物品不同的策略写出状态转移方程，像这样：<code>f[i][v]=max&#123;f[i-1][v-k*c[i]]+k*w[i]|0&lt;=k*c[i]&lt;= v&#125;</code>。这跟01背包问题一样有<code>O(N*V)</code>个状态需要求解，但求解每个状态的时间则不是常数了，求解状态<code>f[i][v]</code>的时间是O(v/c[i])，总的复杂度是超过<code>O(VN)</code>的。</p>\n<p>将01背包问题的基本思路加以改进，得到了这样一个清晰的方法。这说明01背包问题的方程的确是很重要，可以推及其它类型的背包问题。但我们还是试图改进这个复杂度。</p>\n<h3 id=\"2-3-一个简单有效的优化\"><a href=\"#2-3-一个简单有效的优化\" class=\"headerlink\" title=\"2.3.一个简单有效的优化\"></a>2.3.一个简单有效的优化</h3><p>完全背包问题有一个很简单有效的优化，是这样的：若两件物品i、j满足<code>c[i]&lt;=c[j]</code>且<code>w[i]&gt;=w[j]</code>，则将物品j去掉，不用考虑。这个优化的正确性显然：任何情况下都可将价值小费用高得j换成物美价廉的i，得到至少不会更差的方案。对于随机生成的数据，这个方法往往会大大减少物品的件数，从而加快速度。然而这个并不能改善最坏情况的复杂度，因为有可能特别设计的数据可以一件物品也去不掉。</p>\n<p>转化为01背包问题求解<br>既然01背包问题是最基本的背包问题，那么我们可以考虑把完全背包问题转化为01背包问题来解。最简单的想法是，考虑到第i种物品最多选<code>V/c [i]</code>件，于是可以把第i种物品转化为<code>V/c[i]</code>件费用及价值均不变的物品，然后求解这个01背包问题。这样完全没有改进基本思路的时间复杂度，但这毕竟给了我们将完全背包问题转化为01背包问题的思路：将一种物品拆成多件物品。</p>\n<p>更高效的转化方法是：把第i种物品拆成费用为<code>c[i]*2^k</code>、价值为<code>w[i]*2^k</code>的若干件物品，其中k满足<code>c[i]*2^k&lt;V</code>。这是二进制的思想，因为不管最优策略选几件第i种物品，总可以表示成若干个<code>2^k</code>件物品的和。这样把每种物品拆成<code>O(log(V/c[i]))</code>件物品，是一个很大的改进。但我们有更优的<code>O(VN)</code>的算法。<code> * O(VN)</code>的算法这个算法使用一维数组，先看伪代码：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N </span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V </span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>你会发现，这个伪代码与01背包问题的伪代码只有v的循环次序不同而已。为什么这样一改就可行呢？首先想想为什么01背包问题中要按照v=V..0的逆序来循环。这是因为要保证第i次循环中的状态<code>f[i][v]</code>是由状态<code>f[i-1][v-c[i]]</code>递推而来。换句话说，这正是为了保证每件物品只选一次，保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果<code>f[i-1][v-c[i]]</code>。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果<code>f[i][v-c[i]]</code>，所以就可以并且必须采用v= 0..V的顺序循环。这就是这个简单的程序为何成立的道理。</p>\n<p>这个算法也可以以另外的思路得出。例如，基本思路中的状态转移方程可以等价地变形成这种形式：<code>f[i][v]=max&#123;f[i-1][v],f[i][v-c[i]]+w[i]&#125;</code>，将这个方程用一维数组实现，便得到了上面的伪代码。</p>\n<h3 id=\"2-4-总结\"><a href=\"#2-4-总结\" class=\"headerlink\" title=\"2.4.总结\"></a>2.4.总结</h3><p>完全背包问题也是一个相当基础的背包问题，它有两个状态转移方程，分别在“基本思路”以及“<code>O(VN)</code>的算法“的小节中给出。希望你能够对这两个状态转移方程都仔细地体会，不仅记住，也要弄明白它们是怎么得出来的，最好能够自己想一种得到这些方程的方法。事实上，对每一道动态规划题目都思考其方程的意义以及如何得来，是加深对动态规划的理解、提高动态规划功力的好方法。</p>\n<h2 id=\"3-多重背包问题\"><a href=\"#3-多重背包问题\" class=\"headerlink\" title=\"3.多重背包问题\"></a>3.多重背包问题</h2><h3 id=\"3-1-题目\"><a href=\"#3-1-题目\" class=\"headerlink\" title=\"3.1.题目\"></a>3.1.题目</h3><p>有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"3-2-基本算法\"><a href=\"#3-2-基本算法\" class=\"headerlink\" title=\"3.2.基本算法\"></a>3.2.基本算法</h3><p>这题目和完全背包问题很类似。基本的方程只需将完全背包问题的方程略微一改即可，因为对于第i种物品有n[i]+1种策略：取0件，取1件……取 n[i]件。令<code>f[i][v]</code>表示前i种物品恰放入一个容量为v的背包的最大权值，则：<code>f[i][v]=max&#123;f[i-1][v-k*c[i]]+ k*w[i]|0&lt;=k&lt;=n[i]&#125;</code>。复杂度是<code>O(V*∑n[i])</code>。</p>\n<p>转化为01背包问题<br>另一种好想好写的基本方法是转化为01背包求解：把第i种物品换成n[i]件01背包中的物品，则得到了物品数为<code>∑n[i]</code>的01背包问题，直接求解，复杂度仍然是<code>O(V*∑n[i])</code>。</p>\n<p>但是我们期望将它转化为01背包问题之后能够像完全背包一样降低复杂度。仍然考虑二进制的思想，我们考虑把第i种物品换成若干件物品，使得原问题中第i种物品可取的每种策略——取0..n[i]件——均能等价于取若干件代换以后的物品。另外，取超过n[i]件的策略必不能出现。</p>\n<p>方法是：将第i种物品分成若干件物品，其中每件物品有一个系数，这件物品的费用和价值均是原来的费用和价值乘以这个系数。使这些系数分别为 <code>1,2,4,...,2^(k-1)</code>,<code>n[i]-2^k+1</code>，且k是满足<code>n[i]-2^k+1&gt;0</code>的最大整数。例如，如果n[i]为13，就将这种物品分成系数分别为1,2,4,6的四件物品。</p>\n<p>分成的这几件物品的系数和为n[i]，表明不可能取多于n[i]件的第i种物品。另外这种方法也能保证对于<code>0..n[i]</code>间的每一个整数，均可以用若干个系数的和表示，这个证明可以分<code>0..2^k-1</code>和<code>2^k..n[i]</code>两段来分别讨论得出，并不难，希望你自己思考尝试一下。</p>\n<p>这样就将第i种物品分成了<code>O(log n[i])</code>种物品，将原问题转化为了复杂度为<code>O(V*∑log n[i])</code>的01背包问题，是很大的改进。</p>\n<h3 id=\"3-3-O-VN-的算法\"><a href=\"#3-3-O-VN-的算法\" class=\"headerlink\" title=\"3.3.O(VN)的算法\"></a>3.3.<code>O(VN)</code>的算法</h3><p>多重背包问题同样有<code>O(VN)</code>的算法。这个算法基于基本算法的状态转移方程，但应用单调队列的方法使每个状态的值可以以均摊O(1)的时间求解。由于用单调队列优化的DP已超出了<code>NOIP</code>的范围，故本文不再展开讲解。我最初了解到这个方法是在楼天成的“男人八题”幻灯片上。</p>\n<h3 id=\"3-4-小结\"><a href=\"#3-4-小结\" class=\"headerlink\" title=\"3.4.小结\"></a>3.4.小结</h3><p>这里我们看到了将一个算法的复杂度由<code>O(V*∑n[i])</code>改进到<code>O(V*∑log n[i])</code>的过程，还知道了存在应用超出<code>NOIP</code>范围的知识的<code>O(VN)</code>算法。希望你特别注意“拆分物品”的思想和方法，自己证明一下它的正确性，并用尽量简洁的程序来实现。</p>\n<h2 id=\"4-混合三种背包问题\"><a href=\"#4-混合三种背包问题\" class=\"headerlink\" title=\"4.混合三种背包问题\"></a>4.混合三种背包问题</h2><h3 id=\"4-1-问题\"><a href=\"#4-1-问题\" class=\"headerlink\" title=\"4.1.问题\"></a>4.1.问题</h3><p>如果将P01、P02、P03混合起来。也就是说，有的物品只可以取一次（01背包），有的物品可以取无限次（完全背包），有的物品可以取的次数有一个上限（多重背包）。应该怎么求解呢？</p>\n<h3 id=\"4-2-01背包与完全背包的混合\"><a href=\"#4-2-01背包与完全背包的混合\" class=\"headerlink\" title=\"4.2.01背包与完全背包的混合\"></a>4.2.01背包与完全背包的混合</h3><p>考虑到在P01和P02中最后给出的伪代码只有一处不同，故如果只有两类物品：一类物品只能取一次，另一类物品可以取无限次，那么只需在对每个物品应用转移方程时，根据物品的类别选用顺序或逆序的循环即可，复杂度是<code>O(VN)</code>。伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">if</span> 第i件物品是<span class=\"number\">01</span>背包</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> 第i件物品是完全背包</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V</span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-再加上多重背包\"><a href=\"#4-3-再加上多重背包\" class=\"headerlink\" title=\"4.3.再加上多重背包\"></a>4.3.再加上多重背包</h3><p>如果再加上有的物品最多可以取有限次，那么原则上也可以给出<code>O(VN)</code>的解法：遇到多重背包类型的物品用单调队列解即可。但如果不考虑超过NOIP范围的算法的话，用P03中将每个这类物品分成O(log n[i])个01背包的物品的方法也已经很优了。</p>\n<h3 id=\"4-4-小结\"><a href=\"#4-4-小结\" class=\"headerlink\" title=\"4.4.小结\"></a>4.4.小结</h3><p>有人说，困难的题目都是由简单的题目叠加而来的。这句话是否公理暂且存之不论，但它在本讲中已经得到了充分的体现。本来01背包、完全背包、多重背包都不是什么难题，但将它们简单地组合起来以后就得到了这样一道一定能吓倒不少人的题目。但只要基础扎实，领会三种基本背包问题的思想，就可以做到把困难的题目拆分成简单的题目来解决。</p>\n<h2 id=\"5-二维费用的背包问题\"><a href=\"#5-二维费用的背包问题\" class=\"headerlink\" title=\"5.二维费用的背包问题\"></a>5.二维费用的背包问题</h2><h3 id=\"5-1-问题\"><a href=\"#5-1-问题\" class=\"headerlink\" title=\"5.1.问题\"></a>5.1.问题</h3><p>二维费用的背包问题是指：对于每件物品，具有两种不同的费用；选择这件物品必须同时付出这两种代价；对于每种代价都有一个可付出的最大值（背包容量）。问怎样选择物品可以得到最大的价值。设这两种代价分别为代价1和代价2，第i件物品所需的两种代价分别为a[i]和b[i]。两种代价可付出的最大值（两种背包容量）分别为V和U。物品的价值为w[i]。</p>\n<h3 id=\"5-2-算法\"><a href=\"#5-2-算法\" class=\"headerlink\" title=\"5.2.算法\"></a>5.2.算法</h3><p>费用加了一维，只需状态也加一维即可。设<code>f[i][v][u]</code>表示前i件物品付出两种代价分别为v和u时可获得的最大价值。状态转移方程就是：<code>f [i][v][u]=max&#123;f[i-1][v][u],f[i-1][v-a[i]][u-b[i]]+w[i]&#125;</code>。如前述方法，可以只使用二维的数组：当每件物品只可以取一次时变量v和u采用顺序的循环，当物品有如完全背包问题时采用逆序的循环。当物品有如多重背包问题时拆分物品。</p>\n<h3 id=\"5-3-物品总个数的限制\"><a href=\"#5-3-物品总个数的限制\" class=\"headerlink\" title=\"5.3.物品总个数的限制\"></a>5.3.物品总个数的限制</h3><p>有时，“二维费用”的条件是以这样一种隐含的方式给出的：最多只能取M件物品。这事实上相当于每件物品多了一种“件数”的费用，每个物品的件数费用均为1，可以付出的最大件数费用为M。换句话说，设<code>f[v][m]</code>表示付出费用v、最多选m件时可得到的最大价值，则根据物品的类型（01、完全、多重）用不同的方法循环更新，最后在<code>f[0..V</code>][0..M]范围内寻找答案。</p>\n<p>另外，如果要求“恰取M件物品”，则在<code>f[0..V][M]</code>范围内寻找答案。</p>\n<h3 id=\"5-4-小结\"><a href=\"#5-4-小结\" class=\"headerlink\" title=\"5.4.小结\"></a>5.4.小结</h3><p>事实上，当发现由熟悉的动态规划题目变形得来的题目时，在原来的状态中加一纬以满足新的限制是一种比较通用的方法。希望你能从本讲中初步体会到这种方法。</p>\n<h2 id=\"6-分组的背包问题\"><a href=\"#6-分组的背包问题\" class=\"headerlink\" title=\"6.分组的背包问题\"></a>6.分组的背包问题</h2><h3 id=\"6-1-问题\"><a href=\"#6-1-问题\" class=\"headerlink\" title=\"6.1.问题\"></a>6.1.问题</h3><p>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。这些物品被划分为若干组，每组中的物品互相冲突，最多选一件。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"6-2-算法\"><a href=\"#6-2-算法\" class=\"headerlink\" title=\"6.2.算法\"></a>6.2.算法</h3><p>这个问题变成了每组物品有若干种策略：是选择本组的某一件，还是一件都不选。也就是说设<code>f[k</code>][v]表示前k组物品花费费用v能取得的最大权值，则有<code>f[k][v]=max&#123;f[k-1][v],f[k-1][v-c[i]]+w[i]|</code>物品i属于第k组}。</p>\n<p>使用一维数组的伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 所有的组k</span><br><span class=\"line\"><span class=\"keyword\">for</span> 所有的i属于组k</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>另外，显然可以对每组中的物品应用P02中“一个简单有效的优化”。</p>\n<h3 id=\"6-3-小结\"><a href=\"#6-3-小结\" class=\"headerlink\" title=\"6.3.小结\"></a>6.3.小结</h3><p>分组的背包问题将彼此互斥的若干物品称为一个组，这建立了一个很好的模型。不少背包问题的变形都可以转化为分组的背包问题（例如P07），由分组的背包问题进一步可定义“泛化物品”的概念，十分有利于解题。 </p>\n<h2 id=\"7-有依赖的背包问题\"><a href=\"#7-有依赖的背包问题\" class=\"headerlink\" title=\"7.有依赖的背包问题\"></a>7.有依赖的背包问题</h2><h3 id=\"7-1-简化的问题\"><a href=\"#7-1-简化的问题\" class=\"headerlink\" title=\"7.1.简化的问题\"></a>7.1.简化的问题</h3><p>这种背包问题的物品间存在某种“依赖”的关系。也就是说，i依赖于j，表示若选物品i，则必须选物品j。为了简化起见，我们先设没有某个物品既依赖于别的物品，又被别的物品所依赖；另外，没有某件物品同时依赖多件物品。</p>\n<h3 id=\"7-2-算法\"><a href=\"#7-2-算法\" class=\"headerlink\" title=\"7.2.算法\"></a>7.2.算法</h3><p>这个问题由NOIP2006金明的预算方案一题扩展而来。遵从该题的提法，将不依赖于别的物品的物品称为“主件”，依赖于某主件的物品称为“附件”。由这个问题的简化条件可知所有的物品由若干主件和依赖于每个主件的一个附件集合组成。</p>\n<p>按照背包问题的一般思路，仅考虑一个主件和它的附件集合。可是，可用的策略非常多，包括：一个也不选，仅选择主件，选择主件后再选择一个附件，选择主件后再选择两个附件……无法用状态转移方程来表示如此多的策略。（事实上，设有n个附件，则策略有2^n+1个，为指数级。）</p>\n<p>考虑到所有这些策略都是互斥的（也就是说，你只能选择一种策略），所以一个主件和它的附件集合实际上对应于P06中的一个物品组，每个选择了主件又选择了若干个附件的策略对应于这个物品组中的一个物品，其费用和价值都是这个策略中的物品的值的和。但仅仅是这一步转化并不能给出一个好的算法，因为物品组中的物品还是像原问题的策略一样多。</p>\n<p>再考虑P06中的一句话：可以对每组中的物品应用P02中“一个简单有效的优化”。这提示我们，对于一个物品组中的物品，所有费用相同的物品只留一个价值最大的，不影响结果。所以，我们可以对主件i的“附件集合”先进行一次01背包，得到费用依次为0..V-c[i]所有这些值时相应的最大价值f’[0..V-c[i]]。那么这个主件及它的附件集合相当于V-c[i]+1个物品的物品组，其中费用为c[i]+k的物品的价值为f’[k]+w[i]。也就是说原来指数级的策略中有很多策略都是冗余的，通过一次01背包后，将主件i转化为 V-c[i]+1个物品的物品组，就可以直接应用P06的算法解决问题了。</p>\n<h3 id=\"7-3-更一般的问题\"><a href=\"#7-3-更一般的问题\" class=\"headerlink\" title=\"7.3.更一般的问题\"></a>7.3.更一般的问题</h3><p>更一般的问题是：依赖关系以图论中“森林”的形式给出（森林即多叉树的集合），也就是说，主件的附件仍然可以具有自己的附件集合，限制只是每个物品最多只依赖于一个物品（只有一个主件）且不出现循环依赖。</p>\n<p>解决这个问题仍然可以用将每个主件及其附件集合转化为物品组的方式。唯一不同的是，由于附件可能还有附件，就不能将每个附件都看作一个一般的01 背包中的物品了。若这个附件也有附件集合，则它必定要被先转化为物品组，然后用分组的背包问题解出主件及其附件集合所对应的附件组中各个费用的附件所对应的价值。</p>\n<p>事实上，这是一种树形DP，其特点是每个父节点都需要对它的各个儿子的属性进行一次DP以求得自己的相关属性。这已经触及到了“泛化物品”的思想。看完P08后，你会发现这个“依赖关系树”每一个子树都等价于一件泛化物品，求某节点为根的子树对应的泛化物品相当于求其所有儿子的对应的泛化物品之和。</p>\n<h3 id=\"7-4-小结\"><a href=\"#7-4-小结\" class=\"headerlink\" title=\"7.4.小结\"></a>7.4.小结</h3><p>NOIP2006的那道背包问题我做得很失败，写了上百行的代码，却一分未得。后来我通过思考发现通过引入“物品组”和“依赖”的概念可以加深对这题的理解，还可以解决它的推广问题。用物品组的思想考虑那题中极其特殊的依赖关系：物品不能既作主件又作附件，每个主件最多有两个附件，可以发现一个主件和它的两个附件等价于一个由四个物品组成的物品组，这便揭示了问题的某种本质。</p>\n<p>我想说：失败不是什么丢人的事情，从失败中全无收获才是。</p>\n<h2 id=\"8-泛化物品\"><a href=\"#8-泛化物品\" class=\"headerlink\" title=\"8.泛化物品\"></a>8.泛化物品</h2><h3 id=\"8-1-定义\"><a href=\"#8-1-定义\" class=\"headerlink\" title=\"8.1.定义\"></a>8.1.定义</h3><p>考虑这样一种物品，它并没有固定的费用和价值，而是它的价值随着你分配给它的费用而变化。这就是泛化物品的概念。</p>\n<p>更严格的定义之。在背包容量为V的背包问题中，泛化物品是一个定义域为0..V中的整数的函数h，当分配给它的费用为v时，能得到的价值就是h(v)。</p>\n<p>这个定义有一点点抽象，另一种理解是一个泛化物品就是一个数组h[0..V]，给它费用v，可得到价值h[V]。</p>\n<p>一个费用为c价值为w的物品，如果它是01背包中的物品，那么把它看成泛化物品，它就是除了h(c)=w其它函数值都为0的一个函数。如果它是完全背包中的物品，那么它可以看成这样一个函数，仅当v被c整除时有h(v)=v/c<em>w，其它函数值均为0。如果它是多重背包中重复次数最多为n的物品，那么它对应的泛化物品的函数有h(v)=v/c</em>w仅当v被c整除且v/c&lt;=n，其它情况函数值均为0。</p>\n<p>一个物品组可以看作一个泛化物品h。对于一个0..V中的v，若物品组中不存在费用为v的的物品，则h(v)=0，否则h(v)为所有费用为v的物品的最大价值。P07中每个主件及其附件集合等价于一个物品组，自然也可看作一个泛化物品。</p>\n<h3 id=\"8-2-泛化物品的和\"><a href=\"#8-2-泛化物品的和\" class=\"headerlink\" title=\"8.2.泛化物品的和\"></a>8.2.泛化物品的和</h3><p>如果面对两个泛化物品h和l，要用给定的费用从这两个泛化物品中得到最大的价值，怎么求呢？事实上，对于一个给定的费用v，只需枚举将这个费用如何分配给两个泛化物品就可以了。同样的，对于0..V的每一个整数v，可以求得费用v分配到h和l中的最大价值f(v)。也即<code>f(v)=max&#123;h(k) +l(v-k)|0&lt;=k&lt;=v&#125;</code>。可以看到，f也是一个由泛化物品h和l决定的定义域为0..V的函数，也就是说，f是一个由泛化物品h和 l决定的泛化物品。</p>\n<p>由此可以定义泛化物品的和：h、l都是泛化物品，若泛化物品f满足<code>f(v)=max&#123;h(k)+l(v-k)|0&lt;=k&lt;=v&#125;</code>，则称f是h与l的和，即f=h+l。这个运算的时间复杂度是O(V^2)。</p>\n<p>泛化物品的定义表明：在一个背包问题中，若将两个泛化物品代以它们的和，不影响问题的答案。事实上，对于其中的物品都是泛化物品的背包问题，求它的答案的过程也就是求所有这些泛化物品之和的过程。设此和为s，则答案就是s[0..V]中的最大值。</p>\n<h3 id=\"8-3-背包问题的泛化物品\"><a href=\"#8-3-背包问题的泛化物品\" class=\"headerlink\" title=\"8.3.背包问题的泛化物品\"></a>8.3.背包问题的泛化物品</h3><p>一个背包问题中，可能会给出很多条件，包括每种物品的费用、价值等属性，物品之间的分组、依赖等关系等。但肯定能将问题对应于某个泛化物品。也就是说，给定了所有条件以后，就可以对每个非负整数v求得：若背包容量为v，将物品装入背包可得到的最大价值是多少，这可以认为是定义在非负整数集上的一件泛化物品。这个泛化物品——或者说问题所对应的一个定义域为非负整数的函数——包含了关于问题本身的高度浓缩的信息。一般而言，求得这个泛化物品的一个子域（例如0..V）的值之后，就可以根据这个函数的取值得到背包问题的最终答案。</p>\n<p>综上所述，一般而言，求解背包问题，即求解这个问题所对应的一个函数，即该问题的泛化物品。而求解某个泛化物品的一种方法就是将它表示为若干泛化物品的和然后求之。</p>\n<h3 id=\"8-4-小结\"><a href=\"#8-4-小结\" class=\"headerlink\" title=\"8.4.小结\"></a>8.4.小结</h3><p>本讲可以说都是我自己的原创思想。具体来说，是我在学习函数式编程的 Scheme 语言时，用函数编程的眼光审视各类背包问题得出的理论。这一讲真的很抽象，也许在“模型的抽象程度”这一方面已经超出了NOIP的要求，所以暂且看不懂也没关系。相信随着你的OI之路逐渐延伸，有一天你会理解的。</p>\n<p>我想说：“思考”是一个<code>OIer</code>最重要的品质。简单的问题，深入思考以后，也能发现更多。</p>\n<h2 id=\"9-背包问题问法的变化\"><a href=\"#9-背包问题问法的变化\" class=\"headerlink\" title=\"9.背包问题问法的变化\"></a>9.背包问题问法的变化</h2><p>以上涉及的各种背包问题都是要求在背包容量（费用）的限制下求可以取到的最大价值，但背包问题还有很多种灵活的问法，在这里值得提一下。但是我认为，只要深入理解了求背包问题最大价值的方法，即使问法变化了，也是不难想出算法的。</p>\n<p>例如，求解最多可以放多少件物品或者最多可以装满多少背包的空间。这都可以根据具体问题利用前面的方程求出所有状态的值（f数组）之后得到。</p>\n<p>还有，如果要求的是“总价值最小”“总件数最小”，只需简单的将上面的状态转移方程中的max改成min即可。</p>\n<p>下面说一些变化更大的问法。</p>\n<h3 id=\"9-1-输出方案\"><a href=\"#9-1-输出方案\" class=\"headerlink\" title=\"9.1.输出方案\"></a>9.1.输出方案</h3><p>一般而言，背包问题是要求一个最优值，如果要求输出这个最优值的方案，可以参照一般动态规划问题输出方案的方法：记录下每个状态的最优值是由状态转移方程的哪一项推出来的，换句话说，记录下它是由哪一个策略推出来的。便可根据这条策略找到上一个状态，从上一个状态接着向前推即可。</p>\n<p>还是以01背包为例，方程为<code>f[i][v]=max&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>。再用一个数组g[i] [v]，设<code>g[i][v]=0</code>表示推出<code>f[i</code>][v]的值时是采用了方程的前一项（也即<code>f[i][v]=f[i-1][v]</code>），<code>g[i][v]</code>表示采用了方程的后一项。注意这两项分别表示了两种策略：未选第i个物品及选了第i个物品。那么输出方案的伪代码可以这样写（设最终状态为<code>f[N</code>][V]）：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i=N</span><br><span class=\"line\">v=V</span><br><span class=\"line\">while(i&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span>(g[i][v]==<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;未选第i项物品&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(g[i][v]==<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;选了第i项物品&quot;</span></span><br><span class=\"line\">v=v-c[i]</span><br></pre></td></tr></table></figure>\n\n<p>另外，采用方程的前一项或后一项也可以在输出方案的过程中根据f[i][v]的值实时地求出来，也即不须纪录g数组，将上述代码中的<code>g[i] [v]==0</code>改成<code>f[i][v]==f[i-1][v]</code>，<code>g[i][v]==1</code>改成<code>f[i][v]==f[i-1][v-c[i]]+w[i]</code>也可。</p>\n<h3 id=\"9-2-输出字典序最小的最优方案\"><a href=\"#9-2-输出字典序最小的最优方案\" class=\"headerlink\" title=\"9.2.输出字典序最小的最优方案\"></a>9.2.输出字典序最小的最优方案</h3><p>这里“字典序最小”的意思是1..N号物品的选择方案排列出来以后字典序最小。以输出01背包最小字典序的方案为例。</p>\n<p>一般而言，求一个字典序最小的最优方案，只需要在转移时注意策略。首先，子问题的定义要略改一些。我们注意到，如果存在一个选了物品1的最优方案，那么答案一定包含物品1，原问题转化为一个背包容量为v-c[1]，物品为2..N的子问题。反之，如果答案不包含物品1，则转化成背包容量仍为V，物品为2..N的子问题。不管答案怎样，子问题的物品都是以i..N而非前所述的1..i的形式来定义的，所以状态的定义和转移方程都需要改一下。但也许更简易的方法是先把物品逆序排列一下，以下按物品已被逆序排列来叙述。</p>\n<p>在这种情况下，可以按照前面经典的状态转移方程来求值，只是输出方案的时候要注意：从N到1输入时，如果<code>f[i][v]==f[i-v]</code>及<code>f[i][v]==f[i-1][f-c[i]]+w[i]</code>同时成立，应该按照后者（即选择了物品i）来输出方案。</p>\n<p>求方案总数<br>对于一个给定了背包容量、物品费用、物品间相互关系（分组、依赖等）的背包问题，除了再给定每个物品的价值后求可得到的最大价值外，还可以得到装满背包或将背包装至某一指定容量的方案总数。</p>\n<p>对于这类改变问法的问题，一般只需将状态转移方程中的max改成sum即可。例如若每件物品均是01背包中的物品，转移方程即为<code>f[i][v]=sum&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>，初始条件<code>f[0][0]=1</code>。</p>\n<p>事实上，这样做可行的原因在于状态转移方程已经考察了所有可能的背包组成方案。</p>\n<h3 id=\"9-3-最优方案的总数\"><a href=\"#9-3-最优方案的总数\" class=\"headerlink\" title=\"9.3.最优方案的总数\"></a>9.3.最优方案的总数</h3><p>这里的最优方案是指物品总价值最大的方案。还是以01背包为例。</p>\n<p>结合求最大总价值和方案总数两个问题的思路，最优方案的总数可以这样求：f[i][v]意义同前述，g[i][v]表示这个子问题的最优方案的总数，则在求f[i][v]的同时求g[i][v]的伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V</span><br><span class=\"line\">f[i][v]=max&#123;f[i<span class=\"number\">-1</span>][v],f[i<span class=\"number\">-1</span>][v-c[i]]+w[i]&#125;</span><br><span class=\"line\">g[i][v]=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(f[i][v]==f[i<span class=\"number\">-1</span>][v])</span><br><span class=\"line\">inc(g[i][v],g[i<span class=\"number\">-1</span>][v]</span><br><span class=\"line\"><span class=\"keyword\">if</span>(f[i][v]==f[i<span class=\"number\">-1</span>][v-c[i]]+w[i])</span><br><span class=\"line\">inc(g[i][v],g[i<span class=\"number\">-1</span>][v-c[i]])</span><br></pre></td></tr></table></figure>\n\n<p>如果你是第一次看到这样的问题，请仔细体会上面的伪代码。</p>\n<h3 id=\"9-4-小结\"><a href=\"#9-4-小结\" class=\"headerlink\" title=\"9.4.小结\"></a>9.4.小结</h3><p>显然，这里不可能穷尽背包类动态规划问题所有的问法。甚至还存在一类将背包类动态规划问题与其它领域（例如数论、图论）结合起来的问题，在这篇论背包问题的专文中也不会论及。但只要深刻领会前述所有类别的背包问题的思路和状态转移方程，遇到其它的变形问法，只要题目难度还属于NOIP，应该也不难想出算法。</p>\n<p>触类旁通、举一反三，应该也是一个OIer应有的品质吧。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"clqkpg59s0008m0fvh69445or","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg59x000fm0fvgrp69q3m"},{"post_id":"clqkpg59l0001m0fvcgdc42xr","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg59y000jm0fvc4nf8um0"},{"post_id":"clqkpg59t0009m0fve240e64b","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a0000lm0fvf0240k9v"},{"post_id":"clqkpg59v000dm0fv21dx5nqi","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a1000pm0fv5wlwdvz3"},{"post_id":"clqkpg59w000em0fv2d23ei3t","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a2000sm0fvci1ic4s7"},{"post_id":"clqkpg59y000im0fv0ai3b7th","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a3000wm0fv0muhb7gn"},{"post_id":"clqkpg59r0007m0fvdf1n8yv3","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a4000ym0fvhyfnc492"},{"post_id":"clqkpg59z000km0fvejgd45qw","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a50011m0fv0c1ub8fi"},{"post_id":"clqkpg5a1000om0fv8hvma3i0","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a60015m0fvaxxb3x0s"},{"post_id":"clqkpg59o0003m0fv8i4rgmds","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a70018m0fv0620b7f2"},{"post_id":"clqkpg59o0003m0fv8i4rgmds","category_id":"clqkpg5a0000mm0fvgxaz500y","_id":"clqkpg5a8001bm0fv5o85234c"},{"post_id":"clqkpg5a2000rm0fv5gsd2tvz","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a8001cm0fvf2jfbe6c"},{"post_id":"clqkpg5a4000xm0fv66yx70ej","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a9001em0fvez9wfwyu"},{"post_id":"clqkpg5a50010m0fv3rma99p0","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5a9001gm0fvczck9wa6"},{"post_id":"clqkpg5a60014m0fvgiog4t3f","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5aa001jm0fv0csh5gr6"},{"post_id":"clqkpg5a70017m0fv17eofkpw","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5aa001km0fvdh3i2djf"},{"post_id":"clqkpg5a70017m0fv17eofkpw","category_id":"clqkpg5a0000mm0fvgxaz500y","_id":"clqkpg5aa001mm0fv1pbhc9rg"},{"post_id":"clqkpg5a3000vm0fv0ofu3hln","category_id":"clqkpg5a5000zm0fv16x86gso","_id":"clqkpg5aa001om0fv4f6gdmqr"},{"post_id":"clqkpg5a3000vm0fv0ofu3hln","category_id":"clqkpg5a8001am0fv7msddjrh","_id":"clqkpg5ab001rm0fv7dque5hv"},{"post_id":"clqkpg5ar002xm0fvewdb7sas","category_id":"clqkpg59p0004m0fvgpd80q8j","_id":"clqkpg5as002zm0fvcwq9aomy"}],"PostTag":[{"post_id":"clqkpg59l0001m0fvcgdc42xr","tag_id":"clqkpg59q0005m0fvc2zc30vw","_id":"clqkpg59v000cm0fv13c2asuz"},{"post_id":"clqkpg59o0003m0fv8i4rgmds","tag_id":"clqkpg59t000bm0fv2f3z1f35","_id":"clqkpg5a1000qm0fvb4mq3ady"},{"post_id":"clqkpg59o0003m0fv8i4rgmds","tag_id":"clqkpg59x000hm0fvhlo6edg4","_id":"clqkpg5a2000tm0fv39ik3do1"},{"post_id":"clqkpg59r0007m0fvdf1n8yv3","tag_id":"clqkpg5a0000nm0fv82ic56dl","_id":"clqkpg5a60013m0fv8432gbi6"},{"post_id":"clqkpg59r0007m0fvdf1n8yv3","tag_id":"clqkpg5a3000um0fvailf008j","_id":"clqkpg5a70016m0fv6s1acm1h"},{"post_id":"clqkpg59s0008m0fvh69445or","tag_id":"clqkpg5a0000nm0fv82ic56dl","_id":"clqkpg5a9001fm0fvfqhmad50"},{"post_id":"clqkpg59s0008m0fvh69445or","tag_id":"clqkpg5a70019m0fvaxww5uv6","_id":"clqkpg5a9001hm0fv7nk877ke"},{"post_id":"clqkpg59t0009m0fve240e64b","tag_id":"clqkpg5a0000nm0fv82ic56dl","_id":"clqkpg5aa001nm0fvhw0b2774"},{"post_id":"clqkpg59t0009m0fve240e64b","tag_id":"clqkpg5a9001im0fv8uuqajj0","_id":"clqkpg5aa001pm0fv5ag737fs"},{"post_id":"clqkpg59v000dm0fv21dx5nqi","tag_id":"clqkpg5aa001lm0fvehw443tz","_id":"clqkpg5ab001tm0fv6bzz7xhd"},{"post_id":"clqkpg59v000dm0fv21dx5nqi","tag_id":"clqkpg5aa001qm0fv208gdw7n","_id":"clqkpg5ab001um0fvfhemebyo"},{"post_id":"clqkpg59w000em0fv2d23ei3t","tag_id":"clqkpg5ab001sm0fvfrxgbecv","_id":"clqkpg5ab001wm0fvha0aaijj"},{"post_id":"clqkpg59y000im0fv0ai3b7th","tag_id":"clqkpg5ab001vm0fvamkg4h3h","_id":"clqkpg5ac001ym0fvc42aatiq"},{"post_id":"clqkpg59z000km0fvejgd45qw","tag_id":"clqkpg5ac001xm0fve5np9b5b","_id":"clqkpg5ac0020m0fvfi3ad696"},{"post_id":"clqkpg5a1000om0fv8hvma3i0","tag_id":"clqkpg5ac001zm0fv5vov337k","_id":"clqkpg5af0024m0fv67efemo5"},{"post_id":"clqkpg5a1000om0fv8hvma3i0","tag_id":"clqkpg5ac0021m0fv747g0vsf","_id":"clqkpg5af0025m0fv8p8pchyt"},{"post_id":"clqkpg5a1000om0fv8hvma3i0","tag_id":"clqkpg5ae0022m0fv4seq4jpy","_id":"clqkpg5af0027m0fvbbhidx15"},{"post_id":"clqkpg5a2000rm0fv5gsd2tvz","tag_id":"clqkpg5ac001zm0fv5vov337k","_id":"clqkpg5ag002am0fvghv0aeuk"},{"post_id":"clqkpg5a2000rm0fv5gsd2tvz","tag_id":"clqkpg5ac0021m0fv747g0vsf","_id":"clqkpg5ag002bm0fv8qhdd7wo"},{"post_id":"clqkpg5a2000rm0fv5gsd2tvz","tag_id":"clqkpg5ae0022m0fv4seq4jpy","_id":"clqkpg5ag002dm0fv9cj731d9"},{"post_id":"clqkpg5a3000vm0fv0ofu3hln","tag_id":"clqkpg5ag0029m0fv3p2f48lg","_id":"clqkpg5ah002gm0fv3jyqgvog"},{"post_id":"clqkpg5a3000vm0fv0ofu3hln","tag_id":"clqkpg5ag002cm0fv4vog27im","_id":"clqkpg5ah002hm0fv3d8s5qcx"},{"post_id":"clqkpg5a3000vm0fv0ofu3hln","tag_id":"clqkpg5ah002em0fvb3j70dnf","_id":"clqkpg5ai002jm0fv36pias4p"},{"post_id":"clqkpg5a4000xm0fv66yx70ej","tag_id":"clqkpg5ah002fm0fv6q3qf2nq","_id":"clqkpg5ai002lm0fv2z9x0ppv"},{"post_id":"clqkpg5a4000xm0fv66yx70ej","tag_id":"clqkpg5aa001lm0fvehw443tz","_id":"clqkpg5ai002mm0fv4q176ahf"},{"post_id":"clqkpg5a50010m0fv3rma99p0","tag_id":"clqkpg59x000hm0fvhlo6edg4","_id":"clqkpg5ai002om0fvcdukcpub"},{"post_id":"clqkpg5a50010m0fv3rma99p0","tag_id":"clqkpg5ai002km0fv8k3j0kb9","_id":"clqkpg5aj002pm0fv0woq2d4f"},{"post_id":"clqkpg5a60014m0fvgiog4t3f","tag_id":"clqkpg5ai002nm0fv106e2tpq","_id":"clqkpg5aj002rm0fvdqsr37s3"},{"post_id":"clqkpg5a60014m0fvgiog4t3f","tag_id":"clqkpg59x000hm0fvhlo6edg4","_id":"clqkpg5ak002sm0fv7l1thsh6"},{"post_id":"clqkpg5a70017m0fv17eofkpw","tag_id":"clqkpg5aj002qm0fvacxnaw4q","_id":"clqkpg5ak002um0fv7o5k72xq"},{"post_id":"clqkpg5a70017m0fv17eofkpw","tag_id":"clqkpg59x000hm0fvhlo6edg4","_id":"clqkpg5ak002vm0fv7h8976aq"},{"post_id":"clqkpg5a70017m0fv17eofkpw","tag_id":"clqkpg5ak002tm0fvhgh96qda","_id":"clqkpg5ak002wm0fvhsld21ux"},{"post_id":"clqkpg5ar002xm0fvewdb7sas","tag_id":"clqkpg5ar002ym0fv3o69b9x7","_id":"clqkpg5as0030m0fvhjrrbgh8"},{"post_id":"clqkpg5ar002xm0fvewdb7sas","tag_id":"clqkpg5ak002tm0fvhgh96qda","_id":"clqkpg5as0031m0fv4gdo1773"}],"Tag":[{"name":"开始","_id":"clqkpg59q0005m0fvc2zc30vw"},{"name":"背包问题","_id":"clqkpg59t000bm0fv2f3z1f35"},{"name":"go","_id":"clqkpg59x000hm0fvhlo6edg4"},{"name":"k8s","_id":"clqkpg5a0000nm0fv82ic56dl"},{"name":"kubeadm","_id":"clqkpg5a3000um0fvailf008j"},{"name":"containerd","_id":"clqkpg5a70019m0fvaxww5uv6"},{"name":"ca","_id":"clqkpg5a9001im0fv8uuqajj0"},{"name":"网络","_id":"clqkpg5aa001lm0fvehw443tz"},{"name":"TCP","_id":"clqkpg5aa001qm0fv208gdw7n"},{"name":"DHCP","_id":"clqkpg5ab001sm0fvfrxgbecv"},{"name":"DNS","_id":"clqkpg5ab001vm0fvamkg4h3h"},{"name":"HTTP","_id":"clqkpg5ac001xm0fve5np9b5b"},{"name":"hexo","_id":"clqkpg5ac001zm0fv5vov337k"},{"name":"next","_id":"clqkpg5ac0021m0fv747g0vsf"},{"name":"博客","_id":"clqkpg5ae0022m0fv4seq4jpy"},{"name":"nodejs","_id":"clqkpg5ag0029m0fv3p2f48lg"},{"name":"nvm","_id":"clqkpg5ag002cm0fv4vog27im"},{"name":"版本管理","_id":"clqkpg5ah002em0fvb3j70dnf"},{"name":"osi","_id":"clqkpg5ah002fm0fv6q3qf2nq"},{"name":"build","_id":"clqkpg5ai002km0fv8k3j0kb9"},{"name":"01背包问题","_id":"clqkpg5ai002nm0fv106e2tpq"},{"name":"完全背包","_id":"clqkpg5aj002qm0fvacxnaw4q"},{"name":"算法","_id":"clqkpg5ak002tm0fvhgh96qda"},{"name":"背包九讲","_id":"clqkpg5ar002ym0fv3o69b9x7"}]}}