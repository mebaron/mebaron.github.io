{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/rsa/rsa1.svg","path":"images/rsa/rsa1.svg","modified":0,"renderable":0},{"_id":"source/images/rsa/rsa2.svg","path":"images/rsa/rsa2.svg","modified":0,"renderable":0},{"_id":"source/images/rsa/rsa3.svg","path":"images/rsa/rsa3.svg","modified":0,"renderable":0},{"_id":"source/images/rsa/rsa4.svg","path":"images/rsa/rsa4.svg","modified":0,"renderable":0},{"_id":"source/images/rsa/rsa5.svg","path":"images/rsa/rsa5.svg","modified":0,"renderable":0},{"_id":"source/images/rsa/rsa6.svg","path":"images/rsa/rsa6.svg","modified":0,"renderable":0},{"_id":"source/images/rsa/rsa7.svg","path":"images/rsa/rsa7.svg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16.png","path":"images/favicon-16x16.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32.png","path":"images/favicon-32x32.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"d0411f1b84158f780b3b65453bdb30495100ca6f","modified":1676514273030},{"_id":"source/_posts/RSA算法.md","hash":"01abb6a2d6cfd2013ecfc043dd1922cfd2480182","modified":1676543003435},{"_id":"source/_posts/hello-world.md","hash":"24ee2d6871e2e412b94ce9afed986a54eb4fdf52","modified":1675380968827},{"_id":"source/_posts/next主题美化配置.md","hash":"6ae63259573060c66f6f5597f89c5ebe38b8251c","modified":1676542862919},{"_id":"source/categories/index.md","hash":"078021c521d72d295a7d647fadd2107829ba5189","modified":1665736959409},{"_id":"source/_posts/使用hexo搭建个人博客.md","hash":"0d1cb17d206d7a6322b4c379a2558fd6ebce1308","modified":1676542912012},{"_id":"source/_posts/nodejs版本管理工具nvm的使用.md","hash":"11d043dcdf203b9cf77461ce828e49f789a470cd","modified":1676542990082},{"_id":"source/about/index.md","hash":"2fb363ee223b1a34fcb1061bad4b5e9ca29394fb","modified":1665736959409},{"_id":"source/tags/index.md","hash":"630a158d0cc58fc33263f356407b8d019944ab7a","modified":1665736959419},{"_id":"source/images/rsa/rsa1.svg","hash":"52febf3089c3dd01e38d7fcd08fc8fd92bd423eb","modified":1675381614288},{"_id":"source/images/rsa/rsa2.svg","hash":"f6b207d32f5425e1fcd2ff547229eca9f7850a83","modified":1675381633474},{"_id":"source/images/rsa/rsa3.svg","hash":"9a5f337decb0dddf2469c8c2127ec779c2718564","modified":1675381647901},{"_id":"source/images/rsa/rsa5.svg","hash":"7ed7911b47e70c862be4ef3ee987ca3a46ad7b02","modified":1675381676931},{"_id":"source/images/rsa/rsa4.svg","hash":"61c4b1358563f5cbbf9869312b60aa0941631dfa","modified":1675381667321},{"_id":"source/images/rsa/rsa6.svg","hash":"e9ce22866f45584143034c3df640c3d7e59fcf97","modified":1675381689050},{"_id":"source/images/rsa/rsa7.svg","hash":"1761f0ccdb3497b345d2face4d5dbdc3d103e2a3","modified":1675381699821},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1676513801585},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1676513801585},{"_id":"themes/next/.gitignore","hash":"83418530da80e6a78501e1d62a89c3bf5cbaec3d","modified":1676513801593},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1676513801594},{"_id":"themes/next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1676513801585},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1676513801594},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1676513801595},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1676513801596},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1676513801595},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1676513801608},{"_id":"themes/next/_config.yml","hash":"2f05ad575302a8ae5add6a9f3e47c46da8fd5d6c","modified":1676517932820},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"778b7e052993ed59f21ed266ba7119ee2e5253fb","modified":1676513801586},{"_id":"themes/next/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1676513801657},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"d2f8e6b65783e31787feb05d2ccea86151f53f35","modified":1676513801589},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ddde54fb50d11dc08cec899a3588addb56aa386","modified":1676513801587},{"_id":"themes/next/.github/config.yml","hash":"df3d970700e6b409edc3d23be8d553db78d5ba3f","modified":1676513801589},{"_id":"themes/next/.github/issue-close-app.yml","hash":"b14756e65546eb9ecc9d4393f0c9a84a3dac1824","modified":1676513801590},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1676513801590},{"_id":"themes/next/.github/lock.yml","hash":"3ce3d0a26030a1cd52b273cc6a6d444d7c8d85c2","modified":1676513801591},{"_id":"themes/next/.github/mergeable.yml","hash":"1c1cb77a62df1e3654b151c2da34b4a10d351170","modified":1676513801591},{"_id":"themes/next/.github/release-drafter.yml","hash":"09c3352b2d643acdc6839601ceb38abc38ab97c5","modified":1676513801592},{"_id":"themes/next/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1676513801592},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1676513801598},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1676513801598},{"_id":"themes/next/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1676513801598},{"_id":"themes/next/.github/stale.yml","hash":"590b65aca710e0fba75d3cf5361a64d13b6b0f63","modified":1676513801592},{"_id":"themes/next/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1676513801598},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1676513801600},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1676513801599},{"_id":"themes/next/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1676513801599},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1676513801601},{"_id":"themes/next/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1676513801601},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1676513801609},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1676513801610},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1676513801610},{"_id":"themes/next/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1676513801610},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1676513801611},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1676513801612},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1676513801611},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1676513801612},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1676513801613},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1676513801613},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1676513801614},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1676513801614},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1676513801615},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1676513801615},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1676513801615},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1676513801616},{"_id":"themes/next/languages/tr.yml","hash":"c4e9ab7e047ae13a19f147c6bec163c3ba2c6898","modified":1676513801616},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1676513801617},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1676513801617},{"_id":"themes/next/languages/zh-CN.yml","hash":"81d73e21402dad729053a3041390435f43136a68","modified":1676513801617},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1676513801619},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1676513801619},{"_id":"themes/next/layout/_layout.swig","hash":"9554bd0f5c5a0438aa7b64065be5561c374d260e","modified":1676513801619},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1676513801654},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1676513801655},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1676513801655},{"_id":"themes/next/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1676513801656},{"_id":"themes/next/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1676513801657},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1676513801657},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1676513801669},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"e67146befddec3a0dc47dc80d1109070c71d5d04","modified":1676513801587},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"6beeca0f45a429cd932b6e648617f548ff64c27c","modified":1676513801588},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"59275aa0582f793fee7be67904dcf52ad33a7181","modified":1676513801588},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d5aa1a3323639a36bcd9a401484b67537043cd3c","modified":1676513801588},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1676513801602},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1676513801602},{"_id":"themes/next/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1676513801602},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1676513801603},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1676513801604},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1676513801604},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1676513801605},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1676513801606},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1676513801605},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1676513801607},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1676513801606},{"_id":"themes/next/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1676513801608},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"30ade8c806d7826cc50a4a3e46a9e6213fddf333","modified":1676513801620},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1676513801608},{"_id":"themes/next/layout/_macro/post.swig","hash":"c3fd56bac90ce45a0c79ddfe68beb223ad0d72b4","modified":1676513801620},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1676513801622},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5bffdb1448caca7db7b1f84e1693e6657a106d50","modified":1676513801621},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1676513801628},{"_id":"themes/next/layout/_partials/footer.swig","hash":"3a16bb37d7e09ef77e1567229a085460eb449cea","modified":1676517138076},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1676513801629},{"_id":"themes/next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1676513801635},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1676513801635},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1676513801636},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1676513801639},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1676513801639},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1676513801637},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"28b0a7e843ec4365db1963646659a153753cd746","modified":1676513801642},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1676513801646},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1676513801649},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1676513801664},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1676513801649},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1676513801665},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1676513801666},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1676513801665},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1676513801666},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1676513801658},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1676513801667},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1676513801668},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1676513801668},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1676513801669},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1676513801668},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1676513801670},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1676513801671},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1676513801670},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1676513801671},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1676513801672},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1676513801671},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1676513801673},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1676513801673},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1676513801673},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1676513801675},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1676513801707},{"_id":"themes/next/source/css/main.styl","hash":"815ef30987d02f3d76dbe4b5ee3a72135a152678","modified":1676513801719},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1676513801720},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1676513801721},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1676513801721},{"_id":"themes/next/source/images/apple-touch-icon.png","hash":"bf64dcf821fc445ac21118a836015bb72dc13091","modified":1676486064000},{"_id":"themes/next/source/images/avatar.png","hash":"3df38d4aa92a1d945343e95e8308c9f63941c31c","modified":1675049142147},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1676513801721},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1676513801722},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1676513801723},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1676513801723},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1676513801724},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1676513801724},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1676513801723},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1676513801725},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1676513801725},{"_id":"themes/next/source/images/favicon-16x16.png","hash":"4dfc8fcd13cd1f7fc0c3bb0fb8a96f082c386d39","modified":1676486064000},{"_id":"themes/next/source/images/favicon-32x32.png","hash":"1d4b6f9c7da190bb885237540cca4b348dbc82f2","modified":1676486064000},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1676513801725},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1676513801726},{"_id":"themes/next/source/js/local-search.js","hash":"cfa6a0f3f9c2bc759ee507668a21f4e8f250f42a","modified":1676513801727},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1676513801727},{"_id":"themes/next/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1676513801728},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1676513801728},{"_id":"themes/next/source/js/utils.js","hash":"26a82e46fdcadc7c3c2c56a7267284b61a26f7f3","modified":1676513801730},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1676513801730},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1676513801625},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1676513801626},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1676513801626},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1676513801626},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1676513801627},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1676513801627},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1676513801623},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1676513801628},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1676513801630},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1676513801629},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1676513801631},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1676513801631},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1676513801631},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1676513801633},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1676513801633},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1676513801632},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1676513801633},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"7b2ef5db9615267a24b884388925de1e9b447c1f","modified":1676513801634},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1676513801636},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1676513801637},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1676513801637},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1676513801638},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1676513801638},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1676513801641},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1676513801641},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1676513801642},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1676513801640},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1676513801643},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1676513801644},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1676513801644},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1676513801645},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1676513801643},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1676513801645},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1676513801646},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1676513801646},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1676513801648},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1676513801647},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1676513801648},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1676513801650},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1676513801650},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1676513801650},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1676513801652},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1676513801652},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1676513801653},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1676513801652},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1676513801654},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1676513801653},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1676513801654},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1676513801661},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1676513801661},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1676513801662},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1676513801662},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1676513801662},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1676513801663},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1676513801664},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1676513801663},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1676513801659},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1676513801660},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1676513801660},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1676513801717},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1676513801718},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1676513801717},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ad680efdfb2f86546182bf3f59886efbcf3c1b2d","modified":1676513801719},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1676513801729},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1676513801729},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1676513801734},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1676513801717},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1676513801692},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1676513801735},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1676513801692},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1676513801676},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1676513801676},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1676513801685},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1676513801676},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5540c9259cb7895a5f10a289c7937e5470a7c134","modified":1676513801698},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1676513801698},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1676513801699},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1676513801702},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1676513801701},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1676513801702},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1676513801703},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1676513801707},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1676513801708},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1676513801709},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1676513801710},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1676513801710},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1676513801710},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1676513801711},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1676513801711},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1676513801712},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1676513801712},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1676513801713},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1676513801713},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1676513801713},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1676513801714},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1676513801715},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1676513801715},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1676513801716},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1676513801716},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1676513801732},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"dc9318992ce2eb086ebaa2fe56b325e56d24098b","modified":1676513801715},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1676513801688},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1676513801689},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1676513801689},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1676513801690},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1676513801733},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1676513801690},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1676513801690},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1676513801691},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1676513801691},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1676513801693},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1676513801693},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1676513801693},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1676513801695},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1676513801694},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1676513801695},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1676513801696},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1676513801696},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1676513801697},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1676513801697},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1676513801677},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1676513801677},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1676513801678},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1676513801678},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a52f8cae599099231866298ed831fdf76c9b6717","modified":1676513801679},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"97974c231b4659b8aa5e9321c4d54db5c816d0db","modified":1676513801678},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1676513801680},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1676513801679},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1676513801680},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1676513801681},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1676513801681},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1676513801682},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"93ba8172c0d2c37d738e6dbd44fcd5a2e23b92f3","modified":1676513801682},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1676513801682},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1676513801683},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1676513801683},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1676513801684},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1676513801686},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"fcd64c23d17775b3635325f6758b648d932e79b5","modified":1676513801684},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1676513801686},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1676513801686},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1676513801687},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1676513801700},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1676513801687},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1676513801700},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1676513801699},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1676513801701},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1676513801704},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1676513801705},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1676513801704},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1676513801705},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1676513801706},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1676513801706},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1676513801706},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1676513801734},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1676513801732},{"_id":"public/search.xml","hash":"15b52d1fd8499a226d32410d7745334f5ad4a2f7","modified":1680009425779},{"_id":"public/categories/index.html","hash":"6c26413b7ab63153ad05741bbd2b3a6081a8d654","modified":1680009425779},{"_id":"public/about/index.html","hash":"67b07f329febeda0caf257430884037dc85fb637","modified":1680009425779},{"_id":"public/tags/index.html","hash":"195015d5e66ec258cce9ed5bdeac761b00196b56","modified":1680009425779},{"_id":"public/2022/10/14/hello-world/index.html","hash":"f170c37d4d268421f344be171a0f84ed4b722663","modified":1677328649712},{"_id":"public/archives/index.html","hash":"ca399217889c7af4679151cc3bb31383aace4667","modified":1680009425779},{"_id":"public/archives/2021/index.html","hash":"34f1438786ddd0794ad9c4a14d9b72f556af87c4","modified":1680009425779},{"_id":"public/2023/02/16/nodejs版本管理工具nvm的使用/index.html","hash":"3ef9335920e00765d9f05979663d333b8dba9cfa","modified":1677328649712},{"_id":"public/2023/02/03/RSA算法/index.html","hash":"8a7b30dfd066e8e551d89e241512d720b4499631","modified":1677328649712},{"_id":"public/2021/12/11/使用hexo搭建个人博客/index.html","hash":"a77c421122f6f81ba06075effd36d0ea8965c5f7","modified":1677328649712},{"_id":"public/2021/12/11/next主题美化配置/index.html","hash":"16fa66c4f233a962f09cb07e8398389da40eea4e","modified":1677328649712},{"_id":"public/archives/2021/12/index.html","hash":"ebedfb9903979dad0daccc99dd96337322905789","modified":1680009425779},{"_id":"public/archives/2022/index.html","hash":"64224fbbad79a07845f9812013a518b6cbbcd45b","modified":1680009425779},{"_id":"public/archives/2022/10/index.html","hash":"00c314fa55081a8b1988e766ff827e53fc0488ef","modified":1680009425779},{"_id":"public/archives/2023/index.html","hash":"bca690e48e6d94b162a64763a4347d3df5fc36b4","modified":1680009425779},{"_id":"public/archives/2023/02/index.html","hash":"e55cfe70c2dd696457035df403dfee2dafeeef18","modified":1680009425779},{"_id":"public/categories/技术/index.html","hash":"c51ce0dece91fc1f070ac327f77797997f1bf3ca","modified":1680009425779},{"_id":"public/categories/JavaScript/工具使用/index.html","hash":"6bee6a2994c8549db440a0a72a726dbca3d3ab23","modified":1680009425779},{"_id":"public/categories/JavaScript/index.html","hash":"25f5b326f6250168c0e3fae34989348fdc27515f","modified":1680009425779},{"_id":"public/tags/rsa/index.html","hash":"e525f51bebc8741dc1b987c37de763198aabcbad","modified":1680009425779},{"_id":"public/tags/算法积累/index.html","hash":"b40dcf3784f8aad28241a50d823d71173a10eae9","modified":1680009425779},{"_id":"public/tags/hexo/index.html","hash":"efe708d12247581b1714ba4f928d922e1717e262","modified":1680009425779},{"_id":"public/tags/next/index.html","hash":"d0701f87a8677344bfcd615413a603a7dfac267b","modified":1680009425779},{"_id":"public/tags/博客/index.html","hash":"7d8c9041b570fe4130ec52a502ce03d298d019c3","modified":1680009425779},{"_id":"public/tags/开始/index.html","hash":"617f160f9bd1ce8bea4ce8681d8c649554c963ed","modified":1680009425779},{"_id":"public/tags/nodejs/index.html","hash":"fa911bd2b35a554f899a472ca710ad96baf80358","modified":1680009425779},{"_id":"public/tags/nvm/index.html","hash":"80ba8f641d2e255a056bafa2c9decb65d8a665c9","modified":1680009425779},{"_id":"public/tags/版本管理/index.html","hash":"fa32cb8bfdcbe6cc4a09e92fe122829e3f196371","modified":1680009425779},{"_id":"public/index.html","hash":"66d48e7f9f822117323198bc836e832b41db82d3","modified":1680009425779},{"_id":"public/CNAME","hash":"d0411f1b84158f780b3b65453bdb30495100ca6f","modified":1676518171155},{"_id":"public/images/rsa/rsa1.svg","hash":"52febf3089c3dd01e38d7fcd08fc8fd92bd423eb","modified":1676518171155},{"_id":"public/images/rsa/rsa4.svg","hash":"61c4b1358563f5cbbf9869312b60aa0941631dfa","modified":1676518171155},{"_id":"public/images/rsa/rsa2.svg","hash":"f6b207d32f5425e1fcd2ff547229eca9f7850a83","modified":1676518171155},{"_id":"public/images/rsa/rsa3.svg","hash":"9a5f337decb0dddf2469c8c2127ec779c2718564","modified":1676518171155},{"_id":"public/images/rsa/rsa5.svg","hash":"7ed7911b47e70c862be4ef3ee987ca3a46ad7b02","modified":1676518171155},{"_id":"public/images/rsa/rsa6.svg","hash":"e9ce22866f45584143034c3df640c3d7e59fcf97","modified":1676518171155},{"_id":"public/images/rsa/rsa7.svg","hash":"1761f0ccdb3497b345d2face4d5dbdc3d103e2a3","modified":1676518171155},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1676518171155},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1676518171155},{"_id":"public/images/apple-touch-icon.png","hash":"bf64dcf821fc445ac21118a836015bb72dc13091","modified":1676518171155},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1676518171155},{"_id":"public/images/avatar.png","hash":"3df38d4aa92a1d945343e95e8308c9f63941c31c","modified":1676518171155},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1676518171155},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1676518171155},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1676518171155},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1676518171155},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1676518171155},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1676518171155},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1676518171155},{"_id":"public/images/favicon-16x16.png","hash":"4dfc8fcd13cd1f7fc0c3bb0fb8a96f082c386d39","modified":1676518171155},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1676518171155},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1676518171155},{"_id":"public/images/favicon-32x32.png","hash":"1d4b6f9c7da190bb885237540cca4b348dbc82f2","modified":1676518171155},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1676518171155},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1676518171155},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1676518171155},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1676518171155},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1676518171155},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1676518171155},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1676518171155},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1676518171155},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1676518171155},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1676518171155},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1676518171155},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1676518171155},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1676518171155},{"_id":"public/css/main.css","hash":"38e4a299d2784adf6450b4a0b38d03f8a35edfa9","modified":1676518171155},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1676518171155},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1676518171155},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1676518171155},{"_id":"source/_posts/go交叉编译-Mac-Linux-Windows.md","hash":"86e9d4ae6ff48e67f1971e317167140b3ece962a","modified":1677330540681},{"_id":"public/tags/build/index.html","hash":"7e75820e2e3531ae826bdff6b3c39c089bc695fe","modified":1680009425779},{"_id":"public/tags/go/index.html","hash":"eb804be13566a499f74f96e551f03b7840f7b74c","modified":1680009425779},{"_id":"public/2023/02/25/go交叉编译-Mac-Linux-Windows/index.html","hash":"5fb5fe40dd1c74df568fdd53c2447e483d594099","modified":1677330563338},{"_id":"source/_posts/1.hello-world.md","hash":"24ee2d6871e2e412b94ce9afed986a54eb4fdf52","modified":1675380968827},{"_id":"source/_posts/2.使用hexo搭建个人博客.md","hash":"0d1cb17d206d7a6322b4c379a2558fd6ebce1308","modified":1676542912012},{"_id":"source/_posts/3.next主题美化配置.md","hash":"6ae63259573060c66f6f5597f89c5ebe38b8251c","modified":1676542862919},{"_id":"source/_posts/10.多重背包问题-go实现.md","hash":"2e2353838ad1b89155c5dbc703e4e91b8dd0703e","modified":1679990523080},{"_id":"source/_posts/4.nodejs版本管理工具nvm的使用.md","hash":"11d043dcdf203b9cf77461ce828e49f789a470cd","modified":1676542990082},{"_id":"source/_posts/6.go交叉编译-Mac-Linux-Windows.md","hash":"86e9d4ae6ff48e67f1971e317167140b3ece962a","modified":1677330540681},{"_id":"source/_posts/5.RSA算法.md","hash":"01abb6a2d6cfd2013ecfc043dd1922cfd2480182","modified":1676543003435},{"_id":"source/_posts/8.01背包问题-go实现.md","hash":"4f536c2c6bcd177492c7f2c9632b1259ea770cc0","modified":1679990195784},{"_id":"source/_posts/7.dd大牛的《背包九讲》.md","hash":"775589d8f97eeb3285adefd463bf92aa629974ec","modified":1677460475233},{"_id":"source/_posts/9.完全背包问题-go实现.md","hash":"aa61540416ccc83db73d92e76c897873f0855247","modified":1679990532376},{"_id":"public/2022/10/14/1.hello-world/index.html","hash":"a02e41f35cb9026b81417cec955e0bfebab253cb","modified":1680009425779},{"_id":"public/categories/技术/算法/index.html","hash":"edcaae8a0ed0fb1d3b31a72f80e4a36623ac4ce3","modified":1680009425779},{"_id":"public/tags/背包问题/index.html","hash":"fd24805170fa947c8834e4ef785a57531d8e9c87","modified":1680009425779},{"_id":"public/tags/背包九讲/index.html","hash":"2ceadaa355ae1da0e3e0e7c7692860c7330024bd","modified":1680009425779},{"_id":"public/tags/01背包问题/index.html","hash":"2141c62610dfaffb61283e00f15366f6cbb83c4b","modified":1680009425779},{"_id":"public/tags/算法/index.html","hash":"ed0a128e0ad25d7b144bb0affe5bac49f2190992","modified":1680009425779},{"_id":"public/tags/完全背包/index.html","hash":"5425140450488c7ce6b54ec431bb636a6e470638","modified":1680009425779},{"_id":"public/2023/02/27/10.多重背包问题-go实现/index.html","hash":"5c334307fff086d162e766f628850b1396d66db5","modified":1680009425779},{"_id":"public/2023/02/27/9.完全背包问题-go实现/index.html","hash":"0d29aa18da76cd7258158ead013bdba1c363e6c4","modified":1680009425779},{"_id":"public/2023/02/25/7.dd大牛的《背包九讲》/index.html","hash":"00cdafe42dd2c1c74ecc2fcb7ed37b903d865ec6","modified":1680009425779},{"_id":"public/2023/02/27/8.01背包问题-go实现/index.html","hash":"2715c60baedbd5736abe888da1c1feac94655c60","modified":1680009425779},{"_id":"public/2023/02/16/4.nodejs版本管理工具nvm的使用/index.html","hash":"f3b40e3c61ca7a9fc1047daf52a115c7e76b896b","modified":1680009425779},{"_id":"public/2023/02/03/5.RSA算法/index.html","hash":"28f88c5a3cb31d78c8e8e07356791fda094a9a78","modified":1680009425779},{"_id":"public/2023/02/25/6.go交叉编译-Mac-Linux-Windows/index.html","hash":"cb62be59adea3cd3440767bed6ff56bf0b4f316a","modified":1680009425779},{"_id":"public/2021/12/11/2.使用hexo搭建个人博客/index.html","hash":"fc502e60edc4f94937c2428074e01c9a489853d9","modified":1680009425779},{"_id":"public/2021/12/11/3.next主题美化配置/index.html","hash":"a826fc94b943c7415511f17b4e681287d727d169","modified":1680009425779},{"_id":"source/_posts/11.使用kubeadm搭建k8s集群.md","hash":"7058845cd11f4c7adcfd23d4baf1aa174afac137","modified":1680005884485},{"_id":"source/_posts/13.k8s-apiserver证书添加新地址.md","hash":"0e9a5f21a6cec344e92f04485038a9fcd3ea500b","modified":1680009233175},{"_id":"source/_posts/12.centos系统安装containerd.md","hash":"36ee5a9b2a738a8a4c2b5400e5d6290b4a062593","modified":1680005848843},{"_id":"public/archives/page/2/index.html","hash":"a481a2424b256ce6e4fb14e53f59765d8b773ddb","modified":1680009425779},{"_id":"public/archives/2023/03/index.html","hash":"945ccd161ded85a779d0dff7aa9639cc77c60790","modified":1680009425779},{"_id":"public/tags/k8s/index.html","hash":"226b4b5d98b74f5fda03fc2d52c650fb7c2efe7a","modified":1680009425779},{"_id":"public/tags/kubeadm/index.html","hash":"38322aa8018191b6abed20fedc90c4f13be898b7","modified":1680009425779},{"_id":"public/tags/containerd/index.html","hash":"bae03d421878386a7d1f7cb324dc86014b9632b0","modified":1680009425779},{"_id":"public/categories/技术/page/2/index.html","hash":"c306858ae34809935cdc191a810960b108d5c327","modified":1680009425779},{"_id":"public/2023/03/28/13.k8s-apiserver证书添加新地址/index.html","hash":"f7af41129d1d74367cc7cc973bfb2b3ee1662163","modified":1680009425779},{"_id":"public/2023/03/28/12.centos系统安装containerd/index.html","hash":"5593db286bb414c086ccb6b8803cdcad20324094","modified":1680009425779},{"_id":"public/2023/03/28/11.使用kubeadm搭建k8s集群/index.html","hash":"cae1fa4fd6d871d748e8337cee05062b3b90c570","modified":1680009425779},{"_id":"public/page/2/index.html","hash":"25ee5279cf6a8ac1cfb2fb6136ed4b6bc70bc3d2","modified":1680009425779}],"Category":[{"name":"技术","_id":"cle6jms9k0004h8fv3qhf7ggs"},{"name":"JavaScript","_id":"cle6jms9w000xh8fv9r850i5b"},{"name":"工具使用","parent":"cle6jms9w000xh8fv9r850i5b","_id":"cle6jms9w0010h8fv67t5gmub"},{"name":"算法","parent":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfrxyv1l000a2cfv697528db"}],"Data":[],"Page":[{"title":"分类","date":"2021-12-11T07:57:20.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-12-11 15:57:20\ntype: \"categories\"\n---\n","updated":"2022-10-14T08:42:39.409Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cle6jms9d0000h8fvfbwy1kgt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于本站","date":"2021-12-11T07:56:41.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于本站\ndate: 2021-12-11 15:56:41\n---\n","updated":"2022-10-14T08:42:39.409Z","path":"about/index.html","comments":1,"layout":"page","_id":"cle6jms9i0002h8fvd9ww7t2b","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2021-12-11T07:57:06.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-12-11 15:57:06\ntype: \"tags\"\n---\n","updated":"2022-10-14T08:42:39.419Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cle6jms9m0006h8fv397ufjyg","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"## hello world\n\n","source":"_posts/1.hello-world.md","raw":"---\ntitle: Hello World\ntags:\n- 开始\ncategories:\n- 技术\n---\n## hello world\n\n","slug":"1.hello-world","published":1,"date":"2022-10-14T08:42:39.409Z","updated":"2023-02-02T23:36:08.827Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfrxyv1a00002cfvefvthas5","content":"<h2 id=\"hello-world\"><a href=\"#hello-world\" class=\"headerlink\" title=\"hello world\"></a>hello world</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"hello-world\"><a href=\"#hello-world\" class=\"headerlink\" title=\"hello world\"></a>hello world</h2>"},{"title":"使用hexo搭建个人博客","date":"2021-12-11T08:17:26.000Z","_content":"\n# 使用hexo搭建个人博客\n\n### 前言\n\n 目前使用hexo配合github来搭建个人博客十分常见，最近摸索了下相关技术，使用hexo➕GitHub搭建了个人博客，并且使用到了next主题，在此做个总结。\n\n<!--more-->\n\n### 环境准备\n\n1、安装Node.js环境。（Hexo基于Node.js，因此搭建过程需要使用到相关环境）\n\n2、安装Git。（用于与GitHub链接及日常推送）\n\n3、将本地环境的ssh公钥配置到GitHub。\n\n4、初始化本地git配置。\n\n```\ngit config --global user.name \"GitHub 用户名\"\ngit config --global user.email \"GitHub 邮箱\"\n```\n\n5、创建GitHub的仓库。（仓库名使用：用户名.github.io）\n\n### 安装本地Hexo\n\n1、npm一键安装hexo.\n\n```\n# Mac环境。\nsudo npm install -g hexo-cli\n```\n\n2、hexo初始化\n\n```\n# cd到准备的博客目录（如blog）\ncd /blog\n\n# 初始化\nhexo init\n\n# 安装组件\nnpm install\n```\n\n3、测试安装结果。\n\n```\n# 生成页面\nhexo g\n\n# 启动预览\nhexo s\n```\n\n此时若在浏览器访问`http://localhost:4000`，如果出现 Hexo 默认页面，则本地博客安装成功。\n\n### 将Hexo推送到GitHub\n\n1、安装推送插件。\n\n```\n# workdir 博客目录（/blog下）\nnpm install hexo-deployer-git --save\n```\n\n2、修改工作目录下的`_config.yml` 文件的deploy部分，修改成如下\n\n```\ndeploy:\n  type: git\n  repository: git@github.com:用户名/用户名.github.io.git\n  branch: main\n```\n\n3、将Hexo推送到GitHub。\n\n```\nhexo d\n```\n\n4、访问`https://用户名.github.io` 来确认下推送结果。\n\n### 使用next主题\n\n1、到博客目录下载next主题资源。\n\n```\n# cd到博客目录\ngit clone https://github.com/next-theme/hexo-theme-next themes/next\n```\n\n2、修改Hexo的 `_config.yml` 中的theme为新主题名称 next，如下\n\n```\ntheme: next\n```\n\n3、推送到GitHub。\n\n```\nhexo d\n```\n\n4、访问`https://用户名.github.io` 来确认下推送结果。\n\n### 结语\n\n 到此，一个简单的个人博客雏形就搭建完毕了。Next主体有许多美化配置，可以让我们的博客更好看。接下来就让我们来看看next的个性化配置。\n","source":"_posts/2.使用hexo搭建个人博客.md","raw":"---\ntitle: 使用hexo搭建个人博客\ndate: 2021-12-11 16:17:26\ntags:\n- hexo\n- next\n- 博客\ncategories:\n- 技术\n---\n\n# 使用hexo搭建个人博客\n\n### 前言\n\n 目前使用hexo配合github来搭建个人博客十分常见，最近摸索了下相关技术，使用hexo➕GitHub搭建了个人博客，并且使用到了next主题，在此做个总结。\n\n<!--more-->\n\n### 环境准备\n\n1、安装Node.js环境。（Hexo基于Node.js，因此搭建过程需要使用到相关环境）\n\n2、安装Git。（用于与GitHub链接及日常推送）\n\n3、将本地环境的ssh公钥配置到GitHub。\n\n4、初始化本地git配置。\n\n```\ngit config --global user.name \"GitHub 用户名\"\ngit config --global user.email \"GitHub 邮箱\"\n```\n\n5、创建GitHub的仓库。（仓库名使用：用户名.github.io）\n\n### 安装本地Hexo\n\n1、npm一键安装hexo.\n\n```\n# Mac环境。\nsudo npm install -g hexo-cli\n```\n\n2、hexo初始化\n\n```\n# cd到准备的博客目录（如blog）\ncd /blog\n\n# 初始化\nhexo init\n\n# 安装组件\nnpm install\n```\n\n3、测试安装结果。\n\n```\n# 生成页面\nhexo g\n\n# 启动预览\nhexo s\n```\n\n此时若在浏览器访问`http://localhost:4000`，如果出现 Hexo 默认页面，则本地博客安装成功。\n\n### 将Hexo推送到GitHub\n\n1、安装推送插件。\n\n```\n# workdir 博客目录（/blog下）\nnpm install hexo-deployer-git --save\n```\n\n2、修改工作目录下的`_config.yml` 文件的deploy部分，修改成如下\n\n```\ndeploy:\n  type: git\n  repository: git@github.com:用户名/用户名.github.io.git\n  branch: main\n```\n\n3、将Hexo推送到GitHub。\n\n```\nhexo d\n```\n\n4、访问`https://用户名.github.io` 来确认下推送结果。\n\n### 使用next主题\n\n1、到博客目录下载next主题资源。\n\n```\n# cd到博客目录\ngit clone https://github.com/next-theme/hexo-theme-next themes/next\n```\n\n2、修改Hexo的 `_config.yml` 中的theme为新主题名称 next，如下\n\n```\ntheme: next\n```\n\n3、推送到GitHub。\n\n```\nhexo d\n```\n\n4、访问`https://用户名.github.io` 来确认下推送结果。\n\n### 结语\n\n 到此，一个简单的个人博客雏形就搭建完毕了。Next主体有许多美化配置，可以让我们的博客更好看。接下来就让我们来看看next的个性化配置。\n","slug":"2.使用hexo搭建个人博客","published":1,"updated":"2023-02-16T10:21:52.012Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfrxyv1e00012cfvb2xo5erf","content":"<h1 id=\"使用hexo搭建个人博客\"><a href=\"#使用hexo搭建个人博客\" class=\"headerlink\" title=\"使用hexo搭建个人博客\"></a>使用hexo搭建个人博客</h1><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p> 目前使用hexo配合github来搭建个人博客十分常见，最近摸索了下相关技术，使用hexo➕GitHub搭建了个人博客，并且使用到了next主题，在此做个总结。</p>\n<span id=\"more\"></span>\n\n<h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><p>1、安装Node.js环境。（Hexo基于Node.js，因此搭建过程需要使用到相关环境）</p>\n<p>2、安装Git。（用于与GitHub链接及日常推送）</p>\n<p>3、将本地环境的ssh公钥配置到GitHub。</p>\n<p>4、初始化本地git配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>\n\n<p>5、创建GitHub的仓库。（仓库名使用：用户名.github.io）</p>\n<h3 id=\"安装本地Hexo\"><a href=\"#安装本地Hexo\" class=\"headerlink\" title=\"安装本地Hexo\"></a>安装本地Hexo</h3><p>1、npm一键安装hexo.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Mac环境。</span><br><span class=\"line\">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>2、hexo初始化</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cd到准备的博客目录（如blog）</span><br><span class=\"line\">cd /blog</span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化</span><br><span class=\"line\">hexo init</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装组件</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>3、测试安装结果。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 生成页面</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动预览</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>此时若在浏览器访问<code>http://localhost:4000</code>，如果出现 Hexo 默认页面，则本地博客安装成功。</p>\n<h3 id=\"将Hexo推送到GitHub\"><a href=\"#将Hexo推送到GitHub\" class=\"headerlink\" title=\"将Hexo推送到GitHub\"></a>将Hexo推送到GitHub</h3><p>1、安装推送插件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># workdir 博客目录（/blog下）</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>2、修改工作目录下的<code>_config.yml</code> 文件的deploy部分，修改成如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class=\"line\">  branch: main</span><br></pre></td></tr></table></figure>\n\n<p>3、将Hexo推送到GitHub。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>4、访问<code>https://用户名.github.io</code> 来确认下推送结果。</p>\n<h3 id=\"使用next主题\"><a href=\"#使用next主题\" class=\"headerlink\" title=\"使用next主题\"></a>使用next主题</h3><p>1、到博客目录下载next主题资源。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cd到博客目录</span><br><span class=\"line\">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p>2、修改Hexo的 <code>_config.yml</code> 中的theme为新主题名称 next，如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n\n<p>3、推送到GitHub。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>4、访问<code>https://用户名.github.io</code> 来确认下推送结果。</p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p> 到此，一个简单的个人博客雏形就搭建完毕了。Next主体有许多美化配置，可以让我们的博客更好看。接下来就让我们来看看next的个性化配置。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"使用hexo搭建个人博客\"><a href=\"#使用hexo搭建个人博客\" class=\"headerlink\" title=\"使用hexo搭建个人博客\"></a>使用hexo搭建个人博客</h1><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p> 目前使用hexo配合github来搭建个人博客十分常见，最近摸索了下相关技术，使用hexo➕GitHub搭建了个人博客，并且使用到了next主题，在此做个总结。</p>","more":"<h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><p>1、安装Node.js环境。（Hexo基于Node.js，因此搭建过程需要使用到相关环境）</p>\n<p>2、安装Git。（用于与GitHub链接及日常推送）</p>\n<p>3、将本地环境的ssh公钥配置到GitHub。</p>\n<p>4、初始化本地git配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>\n\n<p>5、创建GitHub的仓库。（仓库名使用：用户名.github.io）</p>\n<h3 id=\"安装本地Hexo\"><a href=\"#安装本地Hexo\" class=\"headerlink\" title=\"安装本地Hexo\"></a>安装本地Hexo</h3><p>1、npm一键安装hexo.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Mac环境。</span><br><span class=\"line\">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>2、hexo初始化</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cd到准备的博客目录（如blog）</span><br><span class=\"line\">cd /blog</span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化</span><br><span class=\"line\">hexo init</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装组件</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>3、测试安装结果。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 生成页面</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动预览</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>此时若在浏览器访问<code>http://localhost:4000</code>，如果出现 Hexo 默认页面，则本地博客安装成功。</p>\n<h3 id=\"将Hexo推送到GitHub\"><a href=\"#将Hexo推送到GitHub\" class=\"headerlink\" title=\"将Hexo推送到GitHub\"></a>将Hexo推送到GitHub</h3><p>1、安装推送插件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># workdir 博客目录（/blog下）</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>2、修改工作目录下的<code>_config.yml</code> 文件的deploy部分，修改成如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class=\"line\">  branch: main</span><br></pre></td></tr></table></figure>\n\n<p>3、将Hexo推送到GitHub。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>4、访问<code>https://用户名.github.io</code> 来确认下推送结果。</p>\n<h3 id=\"使用next主题\"><a href=\"#使用next主题\" class=\"headerlink\" title=\"使用next主题\"></a>使用next主题</h3><p>1、到博客目录下载next主题资源。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cd到博客目录</span><br><span class=\"line\">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p>2、修改Hexo的 <code>_config.yml</code> 中的theme为新主题名称 next，如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n\n<p>3、推送到GitHub。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>4、访问<code>https://用户名.github.io</code> 来确认下推送结果。</p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p> 到此，一个简单的个人博客雏形就搭建完毕了。Next主体有许多美化配置，可以让我们的博客更好看。接下来就让我们来看看next的个性化配置。</p>"},{"title":"多重背包问题(go实现)","date":"2023-02-27T12:41:35.000Z","_content":"\n# 多重背包问题\n\n## 1.问题\n\n有 N 种物品和一个容量是 V 的背包。\n\n第 i 种物品最多有 si 件，每件体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。\n输出最大价值。\n\n输入格式\n\n​\t第一行两个整数，N，V；N，V，用空格隔开，分别表示物品种数和背包容积。\n\n​\t接下来有 N 行，每行三个整数 vi,wi,si；vi,wi,si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。\n\n输出格式\n\n​\t输出一个整数，表示最大价值。\n\n数据范围\n\n​\t0<N,V≤1000<N,V≤100\n​\t0<vi,wi,si≤100\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n","source":"_posts/10.多重背包问题-go实现.md","raw":"---\ntitle: 多重背包问题(go实现)\ndate: 2023-02-27 20:41:35\ntags:\n- 背包问题\n- go\ncategories:\n- 技术\n- 算法\n---\n\n# 多重背包问题\n\n## 1.问题\n\n有 N 种物品和一个容量是 V 的背包。\n\n第 i 种物品最多有 si 件，每件体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。\n输出最大价值。\n\n输入格式\n\n​\t第一行两个整数，N，V；N，V，用空格隔开，分别表示物品种数和背包容积。\n\n​\t接下来有 N 行，每行三个整数 vi,wi,si；vi,wi,si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。\n\n输出格式\n\n​\t输出一个整数，表示最大价值。\n\n数据范围\n\n​\t0<N,V≤1000<N,V≤100\n​\t0<vi,wi,si≤100\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n","slug":"10.多重背包问题-go实现","published":1,"updated":"2023-03-28T08:02:03.080Z","_id":"clfrxyv1g00032cfv0jcyhsbs","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"多重背包问题\"><a href=\"#多重背包问题\" class=\"headerlink\" title=\"多重背包问题\"></a>多重背包问题</h1><h2 id=\"1-问题\"><a href=\"#1-问题\" class=\"headerlink\" title=\"1.问题\"></a>1.问题</h2><p>有 N 种物品和一个容量是 V 的背包。</p>\n<p>第 i 种物品最多有 si 件，每件体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。<br>输出最大价值。</p>\n<p>输入格式</p>\n<p>​    第一行两个整数，N，V；N，V，用空格隔开，分别表示物品种数和背包容积。</p>\n<p>​    接下来有 N 行，每行三个整数 vi,wi,si；vi,wi,si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。</p>\n<p>输出格式</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>​    0&lt;N,V≤1000&lt;N,V≤100<br>​    0&lt;vi,wi,si≤100</p>\n<span id=\"more\"></span>\n\n<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2>","site":{"data":{}},"excerpt":"<h1 id=\"多重背包问题\"><a href=\"#多重背包问题\" class=\"headerlink\" title=\"多重背包问题\"></a>多重背包问题</h1><h2 id=\"1-问题\"><a href=\"#1-问题\" class=\"headerlink\" title=\"1.问题\"></a>1.问题</h2><p>有 N 种物品和一个容量是 V 的背包。</p>\n<p>第 i 种物品最多有 si 件，每件体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。<br>输出最大价值。</p>\n<p>输入格式</p>\n<p>​    第一行两个整数，N，V；N，V，用空格隔开，分别表示物品种数和背包容积。</p>\n<p>​    接下来有 N 行，每行三个整数 vi,wi,si；vi,wi,si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。</p>\n<p>输出格式</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>​    0&lt;N,V≤1000&lt;N,V≤100<br>​    0&lt;vi,wi,si≤100</p>","more":"<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2>"},{"title":"next主题美化配置","date":"2021-12-11T08:14:58.000Z","_content":"\n# next主题美化配置\n\n### 前言\n\n 网上关于Hexo的主题美化博客较多，本文用以记录搭建本博客网站过程中使用到的next主题美化配置。给大家做个参考，与大家一起学习进步。\n\n### 常规配置\n\n1、打开**站点**配置文件(hexo的配置文件)`_config.yml`,修改配置。\n\n```\n# Site\ntitle: baronの博客\nsubtitle: '指点江山，激扬文字，粪土当年万户侯。'\ndescription: '生活、工作、游戏、读书，偶有所得，以此为记。'\nkeywords: baron\nauthor: baron\nlanguage: zh-CN\ntimezone: Asia/Shanghai\n```\n\n<!--more-->\n\n2、将我们的头像放置在/themes/next/sources/images目录下，打开主题配置文件`_config.yml`，修改配置。\n\n```\n# Sidebar Avatar\navatar:\n  # Replace the default image and set the url here.\n  url: /images/baron.jpg\n  # If true, the avatar will be dispalyed in circle.\n  rounded: false\n  # If true, the avatar will be rotated with the cursor.\n  rotated: false\n```\n\n### 自定义博客图标\n\n next博客的默认图标是`H`，不过Next支持修改图标，下面是我的图标：\n\n![img](https://mebaron.cn/images/baron.jpg)\n\n我们需要将我们的图标放置在/themes/next/sources/images目录下，并在主题配置文件中进行如下配置，只需要设置small和medium两个就可以（不同尺寸的图标可以到网上制作）。\n\n```\nfavicon:\n  small: /images/baron_16px.ico\n  medium: /images/baron_32px.ico\n  apple_touch_icon: /images/apple-touch-icon-next.png\n  safari_pinned_tab: /images/logo.svg\n```\n\n### 添加点击效果\n\n1、在/themes/next/source/js目录下，新建clicklove.js文件：\n\n```\ncd /themes/next/source/js\ntouch clicklove.js\n```\n\n2、将下面的代码粘贴进clicklove.js文件中：\n\n```\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n\n3、在`\\themes\\next\\layout\\_layout.swig`文件末尾添加：\n\n```\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/clicklove.js\"></script>\n```\n\n### 添加社交信息\n\n1、打开主题配置`_config.yml`，进行相关参数修改：\n\n```\n# 修改对应的社交信息。\nsocial:\n  GitHub: https://github.com/mebaron || fab fa-github\n  E-Mail: mailto:ecustbaron@gmail.com || fa fa-envelope\n  #Weibo: https://weibo.com/yourname || fab fa-weibo\n  #Google: https://plus.google.com/yourname || fab fa-google\n  #Twitter: https://twitter.com/yourname || fab fa-twitter\n  #FB Page: https://www.facebook.com/yourname || fab fa-facebook\n  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow\n  #YouTube: https://youtube.com/yourname || fab fa-youtube\n  #Instagram: https://instagram.com/yourname || fab fa-instagram\n  #Skype: skype:yourname?call|chat || fab fa-skype\n```\n\n### 添加背景\n\n1、下载相应的资源包：\n\n```\n# 在工作目录执行\ngit clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest\n```\n\n2、在主题配置`themes/next/_config.yml`中做相关参数修改：\n\n```\n# Canvas-nest\n# Dependencies: https://github.com/theme-next/theme-next-canvas-nest\ncanvas_nest: # 网络背景\n  enable: true\n  onmobile: true # display on mobile or not\n  color: '0,0,0' # RGB values, use ',' to separate\n  opacity: 0.5 # the opacity of line: 0~1\n  zIndex: -1 # z-index property of the background\n  count: 150 # the number of lines\n```\n\n### 增加文章结束标志\n\n1、在路径/themes/next/layout/_macro文件夹中新建passage-end-tag.swig文件：\n\n```\n# 切换到路径_macro\ncd [_macro路径]\n# 创建passage-end-tag.swig文件\ntouch passage-end-tag.swig\n```\n\n2、打开passage-end-tag.swig文件，添加以下内容：\n\n```\n<div>\n    {% if not is_index %}\n        <div style=\"text-align:center;color: #ccc;font-size:14px;\">-------------本文结束<i class=\"fa fa-paw\"></i>感谢您的阅读-------------</div>\n    {% endif %}\n</div>\n```\n\n3、打开/themes/next/layout/_macro/post.swig，在post-body之后，post-footer之前，添加以下代码：\n\n```\n<div>\n  {% if not is_index %}\n    {% include 'passage-end-tag.swig' %}\n  {% endif %}\n</div>\n```\n\n4、然后打开主题配置文件`_config.yml`,在末尾添加：\n\n```\n# 文章末尾添加“本文结束”标记\npassage_end_tag:\n  enabled: true\n```\n\n### 添加文章版权信息\n\n1、打开主题配置_config.yml，进行相关参数设置：\n\n```\ncreative_commons:\n  license: by-nc-sa\n  sidebar: true\n  post: true\n```\n\n### 添加搜索功能\n\n1、安装hexo-generator-searchdb插件.\n\n```\ncd 文件目录\nnpm install hexo-generator-searchdb --save\n```\n\n2、打开**站点**配置文件(hexo的配置文件)`_config.yml`,添加配置:\n\n```\n# 搜索\nsearch:\n  path: ./public/search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n","source":"_posts/3.next主题美化配置.md","raw":"---\ntitle: next主题美化配置\ndate: 2021-12-11 16:14:58\ntags:\n- hexo\n- next\n- 博客\ncategories:\n- 技术\n---\n\n# next主题美化配置\n\n### 前言\n\n 网上关于Hexo的主题美化博客较多，本文用以记录搭建本博客网站过程中使用到的next主题美化配置。给大家做个参考，与大家一起学习进步。\n\n### 常规配置\n\n1、打开**站点**配置文件(hexo的配置文件)`_config.yml`,修改配置。\n\n```\n# Site\ntitle: baronの博客\nsubtitle: '指点江山，激扬文字，粪土当年万户侯。'\ndescription: '生活、工作、游戏、读书，偶有所得，以此为记。'\nkeywords: baron\nauthor: baron\nlanguage: zh-CN\ntimezone: Asia/Shanghai\n```\n\n<!--more-->\n\n2、将我们的头像放置在/themes/next/sources/images目录下，打开主题配置文件`_config.yml`，修改配置。\n\n```\n# Sidebar Avatar\navatar:\n  # Replace the default image and set the url here.\n  url: /images/baron.jpg\n  # If true, the avatar will be dispalyed in circle.\n  rounded: false\n  # If true, the avatar will be rotated with the cursor.\n  rotated: false\n```\n\n### 自定义博客图标\n\n next博客的默认图标是`H`，不过Next支持修改图标，下面是我的图标：\n\n![img](https://mebaron.cn/images/baron.jpg)\n\n我们需要将我们的图标放置在/themes/next/sources/images目录下，并在主题配置文件中进行如下配置，只需要设置small和medium两个就可以（不同尺寸的图标可以到网上制作）。\n\n```\nfavicon:\n  small: /images/baron_16px.ico\n  medium: /images/baron_32px.ico\n  apple_touch_icon: /images/apple-touch-icon-next.png\n  safari_pinned_tab: /images/logo.svg\n```\n\n### 添加点击效果\n\n1、在/themes/next/source/js目录下，新建clicklove.js文件：\n\n```\ncd /themes/next/source/js\ntouch clicklove.js\n```\n\n2、将下面的代码粘贴进clicklove.js文件中：\n\n```\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n\n3、在`\\themes\\next\\layout\\_layout.swig`文件末尾添加：\n\n```\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/clicklove.js\"></script>\n```\n\n### 添加社交信息\n\n1、打开主题配置`_config.yml`，进行相关参数修改：\n\n```\n# 修改对应的社交信息。\nsocial:\n  GitHub: https://github.com/mebaron || fab fa-github\n  E-Mail: mailto:ecustbaron@gmail.com || fa fa-envelope\n  #Weibo: https://weibo.com/yourname || fab fa-weibo\n  #Google: https://plus.google.com/yourname || fab fa-google\n  #Twitter: https://twitter.com/yourname || fab fa-twitter\n  #FB Page: https://www.facebook.com/yourname || fab fa-facebook\n  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow\n  #YouTube: https://youtube.com/yourname || fab fa-youtube\n  #Instagram: https://instagram.com/yourname || fab fa-instagram\n  #Skype: skype:yourname?call|chat || fab fa-skype\n```\n\n### 添加背景\n\n1、下载相应的资源包：\n\n```\n# 在工作目录执行\ngit clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest\n```\n\n2、在主题配置`themes/next/_config.yml`中做相关参数修改：\n\n```\n# Canvas-nest\n# Dependencies: https://github.com/theme-next/theme-next-canvas-nest\ncanvas_nest: # 网络背景\n  enable: true\n  onmobile: true # display on mobile or not\n  color: '0,0,0' # RGB values, use ',' to separate\n  opacity: 0.5 # the opacity of line: 0~1\n  zIndex: -1 # z-index property of the background\n  count: 150 # the number of lines\n```\n\n### 增加文章结束标志\n\n1、在路径/themes/next/layout/_macro文件夹中新建passage-end-tag.swig文件：\n\n```\n# 切换到路径_macro\ncd [_macro路径]\n# 创建passage-end-tag.swig文件\ntouch passage-end-tag.swig\n```\n\n2、打开passage-end-tag.swig文件，添加以下内容：\n\n```\n<div>\n    {% if not is_index %}\n        <div style=\"text-align:center;color: #ccc;font-size:14px;\">-------------本文结束<i class=\"fa fa-paw\"></i>感谢您的阅读-------------</div>\n    {% endif %}\n</div>\n```\n\n3、打开/themes/next/layout/_macro/post.swig，在post-body之后，post-footer之前，添加以下代码：\n\n```\n<div>\n  {% if not is_index %}\n    {% include 'passage-end-tag.swig' %}\n  {% endif %}\n</div>\n```\n\n4、然后打开主题配置文件`_config.yml`,在末尾添加：\n\n```\n# 文章末尾添加“本文结束”标记\npassage_end_tag:\n  enabled: true\n```\n\n### 添加文章版权信息\n\n1、打开主题配置_config.yml，进行相关参数设置：\n\n```\ncreative_commons:\n  license: by-nc-sa\n  sidebar: true\n  post: true\n```\n\n### 添加搜索功能\n\n1、安装hexo-generator-searchdb插件.\n\n```\ncd 文件目录\nnpm install hexo-generator-searchdb --save\n```\n\n2、打开**站点**配置文件(hexo的配置文件)`_config.yml`,添加配置:\n\n```\n# 搜索\nsearch:\n  path: ./public/search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n","slug":"3.next主题美化配置","published":1,"updated":"2023-02-16T10:21:02.919Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfrxyv1h00052cfvhpa12jco","content":"<h1 id=\"next主题美化配置\"><a href=\"#next主题美化配置\" class=\"headerlink\" title=\"next主题美化配置\"></a>next主题美化配置</h1><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p> 网上关于Hexo的主题美化博客较多，本文用以记录搭建本博客网站过程中使用到的next主题美化配置。给大家做个参考，与大家一起学习进步。</p>\n<h3 id=\"常规配置\"><a href=\"#常规配置\" class=\"headerlink\" title=\"常规配置\"></a>常规配置</h3><p>1、打开<strong>站点</strong>配置文件(hexo的配置文件)<code>_config.yml</code>,修改配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: baronの博客</span><br><span class=\"line\">subtitle: &#x27;指点江山，激扬文字，粪土当年万户侯。&#x27;</span><br><span class=\"line\">description: &#x27;生活、工作、游戏、读书，偶有所得，以此为记。&#x27;</span><br><span class=\"line\">keywords: baron</span><br><span class=\"line\">author: baron</span><br><span class=\"line\">language: zh-CN</span><br><span class=\"line\">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<p>2、将我们的头像放置在/themes/next/sources/images目录下，打开主题配置文件<code>_config.yml</code>，修改配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Sidebar Avatar</span><br><span class=\"line\">avatar:</span><br><span class=\"line\">  # Replace the default image and set the url here.</span><br><span class=\"line\">  url: /images/baron.jpg</span><br><span class=\"line\">  # If true, the avatar will be dispalyed in circle.</span><br><span class=\"line\">  rounded: false</span><br><span class=\"line\">  # If true, the avatar will be rotated with the cursor.</span><br><span class=\"line\">  rotated: false</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义博客图标\"><a href=\"#自定义博客图标\" class=\"headerlink\" title=\"自定义博客图标\"></a>自定义博客图标</h3><p> next博客的默认图标是<code>H</code>，不过Next支持修改图标，下面是我的图标：</p>\n<p><img src=\"https://mebaron.cn/images/baron.jpg\" alt=\"img\"></p>\n<p>我们需要将我们的图标放置在/themes/next/sources/images目录下，并在主题配置文件中进行如下配置，只需要设置small和medium两个就可以（不同尺寸的图标可以到网上制作）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favicon:</span><br><span class=\"line\">  small: /images/baron_16px.ico</span><br><span class=\"line\">  medium: /images/baron_32px.ico</span><br><span class=\"line\">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class=\"line\">  safari_pinned_tab: /images/logo.svg</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加点击效果\"><a href=\"#添加点击效果\" class=\"headerlink\" title=\"添加点击效果\"></a>添加点击效果</h3><p>1、在/themes/next/source/js目录下，新建clicklove.js文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /themes/next/source/js</span><br><span class=\"line\">touch clicklove.js</span><br></pre></td></tr></table></figure>\n\n<p>2、将下面的代码粘贴进clicklove.js文件中：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>\n\n<p>3、在<code>\\themes\\next\\layout\\_layout.swig</code>文件末尾添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加社交信息\"><a href=\"#添加社交信息\" class=\"headerlink\" title=\"添加社交信息\"></a>添加社交信息</h3><p>1、打开主题配置<code>_config.yml</code>，进行相关参数修改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 修改对应的社交信息。</span><br><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/mebaron || fab fa-github</span><br><span class=\"line\">  E-Mail: mailto:ecustbaron@gmail.com || fa fa-envelope</span><br><span class=\"line\">  #Weibo: https://weibo.com/yourname || fab fa-weibo</span><br><span class=\"line\">  #Google: https://plus.google.com/yourname || fab fa-google</span><br><span class=\"line\">  #Twitter: https://twitter.com/yourname || fab fa-twitter</span><br><span class=\"line\">  #FB Page: https://www.facebook.com/yourname || fab fa-facebook</span><br><span class=\"line\">  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span><br><span class=\"line\">  #YouTube: https://youtube.com/yourname || fab fa-youtube</span><br><span class=\"line\">  #Instagram: https://instagram.com/yourname || fab fa-instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加背景\"><a href=\"#添加背景\" class=\"headerlink\" title=\"添加背景\"></a>添加背景</h3><p>1、下载相应的资源包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 在工作目录执行</span><br><span class=\"line\">git clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest</span><br></pre></td></tr></table></figure>\n\n<p>2、在主题配置<code>themes/next/_config.yml</code>中做相关参数修改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Canvas-nest</span><br><span class=\"line\"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span><br><span class=\"line\">canvas_nest: # 网络背景</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  onmobile: true # display on mobile or not</span><br><span class=\"line\">  color: &#x27;0,0,0&#x27; # RGB values, use &#x27;,&#x27; to separate</span><br><span class=\"line\">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class=\"line\">  zIndex: -1 # z-index property of the background</span><br><span class=\"line\">  count: 150 # the number of lines</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"增加文章结束标志\"><a href=\"#增加文章结束标志\" class=\"headerlink\" title=\"增加文章结束标志\"></a>增加文章结束标志</h3><p>1、在路径/themes/next/layout/_macro文件夹中新建passage-end-tag.swig文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 切换到路径_macro</span><br><span class=\"line\">cd [_macro路径]</span><br><span class=\"line\"># 创建passage-end-tag.swig文件</span><br><span class=\"line\">touch passage-end-tag.swig</span><br></pre></td></tr></table></figure>\n\n<p>2、打开passage-end-tag.swig文件，添加以下内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &#123;% if not is_index %&#125;</span><br><span class=\"line\">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>3、打开/themes/next/layout/_macro/post.swig，在post-body之后，post-footer之前，添加以下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &#123;% if not is_index %&#125;</span><br><span class=\"line\">    &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125;</span><br><span class=\"line\">  &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>4、然后打开主题配置文件<code>_config.yml</code>,在末尾添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章末尾添加“本文结束”标记</span><br><span class=\"line\">passage_end_tag:</span><br><span class=\"line\">  enabled: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加文章版权信息\"><a href=\"#添加文章版权信息\" class=\"headerlink\" title=\"添加文章版权信息\"></a>添加文章版权信息</h3><p>1、打开主题配置_config.yml，进行相关参数设置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">creative_commons:</span><br><span class=\"line\">  license: by-nc-sa</span><br><span class=\"line\">  sidebar: true</span><br><span class=\"line\">  post: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加搜索功能\"><a href=\"#添加搜索功能\" class=\"headerlink\" title=\"添加搜索功能\"></a>添加搜索功能</h3><p>1、安装hexo-generator-searchdb插件.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 文件目录</span><br><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n\n<p>2、打开<strong>站点</strong>配置文件(hexo的配置文件)<code>_config.yml</code>,添加配置:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 搜索</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: ./public/search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"next主题美化配置\"><a href=\"#next主题美化配置\" class=\"headerlink\" title=\"next主题美化配置\"></a>next主题美化配置</h1><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p> 网上关于Hexo的主题美化博客较多，本文用以记录搭建本博客网站过程中使用到的next主题美化配置。给大家做个参考，与大家一起学习进步。</p>\n<h3 id=\"常规配置\"><a href=\"#常规配置\" class=\"headerlink\" title=\"常规配置\"></a>常规配置</h3><p>1、打开<strong>站点</strong>配置文件(hexo的配置文件)<code>_config.yml</code>,修改配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: baronの博客</span><br><span class=\"line\">subtitle: &#x27;指点江山，激扬文字，粪土当年万户侯。&#x27;</span><br><span class=\"line\">description: &#x27;生活、工作、游戏、读书，偶有所得，以此为记。&#x27;</span><br><span class=\"line\">keywords: baron</span><br><span class=\"line\">author: baron</span><br><span class=\"line\">language: zh-CN</span><br><span class=\"line\">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure>","more":"<p>2、将我们的头像放置在/themes/next/sources/images目录下，打开主题配置文件<code>_config.yml</code>，修改配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Sidebar Avatar</span><br><span class=\"line\">avatar:</span><br><span class=\"line\">  # Replace the default image and set the url here.</span><br><span class=\"line\">  url: /images/baron.jpg</span><br><span class=\"line\">  # If true, the avatar will be dispalyed in circle.</span><br><span class=\"line\">  rounded: false</span><br><span class=\"line\">  # If true, the avatar will be rotated with the cursor.</span><br><span class=\"line\">  rotated: false</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义博客图标\"><a href=\"#自定义博客图标\" class=\"headerlink\" title=\"自定义博客图标\"></a>自定义博客图标</h3><p> next博客的默认图标是<code>H</code>，不过Next支持修改图标，下面是我的图标：</p>\n<p><img src=\"https://mebaron.cn/images/baron.jpg\" alt=\"img\"></p>\n<p>我们需要将我们的图标放置在/themes/next/sources/images目录下，并在主题配置文件中进行如下配置，只需要设置small和medium两个就可以（不同尺寸的图标可以到网上制作）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favicon:</span><br><span class=\"line\">  small: /images/baron_16px.ico</span><br><span class=\"line\">  medium: /images/baron_32px.ico</span><br><span class=\"line\">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class=\"line\">  safari_pinned_tab: /images/logo.svg</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加点击效果\"><a href=\"#添加点击效果\" class=\"headerlink\" title=\"添加点击效果\"></a>添加点击效果</h3><p>1、在/themes/next/source/js目录下，新建clicklove.js文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /themes/next/source/js</span><br><span class=\"line\">touch clicklove.js</span><br></pre></td></tr></table></figure>\n\n<p>2、将下面的代码粘贴进clicklove.js文件中：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>\n\n<p>3、在<code>\\themes\\next\\layout\\_layout.swig</code>文件末尾添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加社交信息\"><a href=\"#添加社交信息\" class=\"headerlink\" title=\"添加社交信息\"></a>添加社交信息</h3><p>1、打开主题配置<code>_config.yml</code>，进行相关参数修改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 修改对应的社交信息。</span><br><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/mebaron || fab fa-github</span><br><span class=\"line\">  E-Mail: mailto:ecustbaron@gmail.com || fa fa-envelope</span><br><span class=\"line\">  #Weibo: https://weibo.com/yourname || fab fa-weibo</span><br><span class=\"line\">  #Google: https://plus.google.com/yourname || fab fa-google</span><br><span class=\"line\">  #Twitter: https://twitter.com/yourname || fab fa-twitter</span><br><span class=\"line\">  #FB Page: https://www.facebook.com/yourname || fab fa-facebook</span><br><span class=\"line\">  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span><br><span class=\"line\">  #YouTube: https://youtube.com/yourname || fab fa-youtube</span><br><span class=\"line\">  #Instagram: https://instagram.com/yourname || fab fa-instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加背景\"><a href=\"#添加背景\" class=\"headerlink\" title=\"添加背景\"></a>添加背景</h3><p>1、下载相应的资源包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 在工作目录执行</span><br><span class=\"line\">git clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest</span><br></pre></td></tr></table></figure>\n\n<p>2、在主题配置<code>themes/next/_config.yml</code>中做相关参数修改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Canvas-nest</span><br><span class=\"line\"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span><br><span class=\"line\">canvas_nest: # 网络背景</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  onmobile: true # display on mobile or not</span><br><span class=\"line\">  color: &#x27;0,0,0&#x27; # RGB values, use &#x27;,&#x27; to separate</span><br><span class=\"line\">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class=\"line\">  zIndex: -1 # z-index property of the background</span><br><span class=\"line\">  count: 150 # the number of lines</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"增加文章结束标志\"><a href=\"#增加文章结束标志\" class=\"headerlink\" title=\"增加文章结束标志\"></a>增加文章结束标志</h3><p>1、在路径/themes/next/layout/_macro文件夹中新建passage-end-tag.swig文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 切换到路径_macro</span><br><span class=\"line\">cd [_macro路径]</span><br><span class=\"line\"># 创建passage-end-tag.swig文件</span><br><span class=\"line\">touch passage-end-tag.swig</span><br></pre></td></tr></table></figure>\n\n<p>2、打开passage-end-tag.swig文件，添加以下内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &#123;% if not is_index %&#125;</span><br><span class=\"line\">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>3、打开/themes/next/layout/_macro/post.swig，在post-body之后，post-footer之前，添加以下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &#123;% if not is_index %&#125;</span><br><span class=\"line\">    &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125;</span><br><span class=\"line\">  &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>4、然后打开主题配置文件<code>_config.yml</code>,在末尾添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章末尾添加“本文结束”标记</span><br><span class=\"line\">passage_end_tag:</span><br><span class=\"line\">  enabled: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加文章版权信息\"><a href=\"#添加文章版权信息\" class=\"headerlink\" title=\"添加文章版权信息\"></a>添加文章版权信息</h3><p>1、打开主题配置_config.yml，进行相关参数设置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">creative_commons:</span><br><span class=\"line\">  license: by-nc-sa</span><br><span class=\"line\">  sidebar: true</span><br><span class=\"line\">  post: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加搜索功能\"><a href=\"#添加搜索功能\" class=\"headerlink\" title=\"添加搜索功能\"></a>添加搜索功能</h3><p>1、安装hexo-generator-searchdb插件.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 文件目录</span><br><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n\n<p>2、打开<strong>站点</strong>配置文件(hexo的配置文件)<code>_config.yml</code>,添加配置:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 搜索</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: ./public/search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>"},{"title":"RSA算法","date":"2023-02-02T23:38:06.000Z","_content":"\n## RSA算法\n\n### 算法描述\n\n（1）任意选取两个不同的大素数p和q计算乘积\n\n![img](../images/rsa/rsa1.svg)\n\n；\n\n（2）任意选取一个大整数e，满足\n\n![img](../images/rsa/rsa2.svg)\n\n ，整数e用做加密钥（注意：e的选取是很容易的，例如，所有大于p和q的素数都可用）；\n\n<!--more-->\n\n（3）确定的解密钥d，满足\n\n![img](../images/rsa/rsa3.svg)\n\n ，即\n\n![img](../images/rsa/rsa4.svg)\n\n 是一个任意的整数；所以，若知道e和\n\n![img](../images/rsa/rsa5.svg)\n\n，则很容易计算出d；\n\n（4）公开整数n和e，秘密保存d ；\n\n（5）将明文m（m<n是一个整数）加密成密文c，加密算法为\n\n![img](../images/rsa/rsa6.svg)\n\n（6）将密文c解密为明文m，解密算法为\n\n![img](../images/rsa/rsa7.svg)\n\n然而只根据n和e（注意：不是p和q）要计算出d是不可能的。因此，任何人都可对明文进行加密，但只有授权用户（知道d）才可对密文解密 。\n","source":"_posts/5.RSA算法.md","raw":"---\ntitle: RSA算法\ndate: 2023-02-03 07:38:06\ntags:\n- rsa\n- 算法积累\ncategories:\n- 技术\n---\n\n## RSA算法\n\n### 算法描述\n\n（1）任意选取两个不同的大素数p和q计算乘积\n\n![img](../images/rsa/rsa1.svg)\n\n；\n\n（2）任意选取一个大整数e，满足\n\n![img](../images/rsa/rsa2.svg)\n\n ，整数e用做加密钥（注意：e的选取是很容易的，例如，所有大于p和q的素数都可用）；\n\n<!--more-->\n\n（3）确定的解密钥d，满足\n\n![img](../images/rsa/rsa3.svg)\n\n ，即\n\n![img](../images/rsa/rsa4.svg)\n\n 是一个任意的整数；所以，若知道e和\n\n![img](../images/rsa/rsa5.svg)\n\n，则很容易计算出d；\n\n（4）公开整数n和e，秘密保存d ；\n\n（5）将明文m（m<n是一个整数）加密成密文c，加密算法为\n\n![img](../images/rsa/rsa6.svg)\n\n（6）将密文c解密为明文m，解密算法为\n\n![img](../images/rsa/rsa7.svg)\n\n然而只根据n和e（注意：不是p和q）要计算出d是不可能的。因此，任何人都可对明文进行加密，但只有授权用户（知道d）才可对密文解密 。\n","slug":"5.RSA算法","published":1,"updated":"2023-02-16T10:23:23.435Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfrxyv1k00092cfvf8mmci4r","content":"<h2 id=\"RSA算法\"><a href=\"#RSA算法\" class=\"headerlink\" title=\"RSA算法\"></a>RSA算法</h2><h3 id=\"算法描述\"><a href=\"#算法描述\" class=\"headerlink\" title=\"算法描述\"></a>算法描述</h3><p>（1）任意选取两个不同的大素数p和q计算乘积</p>\n<p><img src=\"../images/rsa/rsa1.svg\" alt=\"img\"></p>\n<p>；</p>\n<p>（2）任意选取一个大整数e，满足</p>\n<p><img src=\"../images/rsa/rsa2.svg\" alt=\"img\"></p>\n<p> ，整数e用做加密钥（注意：e的选取是很容易的，例如，所有大于p和q的素数都可用）；</p>\n<span id=\"more\"></span>\n\n<p>（3）确定的解密钥d，满足</p>\n<p><img src=\"../images/rsa/rsa3.svg\" alt=\"img\"></p>\n<p> ，即</p>\n<p><img src=\"../images/rsa/rsa4.svg\" alt=\"img\"></p>\n<p> 是一个任意的整数；所以，若知道e和</p>\n<p><img src=\"../images/rsa/rsa5.svg\" alt=\"img\"></p>\n<p>，则很容易计算出d；</p>\n<p>（4）公开整数n和e，秘密保存d ；</p>\n<p>（5）将明文m（m&lt;n是一个整数）加密成密文c，加密算法为</p>\n<p><img src=\"../images/rsa/rsa6.svg\" alt=\"img\"></p>\n<p>（6）将密文c解密为明文m，解密算法为</p>\n<p><img src=\"../images/rsa/rsa7.svg\" alt=\"img\"></p>\n<p>然而只根据n和e（注意：不是p和q）要计算出d是不可能的。因此，任何人都可对明文进行加密，但只有授权用户（知道d）才可对密文解密 。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"RSA算法\"><a href=\"#RSA算法\" class=\"headerlink\" title=\"RSA算法\"></a>RSA算法</h2><h3 id=\"算法描述\"><a href=\"#算法描述\" class=\"headerlink\" title=\"算法描述\"></a>算法描述</h3><p>（1）任意选取两个不同的大素数p和q计算乘积</p>\n<p><img src=\"../images/rsa/rsa1.svg\" alt=\"img\"></p>\n<p>；</p>\n<p>（2）任意选取一个大整数e，满足</p>\n<p><img src=\"../images/rsa/rsa2.svg\" alt=\"img\"></p>\n<p> ，整数e用做加密钥（注意：e的选取是很容易的，例如，所有大于p和q的素数都可用）；</p>","more":"<p>（3）确定的解密钥d，满足</p>\n<p><img src=\"../images/rsa/rsa3.svg\" alt=\"img\"></p>\n<p> ，即</p>\n<p><img src=\"../images/rsa/rsa4.svg\" alt=\"img\"></p>\n<p> 是一个任意的整数；所以，若知道e和</p>\n<p><img src=\"../images/rsa/rsa5.svg\" alt=\"img\"></p>\n<p>，则很容易计算出d；</p>\n<p>（4）公开整数n和e，秘密保存d ；</p>\n<p>（5）将明文m（m&lt;n是一个整数）加密成密文c，加密算法为</p>\n<p><img src=\"../images/rsa/rsa6.svg\" alt=\"img\"></p>\n<p>（6）将密文c解密为明文m，解密算法为</p>\n<p><img src=\"../images/rsa/rsa7.svg\" alt=\"img\"></p>\n<p>然而只根据n和e（注意：不是p和q）要计算出d是不可能的。因此，任何人都可对明文进行加密，但只有授权用户（知道d）才可对密文解密 。</p>"},{"title":"go交叉编译(Mac/Linux/Windows)","date":"2023-02-25T12:33:09.000Z","_content":"\n# go交叉编译(Mac/Linux/Windows)\n\n## 1、MAC 下编译 Linux 、Windows\n\n```bash\n#linux\n\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build  -o name   main.go\n```\n\n---\n\n```bash\n#windows\n\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name  main.go\n```\n\n<!--more-->\n\n## 2、Linux 下编译 Mac、 Windows\n\n```bash\n#Mac\n\nCGO_ENABLED=0 GOOS=darwin GOARCH=amd64  go build  -o name   main.go\n```\n\n---\n\n```bash\n#Windows\n\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name   main.go\n```\n\n## 3、Windows 下编译 Mac 、Linux\n\n```bash\n#Mac\n\nSET CGO_ENABLED=0\n\nSET GOOS=darwin\n\nSET GOARCH=amd64\n\ngo build  -o name   main.go\n```\n\n---\n\n```bash\n#Linux\n\nSET CGO_ENABLED=0\n\nSET GOOS=linux\n\nSET GOARCH=amd64\n\ngo build  -o name   main.go\n```\n\n","source":"_posts/6.go交叉编译-Mac-Linux-Windows.md","raw":"---\ntitle: go交叉编译(Mac/Linux/Windows)\ndate: 2023-02-25 20:33:09\ntags:\n- go\n- build\ncategories:\n- 技术\n---\n\n# go交叉编译(Mac/Linux/Windows)\n\n## 1、MAC 下编译 Linux 、Windows\n\n```bash\n#linux\n\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build  -o name   main.go\n```\n\n---\n\n```bash\n#windows\n\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name  main.go\n```\n\n<!--more-->\n\n## 2、Linux 下编译 Mac、 Windows\n\n```bash\n#Mac\n\nCGO_ENABLED=0 GOOS=darwin GOARCH=amd64  go build  -o name   main.go\n```\n\n---\n\n```bash\n#Windows\n\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name   main.go\n```\n\n## 3、Windows 下编译 Mac 、Linux\n\n```bash\n#Mac\n\nSET CGO_ENABLED=0\n\nSET GOOS=darwin\n\nSET GOARCH=amd64\n\ngo build  -o name   main.go\n```\n\n---\n\n```bash\n#Linux\n\nSET CGO_ENABLED=0\n\nSET GOOS=linux\n\nSET GOARCH=amd64\n\ngo build  -o name   main.go\n```\n\n","slug":"6.go交叉编译-Mac-Linux-Windows","published":1,"updated":"2023-02-25T13:09:00.681Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfrxyv1m000d2cfvcex77kyj","content":"<h1 id=\"go交叉编译-Mac-Linux-Windows\"><a href=\"#go交叉编译-Mac-Linux-Windows\" class=\"headerlink\" title=\"go交叉编译(Mac/Linux/Windows)\"></a>go交叉编译(Mac/Linux/Windows)</h1><h2 id=\"1、MAC-下编译-Linux-、Windows\"><a href=\"#1、MAC-下编译-Linux-、Windows\" class=\"headerlink\" title=\"1、MAC 下编译 Linux 、Windows\"></a>1、MAC 下编译 Linux 、Windows</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#linux</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#windows</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name  main.go</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<h2 id=\"2、Linux-下编译-Mac、-Windows\"><a href=\"#2、Linux-下编译-Mac、-Windows\" class=\"headerlink\" title=\"2、Linux 下编译 Mac、 Windows\"></a>2、Linux 下编译 Mac、 Windows</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Mac</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=darwin GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Windows</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3、Windows-下编译-Mac-、Linux\"><a href=\"#3、Windows-下编译-Mac-、Linux\" class=\"headerlink\" title=\"3、Windows 下编译 Mac 、Linux\"></a>3、Windows 下编译 Mac 、Linux</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Mac</span></span><br><span class=\"line\"></span><br><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOOS=darwin</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\"></span><br><span class=\"line\">go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Linux</span></span><br><span class=\"line\"></span><br><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOOS=linux</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\"></span><br><span class=\"line\">go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h1 id=\"go交叉编译-Mac-Linux-Windows\"><a href=\"#go交叉编译-Mac-Linux-Windows\" class=\"headerlink\" title=\"go交叉编译(Mac/Linux/Windows)\"></a>go交叉编译(Mac/Linux/Windows)</h1><h2 id=\"1、MAC-下编译-Linux-、Windows\"><a href=\"#1、MAC-下编译-Linux-、Windows\" class=\"headerlink\" title=\"1、MAC 下编译 Linux 、Windows\"></a>1、MAC 下编译 Linux 、Windows</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#linux</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#windows</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name  main.go</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"2、Linux-下编译-Mac、-Windows\"><a href=\"#2、Linux-下编译-Mac、-Windows\" class=\"headerlink\" title=\"2、Linux 下编译 Mac、 Windows\"></a>2、Linux 下编译 Mac、 Windows</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Mac</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=darwin GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Windows</span></span><br><span class=\"line\"></span><br><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3、Windows-下编译-Mac-、Linux\"><a href=\"#3、Windows-下编译-Mac-、Linux\" class=\"headerlink\" title=\"3、Windows 下编译 Mac 、Linux\"></a>3、Windows 下编译 Mac 、Linux</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Mac</span></span><br><span class=\"line\"></span><br><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOOS=darwin</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\"></span><br><span class=\"line\">go build  -o name   main.go</span><br></pre></td></tr></table></figure>\n\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Linux</span></span><br><span class=\"line\"></span><br><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOOS=linux</span><br><span class=\"line\"></span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\"></span><br><span class=\"line\">go build  -o name   main.go</span><br></pre></td></tr></table></figure>"},{"title":"nodejs版本管理工具nvm的使用","date":"2023-02-16T01:48:59.000Z","_content":"\n## nodejs版本管理工具nvm的使用\n\n#### 1、什么是nvm\n\n如今的web前端开发多数大多都离不开Node，而且node更新迭代很快；不同项目依赖的node版本不同，会导致需要安装对应的node版本才能正常运行;同时维护多个版本的node将会是一件非常麻烦的事情，此时此刻我们就需要一个可以安装多个node版本并随时可以切换的版本控制工具来简化我们的工作，常用的node版本管理工具有n、nvm、nvs，这里我主要介绍nvm。\n\n<!--more-->\n\n#### 2、安装下载\n\n[nvm安装包下载地址](https://github.com/coreybutler/nvm-windows/releases)\n\n### 3、常见的使用命令\n\n```bash\n# 显示nvm版本\nnvm v\n\n# 列出本地已安装所有版本\nnvm list      \n\n# 添加可选参数available列出所有克下载版本\nnvm list available    \n\n# 安装node.js的命令 version指定版本号\nnvm install 10.22.0   \n\n# 安装最新稳定版node.js\nnvm install stable    \n\n# 卸载node.js的命令 version指定版本号\nnvm uninstall 10.22.0 \n\n# 切换到指定的node.js版本，使用此版本nodejs\nnvm use 10.22.0   \n\n# 启用node.js版本管理\nnvm on           \n\n# 关闭node.js版本管理  \nnvm off                \n```\n\n","source":"_posts/4.nodejs版本管理工具nvm的使用.md","raw":"---\ntitle: nodejs版本管理工具nvm的使用\ndate: 2023-02-16 09:48:59\ntags:\n- nodejs\n- nvm\n- 版本管理\ncategories:\n- JavaScript\n- 工具使用\n---\n\n## nodejs版本管理工具nvm的使用\n\n#### 1、什么是nvm\n\n如今的web前端开发多数大多都离不开Node，而且node更新迭代很快；不同项目依赖的node版本不同，会导致需要安装对应的node版本才能正常运行;同时维护多个版本的node将会是一件非常麻烦的事情，此时此刻我们就需要一个可以安装多个node版本并随时可以切换的版本控制工具来简化我们的工作，常用的node版本管理工具有n、nvm、nvs，这里我主要介绍nvm。\n\n<!--more-->\n\n#### 2、安装下载\n\n[nvm安装包下载地址](https://github.com/coreybutler/nvm-windows/releases)\n\n### 3、常见的使用命令\n\n```bash\n# 显示nvm版本\nnvm v\n\n# 列出本地已安装所有版本\nnvm list      \n\n# 添加可选参数available列出所有克下载版本\nnvm list available    \n\n# 安装node.js的命令 version指定版本号\nnvm install 10.22.0   \n\n# 安装最新稳定版node.js\nnvm install stable    \n\n# 卸载node.js的命令 version指定版本号\nnvm uninstall 10.22.0 \n\n# 切换到指定的node.js版本，使用此版本nodejs\nnvm use 10.22.0   \n\n# 启用node.js版本管理\nnvm on           \n\n# 关闭node.js版本管理  \nnvm off                \n```\n\n","slug":"4.nodejs版本管理工具nvm的使用","published":1,"updated":"2023-02-16T10:23:10.082Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfrxyv1n000f2cfv8rfabzaf","content":"<h2 id=\"nodejs版本管理工具nvm的使用\"><a href=\"#nodejs版本管理工具nvm的使用\" class=\"headerlink\" title=\"nodejs版本管理工具nvm的使用\"></a>nodejs版本管理工具nvm的使用</h2><h4 id=\"1、什么是nvm\"><a href=\"#1、什么是nvm\" class=\"headerlink\" title=\"1、什么是nvm\"></a>1、什么是nvm</h4><p>如今的web前端开发多数大多都离不开Node，而且node更新迭代很快；不同项目依赖的node版本不同，会导致需要安装对应的node版本才能正常运行;同时维护多个版本的node将会是一件非常麻烦的事情，此时此刻我们就需要一个可以安装多个node版本并随时可以切换的版本控制工具来简化我们的工作，常用的node版本管理工具有n、nvm、nvs，这里我主要介绍nvm。</p>\n<span id=\"more\"></span>\n\n<h4 id=\"2、安装下载\"><a href=\"#2、安装下载\" class=\"headerlink\" title=\"2、安装下载\"></a>2、安装下载</h4><p><a href=\"https://github.com/coreybutler/nvm-windows/releases\">nvm安装包下载地址</a></p>\n<h3 id=\"3、常见的使用命令\"><a href=\"#3、常见的使用命令\" class=\"headerlink\" title=\"3、常见的使用命令\"></a>3、常见的使用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示nvm版本</span></span><br><span class=\"line\">nvm v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出本地已安装所有版本</span></span><br><span class=\"line\">nvm list      </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加可选参数available列出所有克下载版本</span></span><br><span class=\"line\">nvm list available    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装node.js的命令 version指定版本号</span></span><br><span class=\"line\">nvm install 10.22.0   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装最新稳定版node.js</span></span><br><span class=\"line\">nvm install stable    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 卸载node.js的命令 version指定版本号</span></span><br><span class=\"line\">nvm uninstall 10.22.0 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换到指定的node.js版本，使用此版本nodejs</span></span><br><span class=\"line\">nvm use 10.22.0   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启用node.js版本管理</span></span><br><span class=\"line\">nvm on           </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭node.js版本管理  </span></span><br><span class=\"line\">nvm off                </span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h2 id=\"nodejs版本管理工具nvm的使用\"><a href=\"#nodejs版本管理工具nvm的使用\" class=\"headerlink\" title=\"nodejs版本管理工具nvm的使用\"></a>nodejs版本管理工具nvm的使用</h2><h4 id=\"1、什么是nvm\"><a href=\"#1、什么是nvm\" class=\"headerlink\" title=\"1、什么是nvm\"></a>1、什么是nvm</h4><p>如今的web前端开发多数大多都离不开Node，而且node更新迭代很快；不同项目依赖的node版本不同，会导致需要安装对应的node版本才能正常运行;同时维护多个版本的node将会是一件非常麻烦的事情，此时此刻我们就需要一个可以安装多个node版本并随时可以切换的版本控制工具来简化我们的工作，常用的node版本管理工具有n、nvm、nvs，这里我主要介绍nvm。</p>","more":"<h4 id=\"2、安装下载\"><a href=\"#2、安装下载\" class=\"headerlink\" title=\"2、安装下载\"></a>2、安装下载</h4><p><a href=\"https://github.com/coreybutler/nvm-windows/releases\">nvm安装包下载地址</a></p>\n<h3 id=\"3、常见的使用命令\"><a href=\"#3、常见的使用命令\" class=\"headerlink\" title=\"3、常见的使用命令\"></a>3、常见的使用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示nvm版本</span></span><br><span class=\"line\">nvm v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出本地已安装所有版本</span></span><br><span class=\"line\">nvm list      </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加可选参数available列出所有克下载版本</span></span><br><span class=\"line\">nvm list available    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装node.js的命令 version指定版本号</span></span><br><span class=\"line\">nvm install 10.22.0   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装最新稳定版node.js</span></span><br><span class=\"line\">nvm install stable    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 卸载node.js的命令 version指定版本号</span></span><br><span class=\"line\">nvm uninstall 10.22.0 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换到指定的node.js版本，使用此版本nodejs</span></span><br><span class=\"line\">nvm use 10.22.0   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启用node.js版本管理</span></span><br><span class=\"line\">nvm on           </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭node.js版本管理  </span></span><br><span class=\"line\">nvm off                </span><br></pre></td></tr></table></figure>"},{"title":"dd大牛的《背包九讲》","date":"2023-02-25T13:47:59.000Z","_content":"\n# dd大牛的《背包九讲》\n\n## 1.01背包问题\n\n### 1.1.题目\n\n有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 1.2.基本思路\n\n这是最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。\n\n用子问题定义状态：即`f[i][v]`表示前i件物品恰放入一个容量为v的背包可以获得的最大价值。则其状态转移方程便是：\n\n`f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}`。\n\n<!--more-->\n\n这个方程非常重要，基本上所有跟背包相关的问题的方程都是由它衍生出来的。所以有必要将它详细解释一下：“将前i件物品放入容量为v的背包中”这个子问题，若只考虑第i件物品的策略（放或不放），那么就可以转化为一个只牵扯前i-1件物品的问题。如果不放第i件物品，那么问题就转化为“前i-1件物品放入容量为v的背包中”；如果放第i件物品，那么问题就转化为“前i-1件物品放入剩下的容量为`v-c[i]`的背包中”，此时能获得的最大价值就是`f [i-1][v-c[i]]`再加上通过放入第i件物品获得的价值w[i]。\n\n注意`f[i][v]`有意义当且仅当存在一个前i件物品的子集，其费用总和为v。所以按照这个方程递推完毕后，最终的答案并不一定是`f[N] [V]`，而是`f[N][0..V]`的最大值。如果将状态的定义中的“恰”字去掉，在转移方程中就要再加入一项`f[i][v-1]`，这样就可以保证f[N] [V]就是最后的答案。至于为什么这样就可以，由你自己来体会了。\n\n### 1.3.优化空间复杂度\n\n以上方法的时间和空间复杂度均为O(N*V)，其中时间复杂度基本已经不能再优化了，但空间复杂度却可以优化到O(V)。\n\n先考虑上面讲的基本思路如何实现，肯定是有一个主循环i=1..N，每次算出来二维数组`f[i][0..V]`的所有值。那么，如果只用一个数组f [0..V]，能不能保证第i次循环结束后f[v]中表示的就是我们定义的状态`f[i][v]`呢？`f[i][v]`是由`f[i-1][v]`和f[i-1] [v-c[i]]两个子问题递推而来，能否保证在推`f[i][v]`时（也即在第i次主循环中推f[v]时）能够得到`f[i-1][v]`和`f[i-1][v -c[i]]`的值呢？事实上，这要求在每次主循环中我们以v=V..0的顺序推f[v]，这样才能保证推f[v]时f[v-c[i]]保存的是状态`f[i -1][v-c[i]]`的值。伪代码如下：\n\n```go\nfor i=1..N\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n其中的f[v]=max{f[v],f[v-c[i]]}一句恰就相当于我们的转移方程`f[i][v]=max{f[i-1][v],f[i- 1][v-c[i]]}`，因为现在的f[v-c[i]]就相当于原来的`f[i-1][v-c[i]]`。如果将v的循环顺序从上面的逆序改成顺序的话，那么则成了`f[i][v]`由`f[i][v-c[i]]`推知，与本题意不符，但它却是另一个重要的背包问题P02最简捷的解决方案，故学习只用一维数组解01背包问题是十分必要的。\n\n### 1.4.总结\n\n01背包问题是最基本的背包问题，它包含了背包问题中设计状态、方程的最基本思想，另外，别的类型的背包问题往往也可以转换成01背包问题求解。故一定要仔细体会上面基本思路的得出方法，状态转移方程的意义，以及最后怎样优化的空间复杂度。\n\n## 2. 完全背包问题\n\n### 2.1.题目\n\n有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 2.2.基本思路\n\n这个问题非常类似于01背包问题，所不同的是每种物品有无限件。也就是从每种物品的角度考虑，与它相关的策略已并非取或不取两种，而是有取0件、取1件、取2件……等很多种。如果仍然按照解01背包时的思路，令`f[i][v]`表示前i种物品恰放入一个容量为v的背包的最大权值。仍然可以按照每种物品不同的策略写出状态转移方程，像这样：`f[i][v]=max{f[i-1][v-k*c[i]]+k*w[i]|0<=k*c[i]<= v}`。这跟01背包问题一样有`O(N*V)`个状态需要求解，但求解每个状态的时间则不是常数了，求解状态`f[i][v]`的时间是O(v/c[i])，总的复杂度是超过`O(VN)`的。\n\n将01背包问题的基本思路加以改进，得到了这样一个清晰的方法。这说明01背包问题的方程的确是很重要，可以推及其它类型的背包问题。但我们还是试图改进这个复杂度。\n\n### 2.3.一个简单有效的优化\n\n完全背包问题有一个很简单有效的优化，是这样的：若两件物品i、j满足`c[i]<=c[j]`且`w[i]>=w[j]`，则将物品j去掉，不用考虑。这个优化的正确性显然：任何情况下都可将价值小费用高得j换成物美价廉的i，得到至少不会更差的方案。对于随机生成的数据，这个方法往往会大大减少物品的件数，从而加快速度。然而这个并不能改善最坏情况的复杂度，因为有可能特别设计的数据可以一件物品也去不掉。\n\n转化为01背包问题求解\n既然01背包问题是最基本的背包问题，那么我们可以考虑把完全背包问题转化为01背包问题来解。最简单的想法是，考虑到第i种物品最多选`V/c [i]`件，于是可以把第i种物品转化为`V/c[i]`件费用及价值均不变的物品，然后求解这个01背包问题。这样完全没有改进基本思路的时间复杂度，但这毕竟给了我们将完全背包问题转化为01背包问题的思路：将一种物品拆成多件物品。\n\n更高效的转化方法是：把第i种物品拆成费用为`c[i]*2^k`、价值为`w[i]*2^k`的若干件物品，其中k满足`c[i]*2^k<V`。这是二进制的思想，因为不管最优策略选几件第i种物品，总可以表示成若干个`2^k`件物品的和。这样把每种物品拆成`O(log(V/c[i]))`件物品，是一个很大的改进。但我们有更优的`O(VN)`的算法。` * O(VN)`的算法这个算法使用一维数组，先看伪代码：\n\n```go\nfor i=1..N \nfor v=0..V \nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n你会发现，这个伪代码与01背包问题的伪代码只有v的循环次序不同而已。为什么这样一改就可行呢？首先想想为什么01背包问题中要按照v=V..0的逆序来循环。这是因为要保证第i次循环中的状态`f[i][v]`是由状态`f[i-1][v-c[i]]`递推而来。换句话说，这正是为了保证每件物品只选一次，保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果`f[i-1][v-c[i]]`。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果`f[i][v-c[i]]`，所以就可以并且必须采用v= 0..V的顺序循环。这就是这个简单的程序为何成立的道理。\n\n这个算法也可以以另外的思路得出。例如，基本思路中的状态转移方程可以等价地变形成这种形式：`f[i][v]=max{f[i-1][v],f[i][v-c[i]]+w[i]}`，将这个方程用一维数组实现，便得到了上面的伪代码。\n\n### 2.4.总结\n\n完全背包问题也是一个相当基础的背包问题，它有两个状态转移方程，分别在“基本思路”以及“`O(VN)`的算法“的小节中给出。希望你能够对这两个状态转移方程都仔细地体会，不仅记住，也要弄明白它们是怎么得出来的，最好能够自己想一种得到这些方程的方法。事实上，对每一道动态规划题目都思考其方程的意义以及如何得来，是加深对动态规划的理解、提高动态规划功力的好方法。\n\n## 3.多重背包问题\n\n### 3.1.题目\n\n有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 3.2.基本算法\n\n这题目和完全背包问题很类似。基本的方程只需将完全背包问题的方程略微一改即可，因为对于第i种物品有n[i]+1种策略：取0件，取1件……取 n[i]件。令`f[i][v]`表示前i种物品恰放入一个容量为v的背包的最大权值，则：`f[i][v]=max{f[i-1][v-k*c[i]]+ k*w[i]|0<=k<=n[i]}`。复杂度是`O(V*∑n[i])`。\n\n转化为01背包问题\n另一种好想好写的基本方法是转化为01背包求解：把第i种物品换成n[i]件01背包中的物品，则得到了物品数为`∑n[i]`的01背包问题，直接求解，复杂度仍然是`O(V*∑n[i])`。\n\n但是我们期望将它转化为01背包问题之后能够像完全背包一样降低复杂度。仍然考虑二进制的思想，我们考虑把第i种物品换成若干件物品，使得原问题中第i种物品可取的每种策略——取0..n[i]件——均能等价于取若干件代换以后的物品。另外，取超过n[i]件的策略必不能出现。\n\n方法是：将第i种物品分成若干件物品，其中每件物品有一个系数，这件物品的费用和价值均是原来的费用和价值乘以这个系数。使这些系数分别为 `1,2,4,...,2^(k-1)`,`n[i]-2^k+1`，且k是满足`n[i]-2^k+1>0`的最大整数。例如，如果n[i]为13，就将这种物品分成系数分别为1,2,4,6的四件物品。\n\n分成的这几件物品的系数和为n[i]，表明不可能取多于n[i]件的第i种物品。另外这种方法也能保证对于`0..n[i]`间的每一个整数，均可以用若干个系数的和表示，这个证明可以分`0..2^k-1`和`2^k..n[i]`两段来分别讨论得出，并不难，希望你自己思考尝试一下。\n\n这样就将第i种物品分成了`O(log n[i])`种物品，将原问题转化为了复杂度为`O(V*∑log n[i])`的01背包问题，是很大的改进。\n\n### 3.3.`O(VN)`的算法\n\n多重背包问题同样有`O(VN)`的算法。这个算法基于基本算法的状态转移方程，但应用单调队列的方法使每个状态的值可以以均摊O(1)的时间求解。由于用单调队列优化的DP已超出了`NOIP`的范围，故本文不再展开讲解。我最初了解到这个方法是在楼天成的“男人八题”幻灯片上。\n\n### 3.4.小结\n\n这里我们看到了将一个算法的复杂度由`O(V*∑n[i])`改进到`O(V*∑log n[i])`的过程，还知道了存在应用超出`NOIP`范围的知识的`O(VN)`算法。希望你特别注意“拆分物品”的思想和方法，自己证明一下它的正确性，并用尽量简洁的程序来实现。\n\n## 4.混合三种背包问题\n\n### 4.1.问题\n\n如果将P01、P02、P03混合起来。也就是说，有的物品只可以取一次（01背包），有的物品可以取无限次（完全背包），有的物品可以取的次数有一个上限（多重背包）。应该怎么求解呢？\n\n### 4.2.01背包与完全背包的混合\n\n考虑到在P01和P02中最后给出的伪代码只有一处不同，故如果只有两类物品：一类物品只能取一次，另一类物品可以取无限次，那么只需在对每个物品应用转移方程时，根据物品的类别选用顺序或逆序的循环即可，复杂度是`O(VN)`。伪代码如下：\n\n```go\n\nfor i=1..N\nif 第i件物品是01背包\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]};\nelse if 第i件物品是完全背包\nfor v=0..V\nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n### 4.3.再加上多重背包\n\n如果再加上有的物品最多可以取有限次，那么原则上也可以给出`O(VN)`的解法：遇到多重背包类型的物品用单调队列解即可。但如果不考虑超过NOIP范围的算法的话，用P03中将每个这类物品分成O(log n[i])个01背包的物品的方法也已经很优了。\n\n### 4.4.小结\n\n有人说，困难的题目都是由简单的题目叠加而来的。这句话是否公理暂且存之不论，但它在本讲中已经得到了充分的体现。本来01背包、完全背包、多重背包都不是什么难题，但将它们简单地组合起来以后就得到了这样一道一定能吓倒不少人的题目。但只要基础扎实，领会三种基本背包问题的思想，就可以做到把困难的题目拆分成简单的题目来解决。\n\n## 5.二维费用的背包问题\n\n### 5.1.问题\n\n二维费用的背包问题是指：对于每件物品，具有两种不同的费用；选择这件物品必须同时付出这两种代价；对于每种代价都有一个可付出的最大值（背包容量）。问怎样选择物品可以得到最大的价值。设这两种代价分别为代价1和代价2，第i件物品所需的两种代价分别为a[i]和b[i]。两种代价可付出的最大值（两种背包容量）分别为V和U。物品的价值为w[i]。\n\n### 5.2.算法\n\n费用加了一维，只需状态也加一维即可。设`f[i][v][u]`表示前i件物品付出两种代价分别为v和u时可获得的最大价值。状态转移方程就是：`f [i][v][u]=max{f[i-1][v][u],f[i-1][v-a[i]][u-b[i]]+w[i]}`。如前述方法，可以只使用二维的数组：当每件物品只可以取一次时变量v和u采用顺序的循环，当物品有如完全背包问题时采用逆序的循环。当物品有如多重背包问题时拆分物品。\n\n### 5.3.物品总个数的限制\n\n有时，“二维费用”的条件是以这样一种隐含的方式给出的：最多只能取M件物品。这事实上相当于每件物品多了一种“件数”的费用，每个物品的件数费用均为1，可以付出的最大件数费用为M。换句话说，设`f[v][m]`表示付出费用v、最多选m件时可得到的最大价值，则根据物品的类型（01、完全、多重）用不同的方法循环更新，最后在`f[0..V`][0..M]范围内寻找答案。\n\n另外，如果要求“恰取M件物品”，则在`f[0..V][M]`范围内寻找答案。\n\n### 5.4.小结\n\n事实上，当发现由熟悉的动态规划题目变形得来的题目时，在原来的状态中加一纬以满足新的限制是一种比较通用的方法。希望你能从本讲中初步体会到这种方法。\n\n## 6.分组的背包问题\n\n### 6.1.问题\n\n有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。这些物品被划分为若干组，每组中的物品互相冲突，最多选一件。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 6.2.算法\n\n这个问题变成了每组物品有若干种策略：是选择本组的某一件，还是一件都不选。也就是说设`f[k`][v]表示前k组物品花费费用v能取得的最大权值，则有`f[k][v]=max{f[k-1][v],f[k-1][v-c[i]]+w[i]|`物品i属于第k组}。\n\n使用一维数组的伪代码如下：\n\n```go\nfor 所有的组k\nfor 所有的i属于组k\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]}\n```\n\n\n\n另外，显然可以对每组中的物品应用P02中“一个简单有效的优化”。\n\n### 6.3.小结\n\n分组的背包问题将彼此互斥的若干物品称为一个组，这建立了一个很好的模型。不少背包问题的变形都可以转化为分组的背包问题（例如P07），由分组的背包问题进一步可定义“泛化物品”的概念，十分有利于解题。 \n\n## 7.有依赖的背包问题\n\n### 7.1.简化的问题\n\n这种背包问题的物品间存在某种“依赖”的关系。也就是说，i依赖于j，表示若选物品i，则必须选物品j。为了简化起见，我们先设没有某个物品既依赖于别的物品，又被别的物品所依赖；另外，没有某件物品同时依赖多件物品。\n\n### 7.2.算法\n\n这个问题由NOIP2006金明的预算方案一题扩展而来。遵从该题的提法，将不依赖于别的物品的物品称为“主件”，依赖于某主件的物品称为“附件”。由这个问题的简化条件可知所有的物品由若干主件和依赖于每个主件的一个附件集合组成。\n\n按照背包问题的一般思路，仅考虑一个主件和它的附件集合。可是，可用的策略非常多，包括：一个也不选，仅选择主件，选择主件后再选择一个附件，选择主件后再选择两个附件……无法用状态转移方程来表示如此多的策略。（事实上，设有n个附件，则策略有2^n+1个，为指数级。）\n\n考虑到所有这些策略都是互斥的（也就是说，你只能选择一种策略），所以一个主件和它的附件集合实际上对应于P06中的一个物品组，每个选择了主件又选择了若干个附件的策略对应于这个物品组中的一个物品，其费用和价值都是这个策略中的物品的值的和。但仅仅是这一步转化并不能给出一个好的算法，因为物品组中的物品还是像原问题的策略一样多。\n\n再考虑P06中的一句话：可以对每组中的物品应用P02中“一个简单有效的优化”。这提示我们，对于一个物品组中的物品，所有费用相同的物品只留一个价值最大的，不影响结果。所以，我们可以对主件i的“附件集合”先进行一次01背包，得到费用依次为0..V-c[i]所有这些值时相应的最大价值f'[0..V-c[i]]。那么这个主件及它的附件集合相当于V-c[i]+1个物品的物品组，其中费用为c[i]+k的物品的价值为f'[k]+w[i]。也就是说原来指数级的策略中有很多策略都是冗余的，通过一次01背包后，将主件i转化为 V-c[i]+1个物品的物品组，就可以直接应用P06的算法解决问题了。\n\n### 7.3.更一般的问题\n\n更一般的问题是：依赖关系以图论中“森林”的形式给出（森林即多叉树的集合），也就是说，主件的附件仍然可以具有自己的附件集合，限制只是每个物品最多只依赖于一个物品（只有一个主件）且不出现循环依赖。\n\n解决这个问题仍然可以用将每个主件及其附件集合转化为物品组的方式。唯一不同的是，由于附件可能还有附件，就不能将每个附件都看作一个一般的01 背包中的物品了。若这个附件也有附件集合，则它必定要被先转化为物品组，然后用分组的背包问题解出主件及其附件集合所对应的附件组中各个费用的附件所对应的价值。\n\n事实上，这是一种树形DP，其特点是每个父节点都需要对它的各个儿子的属性进行一次DP以求得自己的相关属性。这已经触及到了“泛化物品”的思想。看完P08后，你会发现这个“依赖关系树”每一个子树都等价于一件泛化物品，求某节点为根的子树对应的泛化物品相当于求其所有儿子的对应的泛化物品之和。\n\n### 7.4.小结\n\nNOIP2006的那道背包问题我做得很失败，写了上百行的代码，却一分未得。后来我通过思考发现通过引入“物品组”和“依赖”的概念可以加深对这题的理解，还可以解决它的推广问题。用物品组的思想考虑那题中极其特殊的依赖关系：物品不能既作主件又作附件，每个主件最多有两个附件，可以发现一个主件和它的两个附件等价于一个由四个物品组成的物品组，这便揭示了问题的某种本质。\n\n我想说：失败不是什么丢人的事情，从失败中全无收获才是。\n\n## 8.泛化物品\n\n### 8.1.定义\n\n考虑这样一种物品，它并没有固定的费用和价值，而是它的价值随着你分配给它的费用而变化。这就是泛化物品的概念。\n\n更严格的定义之。在背包容量为V的背包问题中，泛化物品是一个定义域为0..V中的整数的函数h，当分配给它的费用为v时，能得到的价值就是h(v)。\n\n这个定义有一点点抽象，另一种理解是一个泛化物品就是一个数组h[0..V]，给它费用v，可得到价值h[V]。\n\n一个费用为c价值为w的物品，如果它是01背包中的物品，那么把它看成泛化物品，它就是除了h(c)=w其它函数值都为0的一个函数。如果它是完全背包中的物品，那么它可以看成这样一个函数，仅当v被c整除时有h(v)=v/c*w，其它函数值均为0。如果它是多重背包中重复次数最多为n的物品，那么它对应的泛化物品的函数有h(v)=v/c*w仅当v被c整除且v/c<=n，其它情况函数值均为0。\n\n一个物品组可以看作一个泛化物品h。对于一个0..V中的v，若物品组中不存在费用为v的的物品，则h(v)=0，否则h(v)为所有费用为v的物品的最大价值。P07中每个主件及其附件集合等价于一个物品组，自然也可看作一个泛化物品。\n\n### 8.2.泛化物品的和\n\n如果面对两个泛化物品h和l，要用给定的费用从这两个泛化物品中得到最大的价值，怎么求呢？事实上，对于一个给定的费用v，只需枚举将这个费用如何分配给两个泛化物品就可以了。同样的，对于0..V的每一个整数v，可以求得费用v分配到h和l中的最大价值f(v)。也即`f(v)=max{h(k) +l(v-k)|0<=k<=v}`。可以看到，f也是一个由泛化物品h和l决定的定义域为0..V的函数，也就是说，f是一个由泛化物品h和 l决定的泛化物品。\n\n由此可以定义泛化物品的和：h、l都是泛化物品，若泛化物品f满足`f(v)=max{h(k)+l(v-k)|0<=k<=v}`，则称f是h与l的和，即f=h+l。这个运算的时间复杂度是O(V^2)。\n\n泛化物品的定义表明：在一个背包问题中，若将两个泛化物品代以它们的和，不影响问题的答案。事实上，对于其中的物品都是泛化物品的背包问题，求它的答案的过程也就是求所有这些泛化物品之和的过程。设此和为s，则答案就是s[0..V]中的最大值。\n\n### 8.3.背包问题的泛化物品\n\n一个背包问题中，可能会给出很多条件，包括每种物品的费用、价值等属性，物品之间的分组、依赖等关系等。但肯定能将问题对应于某个泛化物品。也就是说，给定了所有条件以后，就可以对每个非负整数v求得：若背包容量为v，将物品装入背包可得到的最大价值是多少，这可以认为是定义在非负整数集上的一件泛化物品。这个泛化物品——或者说问题所对应的一个定义域为非负整数的函数——包含了关于问题本身的高度浓缩的信息。一般而言，求得这个泛化物品的一个子域（例如0..V）的值之后，就可以根据这个函数的取值得到背包问题的最终答案。\n\n综上所述，一般而言，求解背包问题，即求解这个问题所对应的一个函数，即该问题的泛化物品。而求解某个泛化物品的一种方法就是将它表示为若干泛化物品的和然后求之。\n\n### 8.4.小结\n\n本讲可以说都是我自己的原创思想。具体来说，是我在学习函数式编程的 Scheme 语言时，用函数编程的眼光审视各类背包问题得出的理论。这一讲真的很抽象，也许在“模型的抽象程度”这一方面已经超出了NOIP的要求，所以暂且看不懂也没关系。相信随着你的OI之路逐渐延伸，有一天你会理解的。\n\n我想说：“思考”是一个`OIer`最重要的品质。简单的问题，深入思考以后，也能发现更多。\n\n## 9.背包问题问法的变化\n\n以上涉及的各种背包问题都是要求在背包容量（费用）的限制下求可以取到的最大价值，但背包问题还有很多种灵活的问法，在这里值得提一下。但是我认为，只要深入理解了求背包问题最大价值的方法，即使问法变化了，也是不难想出算法的。\n\n例如，求解最多可以放多少件物品或者最多可以装满多少背包的空间。这都可以根据具体问题利用前面的方程求出所有状态的值（f数组）之后得到。\n\n还有，如果要求的是“总价值最小”“总件数最小”，只需简单的将上面的状态转移方程中的max改成min即可。\n\n下面说一些变化更大的问法。\n\n### 9.1.输出方案\n\n一般而言，背包问题是要求一个最优值，如果要求输出这个最优值的方案，可以参照一般动态规划问题输出方案的方法：记录下每个状态的最优值是由状态转移方程的哪一项推出来的，换句话说，记录下它是由哪一个策略推出来的。便可根据这条策略找到上一个状态，从上一个状态接着向前推即可。\n\n还是以01背包为例，方程为`f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}`。再用一个数组g[i] [v]，设`g[i][v]=0`表示推出`f[i`][v]的值时是采用了方程的前一项（也即`f[i][v]=f[i-1][v]`），`g[i][v]`表示采用了方程的后一项。注意这两项分别表示了两种策略：未选第i个物品及选了第i个物品。那么输出方案的伪代码可以这样写（设最终状态为`f[N`][V]）：\n\n```go\ni=N\nv=V\nwhile(i>0)\nif(g[i][v]==0)\nprint \"未选第i项物品\"\nelse if(g[i][v]==1)\nprint \"选了第i项物品\"\nv=v-c[i]\n```\n\n另外，采用方程的前一项或后一项也可以在输出方案的过程中根据f[i][v]的值实时地求出来，也即不须纪录g数组，将上述代码中的`g[i] [v]==0`改成`f[i][v]==f[i-1][v]`，`g[i][v]==1`改成`f[i][v]==f[i-1][v-c[i]]+w[i]`也可。\n\n### 9.2.输出字典序最小的最优方案\n\n这里“字典序最小”的意思是1..N号物品的选择方案排列出来以后字典序最小。以输出01背包最小字典序的方案为例。\n\n一般而言，求一个字典序最小的最优方案，只需要在转移时注意策略。首先，子问题的定义要略改一些。我们注意到，如果存在一个选了物品1的最优方案，那么答案一定包含物品1，原问题转化为一个背包容量为v-c[1]，物品为2..N的子问题。反之，如果答案不包含物品1，则转化成背包容量仍为V，物品为2..N的子问题。不管答案怎样，子问题的物品都是以i..N而非前所述的1..i的形式来定义的，所以状态的定义和转移方程都需要改一下。但也许更简易的方法是先把物品逆序排列一下，以下按物品已被逆序排列来叙述。\n\n在这种情况下，可以按照前面经典的状态转移方程来求值，只是输出方案的时候要注意：从N到1输入时，如果`f[i][v]==f[i-v]`及`f[i][v]==f[i-1][f-c[i]]+w[i]`同时成立，应该按照后者（即选择了物品i）来输出方案。\n\n求方案总数\n对于一个给定了背包容量、物品费用、物品间相互关系（分组、依赖等）的背包问题，除了再给定每个物品的价值后求可得到的最大价值外，还可以得到装满背包或将背包装至某一指定容量的方案总数。\n\n对于这类改变问法的问题，一般只需将状态转移方程中的max改成sum即可。例如若每件物品均是01背包中的物品，转移方程即为`f[i][v]=sum{f[i-1][v],f[i-1][v-c[i]]+w[i]}`，初始条件`f[0][0]=1`。\n\n事实上，这样做可行的原因在于状态转移方程已经考察了所有可能的背包组成方案。\n\n### 9.3.最优方案的总数\n\n这里的最优方案是指物品总价值最大的方案。还是以01背包为例。\n\n结合求最大总价值和方案总数两个问题的思路，最优方案的总数可以这样求：f[i][v]意义同前述，g[i][v]表示这个子问题的最优方案的总数，则在求f[i][v]的同时求g[i][v]的伪代码如下：\n\n```go\nfor i=1..N\nfor v=0..V\nf[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}\ng[i][v]=0\nif(f[i][v]==f[i-1][v])\ninc(g[i][v],g[i-1][v]\nif(f[i][v]==f[i-1][v-c[i]]+w[i])\ninc(g[i][v],g[i-1][v-c[i]])\n```\n\n如果你是第一次看到这样的问题，请仔细体会上面的伪代码。\n\n### 9.4.小结\n\n显然，这里不可能穷尽背包类动态规划问题所有的问法。甚至还存在一类将背包类动态规划问题与其它领域（例如数论、图论）结合起来的问题，在这篇论背包问题的专文中也不会论及。但只要深刻领会前述所有类别的背包问题的思路和状态转移方程，遇到其它的变形问法，只要题目难度还属于NOIP，应该也不难想出算法。\n\n触类旁通、举一反三，应该也是一个OIer应有的品质吧。\n","source":"_posts/7.dd大牛的《背包九讲》.md","raw":"---\ntitle: dd大牛的《背包九讲》\ndate: 2023-02-25 21:47:59\ntags:\n- 背包九讲\n- 算法\ncategories:\n- 技术\n---\n\n# dd大牛的《背包九讲》\n\n## 1.01背包问题\n\n### 1.1.题目\n\n有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 1.2.基本思路\n\n这是最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。\n\n用子问题定义状态：即`f[i][v]`表示前i件物品恰放入一个容量为v的背包可以获得的最大价值。则其状态转移方程便是：\n\n`f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}`。\n\n<!--more-->\n\n这个方程非常重要，基本上所有跟背包相关的问题的方程都是由它衍生出来的。所以有必要将它详细解释一下：“将前i件物品放入容量为v的背包中”这个子问题，若只考虑第i件物品的策略（放或不放），那么就可以转化为一个只牵扯前i-1件物品的问题。如果不放第i件物品，那么问题就转化为“前i-1件物品放入容量为v的背包中”；如果放第i件物品，那么问题就转化为“前i-1件物品放入剩下的容量为`v-c[i]`的背包中”，此时能获得的最大价值就是`f [i-1][v-c[i]]`再加上通过放入第i件物品获得的价值w[i]。\n\n注意`f[i][v]`有意义当且仅当存在一个前i件物品的子集，其费用总和为v。所以按照这个方程递推完毕后，最终的答案并不一定是`f[N] [V]`，而是`f[N][0..V]`的最大值。如果将状态的定义中的“恰”字去掉，在转移方程中就要再加入一项`f[i][v-1]`，这样就可以保证f[N] [V]就是最后的答案。至于为什么这样就可以，由你自己来体会了。\n\n### 1.3.优化空间复杂度\n\n以上方法的时间和空间复杂度均为O(N*V)，其中时间复杂度基本已经不能再优化了，但空间复杂度却可以优化到O(V)。\n\n先考虑上面讲的基本思路如何实现，肯定是有一个主循环i=1..N，每次算出来二维数组`f[i][0..V]`的所有值。那么，如果只用一个数组f [0..V]，能不能保证第i次循环结束后f[v]中表示的就是我们定义的状态`f[i][v]`呢？`f[i][v]`是由`f[i-1][v]`和f[i-1] [v-c[i]]两个子问题递推而来，能否保证在推`f[i][v]`时（也即在第i次主循环中推f[v]时）能够得到`f[i-1][v]`和`f[i-1][v -c[i]]`的值呢？事实上，这要求在每次主循环中我们以v=V..0的顺序推f[v]，这样才能保证推f[v]时f[v-c[i]]保存的是状态`f[i -1][v-c[i]]`的值。伪代码如下：\n\n```go\nfor i=1..N\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n其中的f[v]=max{f[v],f[v-c[i]]}一句恰就相当于我们的转移方程`f[i][v]=max{f[i-1][v],f[i- 1][v-c[i]]}`，因为现在的f[v-c[i]]就相当于原来的`f[i-1][v-c[i]]`。如果将v的循环顺序从上面的逆序改成顺序的话，那么则成了`f[i][v]`由`f[i][v-c[i]]`推知，与本题意不符，但它却是另一个重要的背包问题P02最简捷的解决方案，故学习只用一维数组解01背包问题是十分必要的。\n\n### 1.4.总结\n\n01背包问题是最基本的背包问题，它包含了背包问题中设计状态、方程的最基本思想，另外，别的类型的背包问题往往也可以转换成01背包问题求解。故一定要仔细体会上面基本思路的得出方法，状态转移方程的意义，以及最后怎样优化的空间复杂度。\n\n## 2. 完全背包问题\n\n### 2.1.题目\n\n有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 2.2.基本思路\n\n这个问题非常类似于01背包问题，所不同的是每种物品有无限件。也就是从每种物品的角度考虑，与它相关的策略已并非取或不取两种，而是有取0件、取1件、取2件……等很多种。如果仍然按照解01背包时的思路，令`f[i][v]`表示前i种物品恰放入一个容量为v的背包的最大权值。仍然可以按照每种物品不同的策略写出状态转移方程，像这样：`f[i][v]=max{f[i-1][v-k*c[i]]+k*w[i]|0<=k*c[i]<= v}`。这跟01背包问题一样有`O(N*V)`个状态需要求解，但求解每个状态的时间则不是常数了，求解状态`f[i][v]`的时间是O(v/c[i])，总的复杂度是超过`O(VN)`的。\n\n将01背包问题的基本思路加以改进，得到了这样一个清晰的方法。这说明01背包问题的方程的确是很重要，可以推及其它类型的背包问题。但我们还是试图改进这个复杂度。\n\n### 2.3.一个简单有效的优化\n\n完全背包问题有一个很简单有效的优化，是这样的：若两件物品i、j满足`c[i]<=c[j]`且`w[i]>=w[j]`，则将物品j去掉，不用考虑。这个优化的正确性显然：任何情况下都可将价值小费用高得j换成物美价廉的i，得到至少不会更差的方案。对于随机生成的数据，这个方法往往会大大减少物品的件数，从而加快速度。然而这个并不能改善最坏情况的复杂度，因为有可能特别设计的数据可以一件物品也去不掉。\n\n转化为01背包问题求解\n既然01背包问题是最基本的背包问题，那么我们可以考虑把完全背包问题转化为01背包问题来解。最简单的想法是，考虑到第i种物品最多选`V/c [i]`件，于是可以把第i种物品转化为`V/c[i]`件费用及价值均不变的物品，然后求解这个01背包问题。这样完全没有改进基本思路的时间复杂度，但这毕竟给了我们将完全背包问题转化为01背包问题的思路：将一种物品拆成多件物品。\n\n更高效的转化方法是：把第i种物品拆成费用为`c[i]*2^k`、价值为`w[i]*2^k`的若干件物品，其中k满足`c[i]*2^k<V`。这是二进制的思想，因为不管最优策略选几件第i种物品，总可以表示成若干个`2^k`件物品的和。这样把每种物品拆成`O(log(V/c[i]))`件物品，是一个很大的改进。但我们有更优的`O(VN)`的算法。` * O(VN)`的算法这个算法使用一维数组，先看伪代码：\n\n```go\nfor i=1..N \nfor v=0..V \nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n你会发现，这个伪代码与01背包问题的伪代码只有v的循环次序不同而已。为什么这样一改就可行呢？首先想想为什么01背包问题中要按照v=V..0的逆序来循环。这是因为要保证第i次循环中的状态`f[i][v]`是由状态`f[i-1][v-c[i]]`递推而来。换句话说，这正是为了保证每件物品只选一次，保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果`f[i-1][v-c[i]]`。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果`f[i][v-c[i]]`，所以就可以并且必须采用v= 0..V的顺序循环。这就是这个简单的程序为何成立的道理。\n\n这个算法也可以以另外的思路得出。例如，基本思路中的状态转移方程可以等价地变形成这种形式：`f[i][v]=max{f[i-1][v],f[i][v-c[i]]+w[i]}`，将这个方程用一维数组实现，便得到了上面的伪代码。\n\n### 2.4.总结\n\n完全背包问题也是一个相当基础的背包问题，它有两个状态转移方程，分别在“基本思路”以及“`O(VN)`的算法“的小节中给出。希望你能够对这两个状态转移方程都仔细地体会，不仅记住，也要弄明白它们是怎么得出来的，最好能够自己想一种得到这些方程的方法。事实上，对每一道动态规划题目都思考其方程的意义以及如何得来，是加深对动态规划的理解、提高动态规划功力的好方法。\n\n## 3.多重背包问题\n\n### 3.1.题目\n\n有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 3.2.基本算法\n\n这题目和完全背包问题很类似。基本的方程只需将完全背包问题的方程略微一改即可，因为对于第i种物品有n[i]+1种策略：取0件，取1件……取 n[i]件。令`f[i][v]`表示前i种物品恰放入一个容量为v的背包的最大权值，则：`f[i][v]=max{f[i-1][v-k*c[i]]+ k*w[i]|0<=k<=n[i]}`。复杂度是`O(V*∑n[i])`。\n\n转化为01背包问题\n另一种好想好写的基本方法是转化为01背包求解：把第i种物品换成n[i]件01背包中的物品，则得到了物品数为`∑n[i]`的01背包问题，直接求解，复杂度仍然是`O(V*∑n[i])`。\n\n但是我们期望将它转化为01背包问题之后能够像完全背包一样降低复杂度。仍然考虑二进制的思想，我们考虑把第i种物品换成若干件物品，使得原问题中第i种物品可取的每种策略——取0..n[i]件——均能等价于取若干件代换以后的物品。另外，取超过n[i]件的策略必不能出现。\n\n方法是：将第i种物品分成若干件物品，其中每件物品有一个系数，这件物品的费用和价值均是原来的费用和价值乘以这个系数。使这些系数分别为 `1,2,4,...,2^(k-1)`,`n[i]-2^k+1`，且k是满足`n[i]-2^k+1>0`的最大整数。例如，如果n[i]为13，就将这种物品分成系数分别为1,2,4,6的四件物品。\n\n分成的这几件物品的系数和为n[i]，表明不可能取多于n[i]件的第i种物品。另外这种方法也能保证对于`0..n[i]`间的每一个整数，均可以用若干个系数的和表示，这个证明可以分`0..2^k-1`和`2^k..n[i]`两段来分别讨论得出，并不难，希望你自己思考尝试一下。\n\n这样就将第i种物品分成了`O(log n[i])`种物品，将原问题转化为了复杂度为`O(V*∑log n[i])`的01背包问题，是很大的改进。\n\n### 3.3.`O(VN)`的算法\n\n多重背包问题同样有`O(VN)`的算法。这个算法基于基本算法的状态转移方程，但应用单调队列的方法使每个状态的值可以以均摊O(1)的时间求解。由于用单调队列优化的DP已超出了`NOIP`的范围，故本文不再展开讲解。我最初了解到这个方法是在楼天成的“男人八题”幻灯片上。\n\n### 3.4.小结\n\n这里我们看到了将一个算法的复杂度由`O(V*∑n[i])`改进到`O(V*∑log n[i])`的过程，还知道了存在应用超出`NOIP`范围的知识的`O(VN)`算法。希望你特别注意“拆分物品”的思想和方法，自己证明一下它的正确性，并用尽量简洁的程序来实现。\n\n## 4.混合三种背包问题\n\n### 4.1.问题\n\n如果将P01、P02、P03混合起来。也就是说，有的物品只可以取一次（01背包），有的物品可以取无限次（完全背包），有的物品可以取的次数有一个上限（多重背包）。应该怎么求解呢？\n\n### 4.2.01背包与完全背包的混合\n\n考虑到在P01和P02中最后给出的伪代码只有一处不同，故如果只有两类物品：一类物品只能取一次，另一类物品可以取无限次，那么只需在对每个物品应用转移方程时，根据物品的类别选用顺序或逆序的循环即可，复杂度是`O(VN)`。伪代码如下：\n\n```go\n\nfor i=1..N\nif 第i件物品是01背包\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]};\nelse if 第i件物品是完全背包\nfor v=0..V\nf[v]=max{f[v],f[v-c[i]]+w[i]};\n```\n\n### 4.3.再加上多重背包\n\n如果再加上有的物品最多可以取有限次，那么原则上也可以给出`O(VN)`的解法：遇到多重背包类型的物品用单调队列解即可。但如果不考虑超过NOIP范围的算法的话，用P03中将每个这类物品分成O(log n[i])个01背包的物品的方法也已经很优了。\n\n### 4.4.小结\n\n有人说，困难的题目都是由简单的题目叠加而来的。这句话是否公理暂且存之不论，但它在本讲中已经得到了充分的体现。本来01背包、完全背包、多重背包都不是什么难题，但将它们简单地组合起来以后就得到了这样一道一定能吓倒不少人的题目。但只要基础扎实，领会三种基本背包问题的思想，就可以做到把困难的题目拆分成简单的题目来解决。\n\n## 5.二维费用的背包问题\n\n### 5.1.问题\n\n二维费用的背包问题是指：对于每件物品，具有两种不同的费用；选择这件物品必须同时付出这两种代价；对于每种代价都有一个可付出的最大值（背包容量）。问怎样选择物品可以得到最大的价值。设这两种代价分别为代价1和代价2，第i件物品所需的两种代价分别为a[i]和b[i]。两种代价可付出的最大值（两种背包容量）分别为V和U。物品的价值为w[i]。\n\n### 5.2.算法\n\n费用加了一维，只需状态也加一维即可。设`f[i][v][u]`表示前i件物品付出两种代价分别为v和u时可获得的最大价值。状态转移方程就是：`f [i][v][u]=max{f[i-1][v][u],f[i-1][v-a[i]][u-b[i]]+w[i]}`。如前述方法，可以只使用二维的数组：当每件物品只可以取一次时变量v和u采用顺序的循环，当物品有如完全背包问题时采用逆序的循环。当物品有如多重背包问题时拆分物品。\n\n### 5.3.物品总个数的限制\n\n有时，“二维费用”的条件是以这样一种隐含的方式给出的：最多只能取M件物品。这事实上相当于每件物品多了一种“件数”的费用，每个物品的件数费用均为1，可以付出的最大件数费用为M。换句话说，设`f[v][m]`表示付出费用v、最多选m件时可得到的最大价值，则根据物品的类型（01、完全、多重）用不同的方法循环更新，最后在`f[0..V`][0..M]范围内寻找答案。\n\n另外，如果要求“恰取M件物品”，则在`f[0..V][M]`范围内寻找答案。\n\n### 5.4.小结\n\n事实上，当发现由熟悉的动态规划题目变形得来的题目时，在原来的状态中加一纬以满足新的限制是一种比较通用的方法。希望你能从本讲中初步体会到这种方法。\n\n## 6.分组的背包问题\n\n### 6.1.问题\n\n有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。这些物品被划分为若干组，每组中的物品互相冲突，最多选一件。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。\n\n### 6.2.算法\n\n这个问题变成了每组物品有若干种策略：是选择本组的某一件，还是一件都不选。也就是说设`f[k`][v]表示前k组物品花费费用v能取得的最大权值，则有`f[k][v]=max{f[k-1][v],f[k-1][v-c[i]]+w[i]|`物品i属于第k组}。\n\n使用一维数组的伪代码如下：\n\n```go\nfor 所有的组k\nfor 所有的i属于组k\nfor v=V..0\nf[v]=max{f[v],f[v-c[i]]+w[i]}\n```\n\n\n\n另外，显然可以对每组中的物品应用P02中“一个简单有效的优化”。\n\n### 6.3.小结\n\n分组的背包问题将彼此互斥的若干物品称为一个组，这建立了一个很好的模型。不少背包问题的变形都可以转化为分组的背包问题（例如P07），由分组的背包问题进一步可定义“泛化物品”的概念，十分有利于解题。 \n\n## 7.有依赖的背包问题\n\n### 7.1.简化的问题\n\n这种背包问题的物品间存在某种“依赖”的关系。也就是说，i依赖于j，表示若选物品i，则必须选物品j。为了简化起见，我们先设没有某个物品既依赖于别的物品，又被别的物品所依赖；另外，没有某件物品同时依赖多件物品。\n\n### 7.2.算法\n\n这个问题由NOIP2006金明的预算方案一题扩展而来。遵从该题的提法，将不依赖于别的物品的物品称为“主件”，依赖于某主件的物品称为“附件”。由这个问题的简化条件可知所有的物品由若干主件和依赖于每个主件的一个附件集合组成。\n\n按照背包问题的一般思路，仅考虑一个主件和它的附件集合。可是，可用的策略非常多，包括：一个也不选，仅选择主件，选择主件后再选择一个附件，选择主件后再选择两个附件……无法用状态转移方程来表示如此多的策略。（事实上，设有n个附件，则策略有2^n+1个，为指数级。）\n\n考虑到所有这些策略都是互斥的（也就是说，你只能选择一种策略），所以一个主件和它的附件集合实际上对应于P06中的一个物品组，每个选择了主件又选择了若干个附件的策略对应于这个物品组中的一个物品，其费用和价值都是这个策略中的物品的值的和。但仅仅是这一步转化并不能给出一个好的算法，因为物品组中的物品还是像原问题的策略一样多。\n\n再考虑P06中的一句话：可以对每组中的物品应用P02中“一个简单有效的优化”。这提示我们，对于一个物品组中的物品，所有费用相同的物品只留一个价值最大的，不影响结果。所以，我们可以对主件i的“附件集合”先进行一次01背包，得到费用依次为0..V-c[i]所有这些值时相应的最大价值f'[0..V-c[i]]。那么这个主件及它的附件集合相当于V-c[i]+1个物品的物品组，其中费用为c[i]+k的物品的价值为f'[k]+w[i]。也就是说原来指数级的策略中有很多策略都是冗余的，通过一次01背包后，将主件i转化为 V-c[i]+1个物品的物品组，就可以直接应用P06的算法解决问题了。\n\n### 7.3.更一般的问题\n\n更一般的问题是：依赖关系以图论中“森林”的形式给出（森林即多叉树的集合），也就是说，主件的附件仍然可以具有自己的附件集合，限制只是每个物品最多只依赖于一个物品（只有一个主件）且不出现循环依赖。\n\n解决这个问题仍然可以用将每个主件及其附件集合转化为物品组的方式。唯一不同的是，由于附件可能还有附件，就不能将每个附件都看作一个一般的01 背包中的物品了。若这个附件也有附件集合，则它必定要被先转化为物品组，然后用分组的背包问题解出主件及其附件集合所对应的附件组中各个费用的附件所对应的价值。\n\n事实上，这是一种树形DP，其特点是每个父节点都需要对它的各个儿子的属性进行一次DP以求得自己的相关属性。这已经触及到了“泛化物品”的思想。看完P08后，你会发现这个“依赖关系树”每一个子树都等价于一件泛化物品，求某节点为根的子树对应的泛化物品相当于求其所有儿子的对应的泛化物品之和。\n\n### 7.4.小结\n\nNOIP2006的那道背包问题我做得很失败，写了上百行的代码，却一分未得。后来我通过思考发现通过引入“物品组”和“依赖”的概念可以加深对这题的理解，还可以解决它的推广问题。用物品组的思想考虑那题中极其特殊的依赖关系：物品不能既作主件又作附件，每个主件最多有两个附件，可以发现一个主件和它的两个附件等价于一个由四个物品组成的物品组，这便揭示了问题的某种本质。\n\n我想说：失败不是什么丢人的事情，从失败中全无收获才是。\n\n## 8.泛化物品\n\n### 8.1.定义\n\n考虑这样一种物品，它并没有固定的费用和价值，而是它的价值随着你分配给它的费用而变化。这就是泛化物品的概念。\n\n更严格的定义之。在背包容量为V的背包问题中，泛化物品是一个定义域为0..V中的整数的函数h，当分配给它的费用为v时，能得到的价值就是h(v)。\n\n这个定义有一点点抽象，另一种理解是一个泛化物品就是一个数组h[0..V]，给它费用v，可得到价值h[V]。\n\n一个费用为c价值为w的物品，如果它是01背包中的物品，那么把它看成泛化物品，它就是除了h(c)=w其它函数值都为0的一个函数。如果它是完全背包中的物品，那么它可以看成这样一个函数，仅当v被c整除时有h(v)=v/c*w，其它函数值均为0。如果它是多重背包中重复次数最多为n的物品，那么它对应的泛化物品的函数有h(v)=v/c*w仅当v被c整除且v/c<=n，其它情况函数值均为0。\n\n一个物品组可以看作一个泛化物品h。对于一个0..V中的v，若物品组中不存在费用为v的的物品，则h(v)=0，否则h(v)为所有费用为v的物品的最大价值。P07中每个主件及其附件集合等价于一个物品组，自然也可看作一个泛化物品。\n\n### 8.2.泛化物品的和\n\n如果面对两个泛化物品h和l，要用给定的费用从这两个泛化物品中得到最大的价值，怎么求呢？事实上，对于一个给定的费用v，只需枚举将这个费用如何分配给两个泛化物品就可以了。同样的，对于0..V的每一个整数v，可以求得费用v分配到h和l中的最大价值f(v)。也即`f(v)=max{h(k) +l(v-k)|0<=k<=v}`。可以看到，f也是一个由泛化物品h和l决定的定义域为0..V的函数，也就是说，f是一个由泛化物品h和 l决定的泛化物品。\n\n由此可以定义泛化物品的和：h、l都是泛化物品，若泛化物品f满足`f(v)=max{h(k)+l(v-k)|0<=k<=v}`，则称f是h与l的和，即f=h+l。这个运算的时间复杂度是O(V^2)。\n\n泛化物品的定义表明：在一个背包问题中，若将两个泛化物品代以它们的和，不影响问题的答案。事实上，对于其中的物品都是泛化物品的背包问题，求它的答案的过程也就是求所有这些泛化物品之和的过程。设此和为s，则答案就是s[0..V]中的最大值。\n\n### 8.3.背包问题的泛化物品\n\n一个背包问题中，可能会给出很多条件，包括每种物品的费用、价值等属性，物品之间的分组、依赖等关系等。但肯定能将问题对应于某个泛化物品。也就是说，给定了所有条件以后，就可以对每个非负整数v求得：若背包容量为v，将物品装入背包可得到的最大价值是多少，这可以认为是定义在非负整数集上的一件泛化物品。这个泛化物品——或者说问题所对应的一个定义域为非负整数的函数——包含了关于问题本身的高度浓缩的信息。一般而言，求得这个泛化物品的一个子域（例如0..V）的值之后，就可以根据这个函数的取值得到背包问题的最终答案。\n\n综上所述，一般而言，求解背包问题，即求解这个问题所对应的一个函数，即该问题的泛化物品。而求解某个泛化物品的一种方法就是将它表示为若干泛化物品的和然后求之。\n\n### 8.4.小结\n\n本讲可以说都是我自己的原创思想。具体来说，是我在学习函数式编程的 Scheme 语言时，用函数编程的眼光审视各类背包问题得出的理论。这一讲真的很抽象，也许在“模型的抽象程度”这一方面已经超出了NOIP的要求，所以暂且看不懂也没关系。相信随着你的OI之路逐渐延伸，有一天你会理解的。\n\n我想说：“思考”是一个`OIer`最重要的品质。简单的问题，深入思考以后，也能发现更多。\n\n## 9.背包问题问法的变化\n\n以上涉及的各种背包问题都是要求在背包容量（费用）的限制下求可以取到的最大价值，但背包问题还有很多种灵活的问法，在这里值得提一下。但是我认为，只要深入理解了求背包问题最大价值的方法，即使问法变化了，也是不难想出算法的。\n\n例如，求解最多可以放多少件物品或者最多可以装满多少背包的空间。这都可以根据具体问题利用前面的方程求出所有状态的值（f数组）之后得到。\n\n还有，如果要求的是“总价值最小”“总件数最小”，只需简单的将上面的状态转移方程中的max改成min即可。\n\n下面说一些变化更大的问法。\n\n### 9.1.输出方案\n\n一般而言，背包问题是要求一个最优值，如果要求输出这个最优值的方案，可以参照一般动态规划问题输出方案的方法：记录下每个状态的最优值是由状态转移方程的哪一项推出来的，换句话说，记录下它是由哪一个策略推出来的。便可根据这条策略找到上一个状态，从上一个状态接着向前推即可。\n\n还是以01背包为例，方程为`f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}`。再用一个数组g[i] [v]，设`g[i][v]=0`表示推出`f[i`][v]的值时是采用了方程的前一项（也即`f[i][v]=f[i-1][v]`），`g[i][v]`表示采用了方程的后一项。注意这两项分别表示了两种策略：未选第i个物品及选了第i个物品。那么输出方案的伪代码可以这样写（设最终状态为`f[N`][V]）：\n\n```go\ni=N\nv=V\nwhile(i>0)\nif(g[i][v]==0)\nprint \"未选第i项物品\"\nelse if(g[i][v]==1)\nprint \"选了第i项物品\"\nv=v-c[i]\n```\n\n另外，采用方程的前一项或后一项也可以在输出方案的过程中根据f[i][v]的值实时地求出来，也即不须纪录g数组，将上述代码中的`g[i] [v]==0`改成`f[i][v]==f[i-1][v]`，`g[i][v]==1`改成`f[i][v]==f[i-1][v-c[i]]+w[i]`也可。\n\n### 9.2.输出字典序最小的最优方案\n\n这里“字典序最小”的意思是1..N号物品的选择方案排列出来以后字典序最小。以输出01背包最小字典序的方案为例。\n\n一般而言，求一个字典序最小的最优方案，只需要在转移时注意策略。首先，子问题的定义要略改一些。我们注意到，如果存在一个选了物品1的最优方案，那么答案一定包含物品1，原问题转化为一个背包容量为v-c[1]，物品为2..N的子问题。反之，如果答案不包含物品1，则转化成背包容量仍为V，物品为2..N的子问题。不管答案怎样，子问题的物品都是以i..N而非前所述的1..i的形式来定义的，所以状态的定义和转移方程都需要改一下。但也许更简易的方法是先把物品逆序排列一下，以下按物品已被逆序排列来叙述。\n\n在这种情况下，可以按照前面经典的状态转移方程来求值，只是输出方案的时候要注意：从N到1输入时，如果`f[i][v]==f[i-v]`及`f[i][v]==f[i-1][f-c[i]]+w[i]`同时成立，应该按照后者（即选择了物品i）来输出方案。\n\n求方案总数\n对于一个给定了背包容量、物品费用、物品间相互关系（分组、依赖等）的背包问题，除了再给定每个物品的价值后求可得到的最大价值外，还可以得到装满背包或将背包装至某一指定容量的方案总数。\n\n对于这类改变问法的问题，一般只需将状态转移方程中的max改成sum即可。例如若每件物品均是01背包中的物品，转移方程即为`f[i][v]=sum{f[i-1][v],f[i-1][v-c[i]]+w[i]}`，初始条件`f[0][0]=1`。\n\n事实上，这样做可行的原因在于状态转移方程已经考察了所有可能的背包组成方案。\n\n### 9.3.最优方案的总数\n\n这里的最优方案是指物品总价值最大的方案。还是以01背包为例。\n\n结合求最大总价值和方案总数两个问题的思路，最优方案的总数可以这样求：f[i][v]意义同前述，g[i][v]表示这个子问题的最优方案的总数，则在求f[i][v]的同时求g[i][v]的伪代码如下：\n\n```go\nfor i=1..N\nfor v=0..V\nf[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}\ng[i][v]=0\nif(f[i][v]==f[i-1][v])\ninc(g[i][v],g[i-1][v]\nif(f[i][v]==f[i-1][v-c[i]]+w[i])\ninc(g[i][v],g[i-1][v-c[i]])\n```\n\n如果你是第一次看到这样的问题，请仔细体会上面的伪代码。\n\n### 9.4.小结\n\n显然，这里不可能穷尽背包类动态规划问题所有的问法。甚至还存在一类将背包类动态规划问题与其它领域（例如数论、图论）结合起来的问题，在这篇论背包问题的专文中也不会论及。但只要深刻领会前述所有类别的背包问题的思路和状态转移方程，遇到其它的变形问法，只要题目难度还属于NOIP，应该也不难想出算法。\n\n触类旁通、举一反三，应该也是一个OIer应有的品质吧。\n","slug":"7.dd大牛的《背包九讲》","published":1,"updated":"2023-02-27T01:14:35.233Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfrxyv1p000i2cfva06n11hs","content":"<h1 id=\"dd大牛的《背包九讲》\"><a href=\"#dd大牛的《背包九讲》\" class=\"headerlink\" title=\"dd大牛的《背包九讲》\"></a>dd大牛的《背包九讲》</h1><h2 id=\"1-01背包问题\"><a href=\"#1-01背包问题\" class=\"headerlink\" title=\"1.01背包问题\"></a>1.01背包问题</h2><h3 id=\"1-1-题目\"><a href=\"#1-1-题目\" class=\"headerlink\" title=\"1.1.题目\"></a>1.1.题目</h3><p>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"1-2-基本思路\"><a href=\"#1-2-基本思路\" class=\"headerlink\" title=\"1.2.基本思路\"></a>1.2.基本思路</h3><p>这是最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。</p>\n<p>用子问题定义状态：即<code>f[i][v]</code>表示前i件物品恰放入一个容量为v的背包可以获得的最大价值。则其状态转移方程便是：</p>\n<p><code>f[i][v]=max&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>。</p>\n<span id=\"more\"></span>\n\n<p>这个方程非常重要，基本上所有跟背包相关的问题的方程都是由它衍生出来的。所以有必要将它详细解释一下：“将前i件物品放入容量为v的背包中”这个子问题，若只考虑第i件物品的策略（放或不放），那么就可以转化为一个只牵扯前i-1件物品的问题。如果不放第i件物品，那么问题就转化为“前i-1件物品放入容量为v的背包中”；如果放第i件物品，那么问题就转化为“前i-1件物品放入剩下的容量为<code>v-c[i]</code>的背包中”，此时能获得的最大价值就是<code>f [i-1][v-c[i]]</code>再加上通过放入第i件物品获得的价值w[i]。</p>\n<p>注意<code>f[i][v]</code>有意义当且仅当存在一个前i件物品的子集，其费用总和为v。所以按照这个方程递推完毕后，最终的答案并不一定是<code>f[N] [V]</code>，而是<code>f[N][0..V]</code>的最大值。如果将状态的定义中的“恰”字去掉，在转移方程中就要再加入一项<code>f[i][v-1]</code>，这样就可以保证f[N] [V]就是最后的答案。至于为什么这样就可以，由你自己来体会了。</p>\n<h3 id=\"1-3-优化空间复杂度\"><a href=\"#1-3-优化空间复杂度\" class=\"headerlink\" title=\"1.3.优化空间复杂度\"></a>1.3.优化空间复杂度</h3><p>以上方法的时间和空间复杂度均为O(N*V)，其中时间复杂度基本已经不能再优化了，但空间复杂度却可以优化到O(V)。</p>\n<p>先考虑上面讲的基本思路如何实现，肯定是有一个主循环i=1..N，每次算出来二维数组<code>f[i][0..V]</code>的所有值。那么，如果只用一个数组f [0..V]，能不能保证第i次循环结束后f[v]中表示的就是我们定义的状态<code>f[i][v]</code>呢？<code>f[i][v]</code>是由<code>f[i-1][v]</code>和f[i-1] [v-c[i]]两个子问题递推而来，能否保证在推<code>f[i][v]</code>时（也即在第i次主循环中推f[v]时）能够得到<code>f[i-1][v]</code>和<code>f[i-1][v -c[i]]</code>的值呢？事实上，这要求在每次主循环中我们以v=V..0的顺序推f[v]，这样才能保证推f[v]时f[v-c[i]]保存的是状态<code>f[i -1][v-c[i]]</code>的值。伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>其中的f[v]=max{f[v],f[v-c[i]]}一句恰就相当于我们的转移方程<code>f[i][v]=max&#123;f[i-1][v],f[i- 1][v-c[i]]&#125;</code>，因为现在的f[v-c[i]]就相当于原来的<code>f[i-1][v-c[i]]</code>。如果将v的循环顺序从上面的逆序改成顺序的话，那么则成了<code>f[i][v]</code>由<code>f[i][v-c[i]]</code>推知，与本题意不符，但它却是另一个重要的背包问题P02最简捷的解决方案，故学习只用一维数组解01背包问题是十分必要的。</p>\n<h3 id=\"1-4-总结\"><a href=\"#1-4-总结\" class=\"headerlink\" title=\"1.4.总结\"></a>1.4.总结</h3><p>01背包问题是最基本的背包问题，它包含了背包问题中设计状态、方程的最基本思想，另外，别的类型的背包问题往往也可以转换成01背包问题求解。故一定要仔细体会上面基本思路的得出方法，状态转移方程的意义，以及最后怎样优化的空间复杂度。</p>\n<h2 id=\"2-完全背包问题\"><a href=\"#2-完全背包问题\" class=\"headerlink\" title=\"2. 完全背包问题\"></a>2. 完全背包问题</h2><h3 id=\"2-1-题目\"><a href=\"#2-1-题目\" class=\"headerlink\" title=\"2.1.题目\"></a>2.1.题目</h3><p>有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"2-2-基本思路\"><a href=\"#2-2-基本思路\" class=\"headerlink\" title=\"2.2.基本思路\"></a>2.2.基本思路</h3><p>这个问题非常类似于01背包问题，所不同的是每种物品有无限件。也就是从每种物品的角度考虑，与它相关的策略已并非取或不取两种，而是有取0件、取1件、取2件……等很多种。如果仍然按照解01背包时的思路，令<code>f[i][v]</code>表示前i种物品恰放入一个容量为v的背包的最大权值。仍然可以按照每种物品不同的策略写出状态转移方程，像这样：<code>f[i][v]=max&#123;f[i-1][v-k*c[i]]+k*w[i]|0&lt;=k*c[i]&lt;= v&#125;</code>。这跟01背包问题一样有<code>O(N*V)</code>个状态需要求解，但求解每个状态的时间则不是常数了，求解状态<code>f[i][v]</code>的时间是O(v/c[i])，总的复杂度是超过<code>O(VN)</code>的。</p>\n<p>将01背包问题的基本思路加以改进，得到了这样一个清晰的方法。这说明01背包问题的方程的确是很重要，可以推及其它类型的背包问题。但我们还是试图改进这个复杂度。</p>\n<h3 id=\"2-3-一个简单有效的优化\"><a href=\"#2-3-一个简单有效的优化\" class=\"headerlink\" title=\"2.3.一个简单有效的优化\"></a>2.3.一个简单有效的优化</h3><p>完全背包问题有一个很简单有效的优化，是这样的：若两件物品i、j满足<code>c[i]&lt;=c[j]</code>且<code>w[i]&gt;=w[j]</code>，则将物品j去掉，不用考虑。这个优化的正确性显然：任何情况下都可将价值小费用高得j换成物美价廉的i，得到至少不会更差的方案。对于随机生成的数据，这个方法往往会大大减少物品的件数，从而加快速度。然而这个并不能改善最坏情况的复杂度，因为有可能特别设计的数据可以一件物品也去不掉。</p>\n<p>转化为01背包问题求解<br>既然01背包问题是最基本的背包问题，那么我们可以考虑把完全背包问题转化为01背包问题来解。最简单的想法是，考虑到第i种物品最多选<code>V/c [i]</code>件，于是可以把第i种物品转化为<code>V/c[i]</code>件费用及价值均不变的物品，然后求解这个01背包问题。这样完全没有改进基本思路的时间复杂度，但这毕竟给了我们将完全背包问题转化为01背包问题的思路：将一种物品拆成多件物品。</p>\n<p>更高效的转化方法是：把第i种物品拆成费用为<code>c[i]*2^k</code>、价值为<code>w[i]*2^k</code>的若干件物品，其中k满足<code>c[i]*2^k&lt;V</code>。这是二进制的思想，因为不管最优策略选几件第i种物品，总可以表示成若干个<code>2^k</code>件物品的和。这样把每种物品拆成<code>O(log(V/c[i]))</code>件物品，是一个很大的改进。但我们有更优的<code>O(VN)</code>的算法。<code> * O(VN)</code>的算法这个算法使用一维数组，先看伪代码：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N </span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V </span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>你会发现，这个伪代码与01背包问题的伪代码只有v的循环次序不同而已。为什么这样一改就可行呢？首先想想为什么01背包问题中要按照v=V..0的逆序来循环。这是因为要保证第i次循环中的状态<code>f[i][v]</code>是由状态<code>f[i-1][v-c[i]]</code>递推而来。换句话说，这正是为了保证每件物品只选一次，保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果<code>f[i-1][v-c[i]]</code>。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果<code>f[i][v-c[i]]</code>，所以就可以并且必须采用v= 0..V的顺序循环。这就是这个简单的程序为何成立的道理。</p>\n<p>这个算法也可以以另外的思路得出。例如，基本思路中的状态转移方程可以等价地变形成这种形式：<code>f[i][v]=max&#123;f[i-1][v],f[i][v-c[i]]+w[i]&#125;</code>，将这个方程用一维数组实现，便得到了上面的伪代码。</p>\n<h3 id=\"2-4-总结\"><a href=\"#2-4-总结\" class=\"headerlink\" title=\"2.4.总结\"></a>2.4.总结</h3><p>完全背包问题也是一个相当基础的背包问题，它有两个状态转移方程，分别在“基本思路”以及“<code>O(VN)</code>的算法“的小节中给出。希望你能够对这两个状态转移方程都仔细地体会，不仅记住，也要弄明白它们是怎么得出来的，最好能够自己想一种得到这些方程的方法。事实上，对每一道动态规划题目都思考其方程的意义以及如何得来，是加深对动态规划的理解、提高动态规划功力的好方法。</p>\n<h2 id=\"3-多重背包问题\"><a href=\"#3-多重背包问题\" class=\"headerlink\" title=\"3.多重背包问题\"></a>3.多重背包问题</h2><h3 id=\"3-1-题目\"><a href=\"#3-1-题目\" class=\"headerlink\" title=\"3.1.题目\"></a>3.1.题目</h3><p>有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"3-2-基本算法\"><a href=\"#3-2-基本算法\" class=\"headerlink\" title=\"3.2.基本算法\"></a>3.2.基本算法</h3><p>这题目和完全背包问题很类似。基本的方程只需将完全背包问题的方程略微一改即可，因为对于第i种物品有n[i]+1种策略：取0件，取1件……取 n[i]件。令<code>f[i][v]</code>表示前i种物品恰放入一个容量为v的背包的最大权值，则：<code>f[i][v]=max&#123;f[i-1][v-k*c[i]]+ k*w[i]|0&lt;=k&lt;=n[i]&#125;</code>。复杂度是<code>O(V*∑n[i])</code>。</p>\n<p>转化为01背包问题<br>另一种好想好写的基本方法是转化为01背包求解：把第i种物品换成n[i]件01背包中的物品，则得到了物品数为<code>∑n[i]</code>的01背包问题，直接求解，复杂度仍然是<code>O(V*∑n[i])</code>。</p>\n<p>但是我们期望将它转化为01背包问题之后能够像完全背包一样降低复杂度。仍然考虑二进制的思想，我们考虑把第i种物品换成若干件物品，使得原问题中第i种物品可取的每种策略——取0..n[i]件——均能等价于取若干件代换以后的物品。另外，取超过n[i]件的策略必不能出现。</p>\n<p>方法是：将第i种物品分成若干件物品，其中每件物品有一个系数，这件物品的费用和价值均是原来的费用和价值乘以这个系数。使这些系数分别为 <code>1,2,4,...,2^(k-1)</code>,<code>n[i]-2^k+1</code>，且k是满足<code>n[i]-2^k+1&gt;0</code>的最大整数。例如，如果n[i]为13，就将这种物品分成系数分别为1,2,4,6的四件物品。</p>\n<p>分成的这几件物品的系数和为n[i]，表明不可能取多于n[i]件的第i种物品。另外这种方法也能保证对于<code>0..n[i]</code>间的每一个整数，均可以用若干个系数的和表示，这个证明可以分<code>0..2^k-1</code>和<code>2^k..n[i]</code>两段来分别讨论得出，并不难，希望你自己思考尝试一下。</p>\n<p>这样就将第i种物品分成了<code>O(log n[i])</code>种物品，将原问题转化为了复杂度为<code>O(V*∑log n[i])</code>的01背包问题，是很大的改进。</p>\n<h3 id=\"3-3-O-VN-的算法\"><a href=\"#3-3-O-VN-的算法\" class=\"headerlink\" title=\"3.3.O(VN)的算法\"></a>3.3.<code>O(VN)</code>的算法</h3><p>多重背包问题同样有<code>O(VN)</code>的算法。这个算法基于基本算法的状态转移方程，但应用单调队列的方法使每个状态的值可以以均摊O(1)的时间求解。由于用单调队列优化的DP已超出了<code>NOIP</code>的范围，故本文不再展开讲解。我最初了解到这个方法是在楼天成的“男人八题”幻灯片上。</p>\n<h3 id=\"3-4-小结\"><a href=\"#3-4-小结\" class=\"headerlink\" title=\"3.4.小结\"></a>3.4.小结</h3><p>这里我们看到了将一个算法的复杂度由<code>O(V*∑n[i])</code>改进到<code>O(V*∑log n[i])</code>的过程，还知道了存在应用超出<code>NOIP</code>范围的知识的<code>O(VN)</code>算法。希望你特别注意“拆分物品”的思想和方法，自己证明一下它的正确性，并用尽量简洁的程序来实现。</p>\n<h2 id=\"4-混合三种背包问题\"><a href=\"#4-混合三种背包问题\" class=\"headerlink\" title=\"4.混合三种背包问题\"></a>4.混合三种背包问题</h2><h3 id=\"4-1-问题\"><a href=\"#4-1-问题\" class=\"headerlink\" title=\"4.1.问题\"></a>4.1.问题</h3><p>如果将P01、P02、P03混合起来。也就是说，有的物品只可以取一次（01背包），有的物品可以取无限次（完全背包），有的物品可以取的次数有一个上限（多重背包）。应该怎么求解呢？</p>\n<h3 id=\"4-2-01背包与完全背包的混合\"><a href=\"#4-2-01背包与完全背包的混合\" class=\"headerlink\" title=\"4.2.01背包与完全背包的混合\"></a>4.2.01背包与完全背包的混合</h3><p>考虑到在P01和P02中最后给出的伪代码只有一处不同，故如果只有两类物品：一类物品只能取一次，另一类物品可以取无限次，那么只需在对每个物品应用转移方程时，根据物品的类别选用顺序或逆序的循环即可，复杂度是<code>O(VN)</code>。伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">if</span> 第i件物品是<span class=\"number\">01</span>背包</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> 第i件物品是完全背包</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V</span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-再加上多重背包\"><a href=\"#4-3-再加上多重背包\" class=\"headerlink\" title=\"4.3.再加上多重背包\"></a>4.3.再加上多重背包</h3><p>如果再加上有的物品最多可以取有限次，那么原则上也可以给出<code>O(VN)</code>的解法：遇到多重背包类型的物品用单调队列解即可。但如果不考虑超过NOIP范围的算法的话，用P03中将每个这类物品分成O(log n[i])个01背包的物品的方法也已经很优了。</p>\n<h3 id=\"4-4-小结\"><a href=\"#4-4-小结\" class=\"headerlink\" title=\"4.4.小结\"></a>4.4.小结</h3><p>有人说，困难的题目都是由简单的题目叠加而来的。这句话是否公理暂且存之不论，但它在本讲中已经得到了充分的体现。本来01背包、完全背包、多重背包都不是什么难题，但将它们简单地组合起来以后就得到了这样一道一定能吓倒不少人的题目。但只要基础扎实，领会三种基本背包问题的思想，就可以做到把困难的题目拆分成简单的题目来解决。</p>\n<h2 id=\"5-二维费用的背包问题\"><a href=\"#5-二维费用的背包问题\" class=\"headerlink\" title=\"5.二维费用的背包问题\"></a>5.二维费用的背包问题</h2><h3 id=\"5-1-问题\"><a href=\"#5-1-问题\" class=\"headerlink\" title=\"5.1.问题\"></a>5.1.问题</h3><p>二维费用的背包问题是指：对于每件物品，具有两种不同的费用；选择这件物品必须同时付出这两种代价；对于每种代价都有一个可付出的最大值（背包容量）。问怎样选择物品可以得到最大的价值。设这两种代价分别为代价1和代价2，第i件物品所需的两种代价分别为a[i]和b[i]。两种代价可付出的最大值（两种背包容量）分别为V和U。物品的价值为w[i]。</p>\n<h3 id=\"5-2-算法\"><a href=\"#5-2-算法\" class=\"headerlink\" title=\"5.2.算法\"></a>5.2.算法</h3><p>费用加了一维，只需状态也加一维即可。设<code>f[i][v][u]</code>表示前i件物品付出两种代价分别为v和u时可获得的最大价值。状态转移方程就是：<code>f [i][v][u]=max&#123;f[i-1][v][u],f[i-1][v-a[i]][u-b[i]]+w[i]&#125;</code>。如前述方法，可以只使用二维的数组：当每件物品只可以取一次时变量v和u采用顺序的循环，当物品有如完全背包问题时采用逆序的循环。当物品有如多重背包问题时拆分物品。</p>\n<h3 id=\"5-3-物品总个数的限制\"><a href=\"#5-3-物品总个数的限制\" class=\"headerlink\" title=\"5.3.物品总个数的限制\"></a>5.3.物品总个数的限制</h3><p>有时，“二维费用”的条件是以这样一种隐含的方式给出的：最多只能取M件物品。这事实上相当于每件物品多了一种“件数”的费用，每个物品的件数费用均为1，可以付出的最大件数费用为M。换句话说，设<code>f[v][m]</code>表示付出费用v、最多选m件时可得到的最大价值，则根据物品的类型（01、完全、多重）用不同的方法循环更新，最后在<code>f[0..V</code>][0..M]范围内寻找答案。</p>\n<p>另外，如果要求“恰取M件物品”，则在<code>f[0..V][M]</code>范围内寻找答案。</p>\n<h3 id=\"5-4-小结\"><a href=\"#5-4-小结\" class=\"headerlink\" title=\"5.4.小结\"></a>5.4.小结</h3><p>事实上，当发现由熟悉的动态规划题目变形得来的题目时，在原来的状态中加一纬以满足新的限制是一种比较通用的方法。希望你能从本讲中初步体会到这种方法。</p>\n<h2 id=\"6-分组的背包问题\"><a href=\"#6-分组的背包问题\" class=\"headerlink\" title=\"6.分组的背包问题\"></a>6.分组的背包问题</h2><h3 id=\"6-1-问题\"><a href=\"#6-1-问题\" class=\"headerlink\" title=\"6.1.问题\"></a>6.1.问题</h3><p>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。这些物品被划分为若干组，每组中的物品互相冲突，最多选一件。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"6-2-算法\"><a href=\"#6-2-算法\" class=\"headerlink\" title=\"6.2.算法\"></a>6.2.算法</h3><p>这个问题变成了每组物品有若干种策略：是选择本组的某一件，还是一件都不选。也就是说设<code>f[k</code>][v]表示前k组物品花费费用v能取得的最大权值，则有<code>f[k][v]=max&#123;f[k-1][v],f[k-1][v-c[i]]+w[i]|</code>物品i属于第k组}。</p>\n<p>使用一维数组的伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 所有的组k</span><br><span class=\"line\"><span class=\"keyword\">for</span> 所有的i属于组k</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>另外，显然可以对每组中的物品应用P02中“一个简单有效的优化”。</p>\n<h3 id=\"6-3-小结\"><a href=\"#6-3-小结\" class=\"headerlink\" title=\"6.3.小结\"></a>6.3.小结</h3><p>分组的背包问题将彼此互斥的若干物品称为一个组，这建立了一个很好的模型。不少背包问题的变形都可以转化为分组的背包问题（例如P07），由分组的背包问题进一步可定义“泛化物品”的概念，十分有利于解题。 </p>\n<h2 id=\"7-有依赖的背包问题\"><a href=\"#7-有依赖的背包问题\" class=\"headerlink\" title=\"7.有依赖的背包问题\"></a>7.有依赖的背包问题</h2><h3 id=\"7-1-简化的问题\"><a href=\"#7-1-简化的问题\" class=\"headerlink\" title=\"7.1.简化的问题\"></a>7.1.简化的问题</h3><p>这种背包问题的物品间存在某种“依赖”的关系。也就是说，i依赖于j，表示若选物品i，则必须选物品j。为了简化起见，我们先设没有某个物品既依赖于别的物品，又被别的物品所依赖；另外，没有某件物品同时依赖多件物品。</p>\n<h3 id=\"7-2-算法\"><a href=\"#7-2-算法\" class=\"headerlink\" title=\"7.2.算法\"></a>7.2.算法</h3><p>这个问题由NOIP2006金明的预算方案一题扩展而来。遵从该题的提法，将不依赖于别的物品的物品称为“主件”，依赖于某主件的物品称为“附件”。由这个问题的简化条件可知所有的物品由若干主件和依赖于每个主件的一个附件集合组成。</p>\n<p>按照背包问题的一般思路，仅考虑一个主件和它的附件集合。可是，可用的策略非常多，包括：一个也不选，仅选择主件，选择主件后再选择一个附件，选择主件后再选择两个附件……无法用状态转移方程来表示如此多的策略。（事实上，设有n个附件，则策略有2^n+1个，为指数级。）</p>\n<p>考虑到所有这些策略都是互斥的（也就是说，你只能选择一种策略），所以一个主件和它的附件集合实际上对应于P06中的一个物品组，每个选择了主件又选择了若干个附件的策略对应于这个物品组中的一个物品，其费用和价值都是这个策略中的物品的值的和。但仅仅是这一步转化并不能给出一个好的算法，因为物品组中的物品还是像原问题的策略一样多。</p>\n<p>再考虑P06中的一句话：可以对每组中的物品应用P02中“一个简单有效的优化”。这提示我们，对于一个物品组中的物品，所有费用相同的物品只留一个价值最大的，不影响结果。所以，我们可以对主件i的“附件集合”先进行一次01背包，得到费用依次为0..V-c[i]所有这些值时相应的最大价值f’[0..V-c[i]]。那么这个主件及它的附件集合相当于V-c[i]+1个物品的物品组，其中费用为c[i]+k的物品的价值为f’[k]+w[i]。也就是说原来指数级的策略中有很多策略都是冗余的，通过一次01背包后，将主件i转化为 V-c[i]+1个物品的物品组，就可以直接应用P06的算法解决问题了。</p>\n<h3 id=\"7-3-更一般的问题\"><a href=\"#7-3-更一般的问题\" class=\"headerlink\" title=\"7.3.更一般的问题\"></a>7.3.更一般的问题</h3><p>更一般的问题是：依赖关系以图论中“森林”的形式给出（森林即多叉树的集合），也就是说，主件的附件仍然可以具有自己的附件集合，限制只是每个物品最多只依赖于一个物品（只有一个主件）且不出现循环依赖。</p>\n<p>解决这个问题仍然可以用将每个主件及其附件集合转化为物品组的方式。唯一不同的是，由于附件可能还有附件，就不能将每个附件都看作一个一般的01 背包中的物品了。若这个附件也有附件集合，则它必定要被先转化为物品组，然后用分组的背包问题解出主件及其附件集合所对应的附件组中各个费用的附件所对应的价值。</p>\n<p>事实上，这是一种树形DP，其特点是每个父节点都需要对它的各个儿子的属性进行一次DP以求得自己的相关属性。这已经触及到了“泛化物品”的思想。看完P08后，你会发现这个“依赖关系树”每一个子树都等价于一件泛化物品，求某节点为根的子树对应的泛化物品相当于求其所有儿子的对应的泛化物品之和。</p>\n<h3 id=\"7-4-小结\"><a href=\"#7-4-小结\" class=\"headerlink\" title=\"7.4.小结\"></a>7.4.小结</h3><p>NOIP2006的那道背包问题我做得很失败，写了上百行的代码，却一分未得。后来我通过思考发现通过引入“物品组”和“依赖”的概念可以加深对这题的理解，还可以解决它的推广问题。用物品组的思想考虑那题中极其特殊的依赖关系：物品不能既作主件又作附件，每个主件最多有两个附件，可以发现一个主件和它的两个附件等价于一个由四个物品组成的物品组，这便揭示了问题的某种本质。</p>\n<p>我想说：失败不是什么丢人的事情，从失败中全无收获才是。</p>\n<h2 id=\"8-泛化物品\"><a href=\"#8-泛化物品\" class=\"headerlink\" title=\"8.泛化物品\"></a>8.泛化物品</h2><h3 id=\"8-1-定义\"><a href=\"#8-1-定义\" class=\"headerlink\" title=\"8.1.定义\"></a>8.1.定义</h3><p>考虑这样一种物品，它并没有固定的费用和价值，而是它的价值随着你分配给它的费用而变化。这就是泛化物品的概念。</p>\n<p>更严格的定义之。在背包容量为V的背包问题中，泛化物品是一个定义域为0..V中的整数的函数h，当分配给它的费用为v时，能得到的价值就是h(v)。</p>\n<p>这个定义有一点点抽象，另一种理解是一个泛化物品就是一个数组h[0..V]，给它费用v，可得到价值h[V]。</p>\n<p>一个费用为c价值为w的物品，如果它是01背包中的物品，那么把它看成泛化物品，它就是除了h(c)=w其它函数值都为0的一个函数。如果它是完全背包中的物品，那么它可以看成这样一个函数，仅当v被c整除时有h(v)=v/c<em>w，其它函数值均为0。如果它是多重背包中重复次数最多为n的物品，那么它对应的泛化物品的函数有h(v)=v/c</em>w仅当v被c整除且v/c&lt;=n，其它情况函数值均为0。</p>\n<p>一个物品组可以看作一个泛化物品h。对于一个0..V中的v，若物品组中不存在费用为v的的物品，则h(v)=0，否则h(v)为所有费用为v的物品的最大价值。P07中每个主件及其附件集合等价于一个物品组，自然也可看作一个泛化物品。</p>\n<h3 id=\"8-2-泛化物品的和\"><a href=\"#8-2-泛化物品的和\" class=\"headerlink\" title=\"8.2.泛化物品的和\"></a>8.2.泛化物品的和</h3><p>如果面对两个泛化物品h和l，要用给定的费用从这两个泛化物品中得到最大的价值，怎么求呢？事实上，对于一个给定的费用v，只需枚举将这个费用如何分配给两个泛化物品就可以了。同样的，对于0..V的每一个整数v，可以求得费用v分配到h和l中的最大价值f(v)。也即<code>f(v)=max&#123;h(k) +l(v-k)|0&lt;=k&lt;=v&#125;</code>。可以看到，f也是一个由泛化物品h和l决定的定义域为0..V的函数，也就是说，f是一个由泛化物品h和 l决定的泛化物品。</p>\n<p>由此可以定义泛化物品的和：h、l都是泛化物品，若泛化物品f满足<code>f(v)=max&#123;h(k)+l(v-k)|0&lt;=k&lt;=v&#125;</code>，则称f是h与l的和，即f=h+l。这个运算的时间复杂度是O(V^2)。</p>\n<p>泛化物品的定义表明：在一个背包问题中，若将两个泛化物品代以它们的和，不影响问题的答案。事实上，对于其中的物品都是泛化物品的背包问题，求它的答案的过程也就是求所有这些泛化物品之和的过程。设此和为s，则答案就是s[0..V]中的最大值。</p>\n<h3 id=\"8-3-背包问题的泛化物品\"><a href=\"#8-3-背包问题的泛化物品\" class=\"headerlink\" title=\"8.3.背包问题的泛化物品\"></a>8.3.背包问题的泛化物品</h3><p>一个背包问题中，可能会给出很多条件，包括每种物品的费用、价值等属性，物品之间的分组、依赖等关系等。但肯定能将问题对应于某个泛化物品。也就是说，给定了所有条件以后，就可以对每个非负整数v求得：若背包容量为v，将物品装入背包可得到的最大价值是多少，这可以认为是定义在非负整数集上的一件泛化物品。这个泛化物品——或者说问题所对应的一个定义域为非负整数的函数——包含了关于问题本身的高度浓缩的信息。一般而言，求得这个泛化物品的一个子域（例如0..V）的值之后，就可以根据这个函数的取值得到背包问题的最终答案。</p>\n<p>综上所述，一般而言，求解背包问题，即求解这个问题所对应的一个函数，即该问题的泛化物品。而求解某个泛化物品的一种方法就是将它表示为若干泛化物品的和然后求之。</p>\n<h3 id=\"8-4-小结\"><a href=\"#8-4-小结\" class=\"headerlink\" title=\"8.4.小结\"></a>8.4.小结</h3><p>本讲可以说都是我自己的原创思想。具体来说，是我在学习函数式编程的 Scheme 语言时，用函数编程的眼光审视各类背包问题得出的理论。这一讲真的很抽象，也许在“模型的抽象程度”这一方面已经超出了NOIP的要求，所以暂且看不懂也没关系。相信随着你的OI之路逐渐延伸，有一天你会理解的。</p>\n<p>我想说：“思考”是一个<code>OIer</code>最重要的品质。简单的问题，深入思考以后，也能发现更多。</p>\n<h2 id=\"9-背包问题问法的变化\"><a href=\"#9-背包问题问法的变化\" class=\"headerlink\" title=\"9.背包问题问法的变化\"></a>9.背包问题问法的变化</h2><p>以上涉及的各种背包问题都是要求在背包容量（费用）的限制下求可以取到的最大价值，但背包问题还有很多种灵活的问法，在这里值得提一下。但是我认为，只要深入理解了求背包问题最大价值的方法，即使问法变化了，也是不难想出算法的。</p>\n<p>例如，求解最多可以放多少件物品或者最多可以装满多少背包的空间。这都可以根据具体问题利用前面的方程求出所有状态的值（f数组）之后得到。</p>\n<p>还有，如果要求的是“总价值最小”“总件数最小”，只需简单的将上面的状态转移方程中的max改成min即可。</p>\n<p>下面说一些变化更大的问法。</p>\n<h3 id=\"9-1-输出方案\"><a href=\"#9-1-输出方案\" class=\"headerlink\" title=\"9.1.输出方案\"></a>9.1.输出方案</h3><p>一般而言，背包问题是要求一个最优值，如果要求输出这个最优值的方案，可以参照一般动态规划问题输出方案的方法：记录下每个状态的最优值是由状态转移方程的哪一项推出来的，换句话说，记录下它是由哪一个策略推出来的。便可根据这条策略找到上一个状态，从上一个状态接着向前推即可。</p>\n<p>还是以01背包为例，方程为<code>f[i][v]=max&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>。再用一个数组g[i] [v]，设<code>g[i][v]=0</code>表示推出<code>f[i</code>][v]的值时是采用了方程的前一项（也即<code>f[i][v]=f[i-1][v]</code>），<code>g[i][v]</code>表示采用了方程的后一项。注意这两项分别表示了两种策略：未选第i个物品及选了第i个物品。那么输出方案的伪代码可以这样写（设最终状态为<code>f[N</code>][V]）：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i=N</span><br><span class=\"line\">v=V</span><br><span class=\"line\">while(i&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span>(g[i][v]==<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;未选第i项物品&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(g[i][v]==<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;选了第i项物品&quot;</span></span><br><span class=\"line\">v=v-c[i]</span><br></pre></td></tr></table></figure>\n\n<p>另外，采用方程的前一项或后一项也可以在输出方案的过程中根据f[i][v]的值实时地求出来，也即不须纪录g数组，将上述代码中的<code>g[i] [v]==0</code>改成<code>f[i][v]==f[i-1][v]</code>，<code>g[i][v]==1</code>改成<code>f[i][v]==f[i-1][v-c[i]]+w[i]</code>也可。</p>\n<h3 id=\"9-2-输出字典序最小的最优方案\"><a href=\"#9-2-输出字典序最小的最优方案\" class=\"headerlink\" title=\"9.2.输出字典序最小的最优方案\"></a>9.2.输出字典序最小的最优方案</h3><p>这里“字典序最小”的意思是1..N号物品的选择方案排列出来以后字典序最小。以输出01背包最小字典序的方案为例。</p>\n<p>一般而言，求一个字典序最小的最优方案，只需要在转移时注意策略。首先，子问题的定义要略改一些。我们注意到，如果存在一个选了物品1的最优方案，那么答案一定包含物品1，原问题转化为一个背包容量为v-c[1]，物品为2..N的子问题。反之，如果答案不包含物品1，则转化成背包容量仍为V，物品为2..N的子问题。不管答案怎样，子问题的物品都是以i..N而非前所述的1..i的形式来定义的，所以状态的定义和转移方程都需要改一下。但也许更简易的方法是先把物品逆序排列一下，以下按物品已被逆序排列来叙述。</p>\n<p>在这种情况下，可以按照前面经典的状态转移方程来求值，只是输出方案的时候要注意：从N到1输入时，如果<code>f[i][v]==f[i-v]</code>及<code>f[i][v]==f[i-1][f-c[i]]+w[i]</code>同时成立，应该按照后者（即选择了物品i）来输出方案。</p>\n<p>求方案总数<br>对于一个给定了背包容量、物品费用、物品间相互关系（分组、依赖等）的背包问题，除了再给定每个物品的价值后求可得到的最大价值外，还可以得到装满背包或将背包装至某一指定容量的方案总数。</p>\n<p>对于这类改变问法的问题，一般只需将状态转移方程中的max改成sum即可。例如若每件物品均是01背包中的物品，转移方程即为<code>f[i][v]=sum&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>，初始条件<code>f[0][0]=1</code>。</p>\n<p>事实上，这样做可行的原因在于状态转移方程已经考察了所有可能的背包组成方案。</p>\n<h3 id=\"9-3-最优方案的总数\"><a href=\"#9-3-最优方案的总数\" class=\"headerlink\" title=\"9.3.最优方案的总数\"></a>9.3.最优方案的总数</h3><p>这里的最优方案是指物品总价值最大的方案。还是以01背包为例。</p>\n<p>结合求最大总价值和方案总数两个问题的思路，最优方案的总数可以这样求：f[i][v]意义同前述，g[i][v]表示这个子问题的最优方案的总数，则在求f[i][v]的同时求g[i][v]的伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V</span><br><span class=\"line\">f[i][v]=max&#123;f[i<span class=\"number\">-1</span>][v],f[i<span class=\"number\">-1</span>][v-c[i]]+w[i]&#125;</span><br><span class=\"line\">g[i][v]=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(f[i][v]==f[i<span class=\"number\">-1</span>][v])</span><br><span class=\"line\">inc(g[i][v],g[i<span class=\"number\">-1</span>][v]</span><br><span class=\"line\"><span class=\"keyword\">if</span>(f[i][v]==f[i<span class=\"number\">-1</span>][v-c[i]]+w[i])</span><br><span class=\"line\">inc(g[i][v],g[i<span class=\"number\">-1</span>][v-c[i]])</span><br></pre></td></tr></table></figure>\n\n<p>如果你是第一次看到这样的问题，请仔细体会上面的伪代码。</p>\n<h3 id=\"9-4-小结\"><a href=\"#9-4-小结\" class=\"headerlink\" title=\"9.4.小结\"></a>9.4.小结</h3><p>显然，这里不可能穷尽背包类动态规划问题所有的问法。甚至还存在一类将背包类动态规划问题与其它领域（例如数论、图论）结合起来的问题，在这篇论背包问题的专文中也不会论及。但只要深刻领会前述所有类别的背包问题的思路和状态转移方程，遇到其它的变形问法，只要题目难度还属于NOIP，应该也不难想出算法。</p>\n<p>触类旁通、举一反三，应该也是一个OIer应有的品质吧。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"dd大牛的《背包九讲》\"><a href=\"#dd大牛的《背包九讲》\" class=\"headerlink\" title=\"dd大牛的《背包九讲》\"></a>dd大牛的《背包九讲》</h1><h2 id=\"1-01背包问题\"><a href=\"#1-01背包问题\" class=\"headerlink\" title=\"1.01背包问题\"></a>1.01背包问题</h2><h3 id=\"1-1-题目\"><a href=\"#1-1-题目\" class=\"headerlink\" title=\"1.1.题目\"></a>1.1.题目</h3><p>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"1-2-基本思路\"><a href=\"#1-2-基本思路\" class=\"headerlink\" title=\"1.2.基本思路\"></a>1.2.基本思路</h3><p>这是最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。</p>\n<p>用子问题定义状态：即<code>f[i][v]</code>表示前i件物品恰放入一个容量为v的背包可以获得的最大价值。则其状态转移方程便是：</p>\n<p><code>f[i][v]=max&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>。</p>","more":"<p>这个方程非常重要，基本上所有跟背包相关的问题的方程都是由它衍生出来的。所以有必要将它详细解释一下：“将前i件物品放入容量为v的背包中”这个子问题，若只考虑第i件物品的策略（放或不放），那么就可以转化为一个只牵扯前i-1件物品的问题。如果不放第i件物品，那么问题就转化为“前i-1件物品放入容量为v的背包中”；如果放第i件物品，那么问题就转化为“前i-1件物品放入剩下的容量为<code>v-c[i]</code>的背包中”，此时能获得的最大价值就是<code>f [i-1][v-c[i]]</code>再加上通过放入第i件物品获得的价值w[i]。</p>\n<p>注意<code>f[i][v]</code>有意义当且仅当存在一个前i件物品的子集，其费用总和为v。所以按照这个方程递推完毕后，最终的答案并不一定是<code>f[N] [V]</code>，而是<code>f[N][0..V]</code>的最大值。如果将状态的定义中的“恰”字去掉，在转移方程中就要再加入一项<code>f[i][v-1]</code>，这样就可以保证f[N] [V]就是最后的答案。至于为什么这样就可以，由你自己来体会了。</p>\n<h3 id=\"1-3-优化空间复杂度\"><a href=\"#1-3-优化空间复杂度\" class=\"headerlink\" title=\"1.3.优化空间复杂度\"></a>1.3.优化空间复杂度</h3><p>以上方法的时间和空间复杂度均为O(N*V)，其中时间复杂度基本已经不能再优化了，但空间复杂度却可以优化到O(V)。</p>\n<p>先考虑上面讲的基本思路如何实现，肯定是有一个主循环i=1..N，每次算出来二维数组<code>f[i][0..V]</code>的所有值。那么，如果只用一个数组f [0..V]，能不能保证第i次循环结束后f[v]中表示的就是我们定义的状态<code>f[i][v]</code>呢？<code>f[i][v]</code>是由<code>f[i-1][v]</code>和f[i-1] [v-c[i]]两个子问题递推而来，能否保证在推<code>f[i][v]</code>时（也即在第i次主循环中推f[v]时）能够得到<code>f[i-1][v]</code>和<code>f[i-1][v -c[i]]</code>的值呢？事实上，这要求在每次主循环中我们以v=V..0的顺序推f[v]，这样才能保证推f[v]时f[v-c[i]]保存的是状态<code>f[i -1][v-c[i]]</code>的值。伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>其中的f[v]=max{f[v],f[v-c[i]]}一句恰就相当于我们的转移方程<code>f[i][v]=max&#123;f[i-1][v],f[i- 1][v-c[i]]&#125;</code>，因为现在的f[v-c[i]]就相当于原来的<code>f[i-1][v-c[i]]</code>。如果将v的循环顺序从上面的逆序改成顺序的话，那么则成了<code>f[i][v]</code>由<code>f[i][v-c[i]]</code>推知，与本题意不符，但它却是另一个重要的背包问题P02最简捷的解决方案，故学习只用一维数组解01背包问题是十分必要的。</p>\n<h3 id=\"1-4-总结\"><a href=\"#1-4-总结\" class=\"headerlink\" title=\"1.4.总结\"></a>1.4.总结</h3><p>01背包问题是最基本的背包问题，它包含了背包问题中设计状态、方程的最基本思想，另外，别的类型的背包问题往往也可以转换成01背包问题求解。故一定要仔细体会上面基本思路的得出方法，状态转移方程的意义，以及最后怎样优化的空间复杂度。</p>\n<h2 id=\"2-完全背包问题\"><a href=\"#2-完全背包问题\" class=\"headerlink\" title=\"2. 完全背包问题\"></a>2. 完全背包问题</h2><h3 id=\"2-1-题目\"><a href=\"#2-1-题目\" class=\"headerlink\" title=\"2.1.题目\"></a>2.1.题目</h3><p>有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"2-2-基本思路\"><a href=\"#2-2-基本思路\" class=\"headerlink\" title=\"2.2.基本思路\"></a>2.2.基本思路</h3><p>这个问题非常类似于01背包问题，所不同的是每种物品有无限件。也就是从每种物品的角度考虑，与它相关的策略已并非取或不取两种，而是有取0件、取1件、取2件……等很多种。如果仍然按照解01背包时的思路，令<code>f[i][v]</code>表示前i种物品恰放入一个容量为v的背包的最大权值。仍然可以按照每种物品不同的策略写出状态转移方程，像这样：<code>f[i][v]=max&#123;f[i-1][v-k*c[i]]+k*w[i]|0&lt;=k*c[i]&lt;= v&#125;</code>。这跟01背包问题一样有<code>O(N*V)</code>个状态需要求解，但求解每个状态的时间则不是常数了，求解状态<code>f[i][v]</code>的时间是O(v/c[i])，总的复杂度是超过<code>O(VN)</code>的。</p>\n<p>将01背包问题的基本思路加以改进，得到了这样一个清晰的方法。这说明01背包问题的方程的确是很重要，可以推及其它类型的背包问题。但我们还是试图改进这个复杂度。</p>\n<h3 id=\"2-3-一个简单有效的优化\"><a href=\"#2-3-一个简单有效的优化\" class=\"headerlink\" title=\"2.3.一个简单有效的优化\"></a>2.3.一个简单有效的优化</h3><p>完全背包问题有一个很简单有效的优化，是这样的：若两件物品i、j满足<code>c[i]&lt;=c[j]</code>且<code>w[i]&gt;=w[j]</code>，则将物品j去掉，不用考虑。这个优化的正确性显然：任何情况下都可将价值小费用高得j换成物美价廉的i，得到至少不会更差的方案。对于随机生成的数据，这个方法往往会大大减少物品的件数，从而加快速度。然而这个并不能改善最坏情况的复杂度，因为有可能特别设计的数据可以一件物品也去不掉。</p>\n<p>转化为01背包问题求解<br>既然01背包问题是最基本的背包问题，那么我们可以考虑把完全背包问题转化为01背包问题来解。最简单的想法是，考虑到第i种物品最多选<code>V/c [i]</code>件，于是可以把第i种物品转化为<code>V/c[i]</code>件费用及价值均不变的物品，然后求解这个01背包问题。这样完全没有改进基本思路的时间复杂度，但这毕竟给了我们将完全背包问题转化为01背包问题的思路：将一种物品拆成多件物品。</p>\n<p>更高效的转化方法是：把第i种物品拆成费用为<code>c[i]*2^k</code>、价值为<code>w[i]*2^k</code>的若干件物品，其中k满足<code>c[i]*2^k&lt;V</code>。这是二进制的思想，因为不管最优策略选几件第i种物品，总可以表示成若干个<code>2^k</code>件物品的和。这样把每种物品拆成<code>O(log(V/c[i]))</code>件物品，是一个很大的改进。但我们有更优的<code>O(VN)</code>的算法。<code> * O(VN)</code>的算法这个算法使用一维数组，先看伪代码：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N </span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V </span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>你会发现，这个伪代码与01背包问题的伪代码只有v的循环次序不同而已。为什么这样一改就可行呢？首先想想为什么01背包问题中要按照v=V..0的逆序来循环。这是因为要保证第i次循环中的状态<code>f[i][v]</code>是由状态<code>f[i-1][v-c[i]]</code>递推而来。换句话说，这正是为了保证每件物品只选一次，保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果<code>f[i-1][v-c[i]]</code>。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果<code>f[i][v-c[i]]</code>，所以就可以并且必须采用v= 0..V的顺序循环。这就是这个简单的程序为何成立的道理。</p>\n<p>这个算法也可以以另外的思路得出。例如，基本思路中的状态转移方程可以等价地变形成这种形式：<code>f[i][v]=max&#123;f[i-1][v],f[i][v-c[i]]+w[i]&#125;</code>，将这个方程用一维数组实现，便得到了上面的伪代码。</p>\n<h3 id=\"2-4-总结\"><a href=\"#2-4-总结\" class=\"headerlink\" title=\"2.4.总结\"></a>2.4.总结</h3><p>完全背包问题也是一个相当基础的背包问题，它有两个状态转移方程，分别在“基本思路”以及“<code>O(VN)</code>的算法“的小节中给出。希望你能够对这两个状态转移方程都仔细地体会，不仅记住，也要弄明白它们是怎么得出来的，最好能够自己想一种得到这些方程的方法。事实上，对每一道动态规划题目都思考其方程的意义以及如何得来，是加深对动态规划的理解、提高动态规划功力的好方法。</p>\n<h2 id=\"3-多重背包问题\"><a href=\"#3-多重背包问题\" class=\"headerlink\" title=\"3.多重背包问题\"></a>3.多重背包问题</h2><h3 id=\"3-1-题目\"><a href=\"#3-1-题目\" class=\"headerlink\" title=\"3.1.题目\"></a>3.1.题目</h3><p>有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"3-2-基本算法\"><a href=\"#3-2-基本算法\" class=\"headerlink\" title=\"3.2.基本算法\"></a>3.2.基本算法</h3><p>这题目和完全背包问题很类似。基本的方程只需将完全背包问题的方程略微一改即可，因为对于第i种物品有n[i]+1种策略：取0件，取1件……取 n[i]件。令<code>f[i][v]</code>表示前i种物品恰放入一个容量为v的背包的最大权值，则：<code>f[i][v]=max&#123;f[i-1][v-k*c[i]]+ k*w[i]|0&lt;=k&lt;=n[i]&#125;</code>。复杂度是<code>O(V*∑n[i])</code>。</p>\n<p>转化为01背包问题<br>另一种好想好写的基本方法是转化为01背包求解：把第i种物品换成n[i]件01背包中的物品，则得到了物品数为<code>∑n[i]</code>的01背包问题，直接求解，复杂度仍然是<code>O(V*∑n[i])</code>。</p>\n<p>但是我们期望将它转化为01背包问题之后能够像完全背包一样降低复杂度。仍然考虑二进制的思想，我们考虑把第i种物品换成若干件物品，使得原问题中第i种物品可取的每种策略——取0..n[i]件——均能等价于取若干件代换以后的物品。另外，取超过n[i]件的策略必不能出现。</p>\n<p>方法是：将第i种物品分成若干件物品，其中每件物品有一个系数，这件物品的费用和价值均是原来的费用和价值乘以这个系数。使这些系数分别为 <code>1,2,4,...,2^(k-1)</code>,<code>n[i]-2^k+1</code>，且k是满足<code>n[i]-2^k+1&gt;0</code>的最大整数。例如，如果n[i]为13，就将这种物品分成系数分别为1,2,4,6的四件物品。</p>\n<p>分成的这几件物品的系数和为n[i]，表明不可能取多于n[i]件的第i种物品。另外这种方法也能保证对于<code>0..n[i]</code>间的每一个整数，均可以用若干个系数的和表示，这个证明可以分<code>0..2^k-1</code>和<code>2^k..n[i]</code>两段来分别讨论得出，并不难，希望你自己思考尝试一下。</p>\n<p>这样就将第i种物品分成了<code>O(log n[i])</code>种物品，将原问题转化为了复杂度为<code>O(V*∑log n[i])</code>的01背包问题，是很大的改进。</p>\n<h3 id=\"3-3-O-VN-的算法\"><a href=\"#3-3-O-VN-的算法\" class=\"headerlink\" title=\"3.3.O(VN)的算法\"></a>3.3.<code>O(VN)</code>的算法</h3><p>多重背包问题同样有<code>O(VN)</code>的算法。这个算法基于基本算法的状态转移方程，但应用单调队列的方法使每个状态的值可以以均摊O(1)的时间求解。由于用单调队列优化的DP已超出了<code>NOIP</code>的范围，故本文不再展开讲解。我最初了解到这个方法是在楼天成的“男人八题”幻灯片上。</p>\n<h3 id=\"3-4-小结\"><a href=\"#3-4-小结\" class=\"headerlink\" title=\"3.4.小结\"></a>3.4.小结</h3><p>这里我们看到了将一个算法的复杂度由<code>O(V*∑n[i])</code>改进到<code>O(V*∑log n[i])</code>的过程，还知道了存在应用超出<code>NOIP</code>范围的知识的<code>O(VN)</code>算法。希望你特别注意“拆分物品”的思想和方法，自己证明一下它的正确性，并用尽量简洁的程序来实现。</p>\n<h2 id=\"4-混合三种背包问题\"><a href=\"#4-混合三种背包问题\" class=\"headerlink\" title=\"4.混合三种背包问题\"></a>4.混合三种背包问题</h2><h3 id=\"4-1-问题\"><a href=\"#4-1-问题\" class=\"headerlink\" title=\"4.1.问题\"></a>4.1.问题</h3><p>如果将P01、P02、P03混合起来。也就是说，有的物品只可以取一次（01背包），有的物品可以取无限次（完全背包），有的物品可以取的次数有一个上限（多重背包）。应该怎么求解呢？</p>\n<h3 id=\"4-2-01背包与完全背包的混合\"><a href=\"#4-2-01背包与完全背包的混合\" class=\"headerlink\" title=\"4.2.01背包与完全背包的混合\"></a>4.2.01背包与完全背包的混合</h3><p>考虑到在P01和P02中最后给出的伪代码只有一处不同，故如果只有两类物品：一类物品只能取一次，另一类物品可以取无限次，那么只需在对每个物品应用转移方程时，根据物品的类别选用顺序或逆序的循环即可，复杂度是<code>O(VN)</code>。伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">if</span> 第i件物品是<span class=\"number\">01</span>背包</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> 第i件物品是完全背包</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V</span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-再加上多重背包\"><a href=\"#4-3-再加上多重背包\" class=\"headerlink\" title=\"4.3.再加上多重背包\"></a>4.3.再加上多重背包</h3><p>如果再加上有的物品最多可以取有限次，那么原则上也可以给出<code>O(VN)</code>的解法：遇到多重背包类型的物品用单调队列解即可。但如果不考虑超过NOIP范围的算法的话，用P03中将每个这类物品分成O(log n[i])个01背包的物品的方法也已经很优了。</p>\n<h3 id=\"4-4-小结\"><a href=\"#4-4-小结\" class=\"headerlink\" title=\"4.4.小结\"></a>4.4.小结</h3><p>有人说，困难的题目都是由简单的题目叠加而来的。这句话是否公理暂且存之不论，但它在本讲中已经得到了充分的体现。本来01背包、完全背包、多重背包都不是什么难题，但将它们简单地组合起来以后就得到了这样一道一定能吓倒不少人的题目。但只要基础扎实，领会三种基本背包问题的思想，就可以做到把困难的题目拆分成简单的题目来解决。</p>\n<h2 id=\"5-二维费用的背包问题\"><a href=\"#5-二维费用的背包问题\" class=\"headerlink\" title=\"5.二维费用的背包问题\"></a>5.二维费用的背包问题</h2><h3 id=\"5-1-问题\"><a href=\"#5-1-问题\" class=\"headerlink\" title=\"5.1.问题\"></a>5.1.问题</h3><p>二维费用的背包问题是指：对于每件物品，具有两种不同的费用；选择这件物品必须同时付出这两种代价；对于每种代价都有一个可付出的最大值（背包容量）。问怎样选择物品可以得到最大的价值。设这两种代价分别为代价1和代价2，第i件物品所需的两种代价分别为a[i]和b[i]。两种代价可付出的最大值（两种背包容量）分别为V和U。物品的价值为w[i]。</p>\n<h3 id=\"5-2-算法\"><a href=\"#5-2-算法\" class=\"headerlink\" title=\"5.2.算法\"></a>5.2.算法</h3><p>费用加了一维，只需状态也加一维即可。设<code>f[i][v][u]</code>表示前i件物品付出两种代价分别为v和u时可获得的最大价值。状态转移方程就是：<code>f [i][v][u]=max&#123;f[i-1][v][u],f[i-1][v-a[i]][u-b[i]]+w[i]&#125;</code>。如前述方法，可以只使用二维的数组：当每件物品只可以取一次时变量v和u采用顺序的循环，当物品有如完全背包问题时采用逆序的循环。当物品有如多重背包问题时拆分物品。</p>\n<h3 id=\"5-3-物品总个数的限制\"><a href=\"#5-3-物品总个数的限制\" class=\"headerlink\" title=\"5.3.物品总个数的限制\"></a>5.3.物品总个数的限制</h3><p>有时，“二维费用”的条件是以这样一种隐含的方式给出的：最多只能取M件物品。这事实上相当于每件物品多了一种“件数”的费用，每个物品的件数费用均为1，可以付出的最大件数费用为M。换句话说，设<code>f[v][m]</code>表示付出费用v、最多选m件时可得到的最大价值，则根据物品的类型（01、完全、多重）用不同的方法循环更新，最后在<code>f[0..V</code>][0..M]范围内寻找答案。</p>\n<p>另外，如果要求“恰取M件物品”，则在<code>f[0..V][M]</code>范围内寻找答案。</p>\n<h3 id=\"5-4-小结\"><a href=\"#5-4-小结\" class=\"headerlink\" title=\"5.4.小结\"></a>5.4.小结</h3><p>事实上，当发现由熟悉的动态规划题目变形得来的题目时，在原来的状态中加一纬以满足新的限制是一种比较通用的方法。希望你能从本讲中初步体会到这种方法。</p>\n<h2 id=\"6-分组的背包问题\"><a href=\"#6-分组的背包问题\" class=\"headerlink\" title=\"6.分组的背包问题\"></a>6.分组的背包问题</h2><h3 id=\"6-1-问题\"><a href=\"#6-1-问题\" class=\"headerlink\" title=\"6.1.问题\"></a>6.1.问题</h3><p>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。这些物品被划分为若干组，每组中的物品互相冲突，最多选一件。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p>\n<h3 id=\"6-2-算法\"><a href=\"#6-2-算法\" class=\"headerlink\" title=\"6.2.算法\"></a>6.2.算法</h3><p>这个问题变成了每组物品有若干种策略：是选择本组的某一件，还是一件都不选。也就是说设<code>f[k</code>][v]表示前k组物品花费费用v能取得的最大权值，则有<code>f[k][v]=max&#123;f[k-1][v],f[k-1][v-c[i]]+w[i]|</code>物品i属于第k组}。</p>\n<p>使用一维数组的伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 所有的组k</span><br><span class=\"line\"><span class=\"keyword\">for</span> 所有的i属于组k</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=V.<span class=\"number\">.0</span></span><br><span class=\"line\">f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>另外，显然可以对每组中的物品应用P02中“一个简单有效的优化”。</p>\n<h3 id=\"6-3-小结\"><a href=\"#6-3-小结\" class=\"headerlink\" title=\"6.3.小结\"></a>6.3.小结</h3><p>分组的背包问题将彼此互斥的若干物品称为一个组，这建立了一个很好的模型。不少背包问题的变形都可以转化为分组的背包问题（例如P07），由分组的背包问题进一步可定义“泛化物品”的概念，十分有利于解题。 </p>\n<h2 id=\"7-有依赖的背包问题\"><a href=\"#7-有依赖的背包问题\" class=\"headerlink\" title=\"7.有依赖的背包问题\"></a>7.有依赖的背包问题</h2><h3 id=\"7-1-简化的问题\"><a href=\"#7-1-简化的问题\" class=\"headerlink\" title=\"7.1.简化的问题\"></a>7.1.简化的问题</h3><p>这种背包问题的物品间存在某种“依赖”的关系。也就是说，i依赖于j，表示若选物品i，则必须选物品j。为了简化起见，我们先设没有某个物品既依赖于别的物品，又被别的物品所依赖；另外，没有某件物品同时依赖多件物品。</p>\n<h3 id=\"7-2-算法\"><a href=\"#7-2-算法\" class=\"headerlink\" title=\"7.2.算法\"></a>7.2.算法</h3><p>这个问题由NOIP2006金明的预算方案一题扩展而来。遵从该题的提法，将不依赖于别的物品的物品称为“主件”，依赖于某主件的物品称为“附件”。由这个问题的简化条件可知所有的物品由若干主件和依赖于每个主件的一个附件集合组成。</p>\n<p>按照背包问题的一般思路，仅考虑一个主件和它的附件集合。可是，可用的策略非常多，包括：一个也不选，仅选择主件，选择主件后再选择一个附件，选择主件后再选择两个附件……无法用状态转移方程来表示如此多的策略。（事实上，设有n个附件，则策略有2^n+1个，为指数级。）</p>\n<p>考虑到所有这些策略都是互斥的（也就是说，你只能选择一种策略），所以一个主件和它的附件集合实际上对应于P06中的一个物品组，每个选择了主件又选择了若干个附件的策略对应于这个物品组中的一个物品，其费用和价值都是这个策略中的物品的值的和。但仅仅是这一步转化并不能给出一个好的算法，因为物品组中的物品还是像原问题的策略一样多。</p>\n<p>再考虑P06中的一句话：可以对每组中的物品应用P02中“一个简单有效的优化”。这提示我们，对于一个物品组中的物品，所有费用相同的物品只留一个价值最大的，不影响结果。所以，我们可以对主件i的“附件集合”先进行一次01背包，得到费用依次为0..V-c[i]所有这些值时相应的最大价值f’[0..V-c[i]]。那么这个主件及它的附件集合相当于V-c[i]+1个物品的物品组，其中费用为c[i]+k的物品的价值为f’[k]+w[i]。也就是说原来指数级的策略中有很多策略都是冗余的，通过一次01背包后，将主件i转化为 V-c[i]+1个物品的物品组，就可以直接应用P06的算法解决问题了。</p>\n<h3 id=\"7-3-更一般的问题\"><a href=\"#7-3-更一般的问题\" class=\"headerlink\" title=\"7.3.更一般的问题\"></a>7.3.更一般的问题</h3><p>更一般的问题是：依赖关系以图论中“森林”的形式给出（森林即多叉树的集合），也就是说，主件的附件仍然可以具有自己的附件集合，限制只是每个物品最多只依赖于一个物品（只有一个主件）且不出现循环依赖。</p>\n<p>解决这个问题仍然可以用将每个主件及其附件集合转化为物品组的方式。唯一不同的是，由于附件可能还有附件，就不能将每个附件都看作一个一般的01 背包中的物品了。若这个附件也有附件集合，则它必定要被先转化为物品组，然后用分组的背包问题解出主件及其附件集合所对应的附件组中各个费用的附件所对应的价值。</p>\n<p>事实上，这是一种树形DP，其特点是每个父节点都需要对它的各个儿子的属性进行一次DP以求得自己的相关属性。这已经触及到了“泛化物品”的思想。看完P08后，你会发现这个“依赖关系树”每一个子树都等价于一件泛化物品，求某节点为根的子树对应的泛化物品相当于求其所有儿子的对应的泛化物品之和。</p>\n<h3 id=\"7-4-小结\"><a href=\"#7-4-小结\" class=\"headerlink\" title=\"7.4.小结\"></a>7.4.小结</h3><p>NOIP2006的那道背包问题我做得很失败，写了上百行的代码，却一分未得。后来我通过思考发现通过引入“物品组”和“依赖”的概念可以加深对这题的理解，还可以解决它的推广问题。用物品组的思想考虑那题中极其特殊的依赖关系：物品不能既作主件又作附件，每个主件最多有两个附件，可以发现一个主件和它的两个附件等价于一个由四个物品组成的物品组，这便揭示了问题的某种本质。</p>\n<p>我想说：失败不是什么丢人的事情，从失败中全无收获才是。</p>\n<h2 id=\"8-泛化物品\"><a href=\"#8-泛化物品\" class=\"headerlink\" title=\"8.泛化物品\"></a>8.泛化物品</h2><h3 id=\"8-1-定义\"><a href=\"#8-1-定义\" class=\"headerlink\" title=\"8.1.定义\"></a>8.1.定义</h3><p>考虑这样一种物品，它并没有固定的费用和价值，而是它的价值随着你分配给它的费用而变化。这就是泛化物品的概念。</p>\n<p>更严格的定义之。在背包容量为V的背包问题中，泛化物品是一个定义域为0..V中的整数的函数h，当分配给它的费用为v时，能得到的价值就是h(v)。</p>\n<p>这个定义有一点点抽象，另一种理解是一个泛化物品就是一个数组h[0..V]，给它费用v，可得到价值h[V]。</p>\n<p>一个费用为c价值为w的物品，如果它是01背包中的物品，那么把它看成泛化物品，它就是除了h(c)=w其它函数值都为0的一个函数。如果它是完全背包中的物品，那么它可以看成这样一个函数，仅当v被c整除时有h(v)=v/c<em>w，其它函数值均为0。如果它是多重背包中重复次数最多为n的物品，那么它对应的泛化物品的函数有h(v)=v/c</em>w仅当v被c整除且v/c&lt;=n，其它情况函数值均为0。</p>\n<p>一个物品组可以看作一个泛化物品h。对于一个0..V中的v，若物品组中不存在费用为v的的物品，则h(v)=0，否则h(v)为所有费用为v的物品的最大价值。P07中每个主件及其附件集合等价于一个物品组，自然也可看作一个泛化物品。</p>\n<h3 id=\"8-2-泛化物品的和\"><a href=\"#8-2-泛化物品的和\" class=\"headerlink\" title=\"8.2.泛化物品的和\"></a>8.2.泛化物品的和</h3><p>如果面对两个泛化物品h和l，要用给定的费用从这两个泛化物品中得到最大的价值，怎么求呢？事实上，对于一个给定的费用v，只需枚举将这个费用如何分配给两个泛化物品就可以了。同样的，对于0..V的每一个整数v，可以求得费用v分配到h和l中的最大价值f(v)。也即<code>f(v)=max&#123;h(k) +l(v-k)|0&lt;=k&lt;=v&#125;</code>。可以看到，f也是一个由泛化物品h和l决定的定义域为0..V的函数，也就是说，f是一个由泛化物品h和 l决定的泛化物品。</p>\n<p>由此可以定义泛化物品的和：h、l都是泛化物品，若泛化物品f满足<code>f(v)=max&#123;h(k)+l(v-k)|0&lt;=k&lt;=v&#125;</code>，则称f是h与l的和，即f=h+l。这个运算的时间复杂度是O(V^2)。</p>\n<p>泛化物品的定义表明：在一个背包问题中，若将两个泛化物品代以它们的和，不影响问题的答案。事实上，对于其中的物品都是泛化物品的背包问题，求它的答案的过程也就是求所有这些泛化物品之和的过程。设此和为s，则答案就是s[0..V]中的最大值。</p>\n<h3 id=\"8-3-背包问题的泛化物品\"><a href=\"#8-3-背包问题的泛化物品\" class=\"headerlink\" title=\"8.3.背包问题的泛化物品\"></a>8.3.背包问题的泛化物品</h3><p>一个背包问题中，可能会给出很多条件，包括每种物品的费用、价值等属性，物品之间的分组、依赖等关系等。但肯定能将问题对应于某个泛化物品。也就是说，给定了所有条件以后，就可以对每个非负整数v求得：若背包容量为v，将物品装入背包可得到的最大价值是多少，这可以认为是定义在非负整数集上的一件泛化物品。这个泛化物品——或者说问题所对应的一个定义域为非负整数的函数——包含了关于问题本身的高度浓缩的信息。一般而言，求得这个泛化物品的一个子域（例如0..V）的值之后，就可以根据这个函数的取值得到背包问题的最终答案。</p>\n<p>综上所述，一般而言，求解背包问题，即求解这个问题所对应的一个函数，即该问题的泛化物品。而求解某个泛化物品的一种方法就是将它表示为若干泛化物品的和然后求之。</p>\n<h3 id=\"8-4-小结\"><a href=\"#8-4-小结\" class=\"headerlink\" title=\"8.4.小结\"></a>8.4.小结</h3><p>本讲可以说都是我自己的原创思想。具体来说，是我在学习函数式编程的 Scheme 语言时，用函数编程的眼光审视各类背包问题得出的理论。这一讲真的很抽象，也许在“模型的抽象程度”这一方面已经超出了NOIP的要求，所以暂且看不懂也没关系。相信随着你的OI之路逐渐延伸，有一天你会理解的。</p>\n<p>我想说：“思考”是一个<code>OIer</code>最重要的品质。简单的问题，深入思考以后，也能发现更多。</p>\n<h2 id=\"9-背包问题问法的变化\"><a href=\"#9-背包问题问法的变化\" class=\"headerlink\" title=\"9.背包问题问法的变化\"></a>9.背包问题问法的变化</h2><p>以上涉及的各种背包问题都是要求在背包容量（费用）的限制下求可以取到的最大价值，但背包问题还有很多种灵活的问法，在这里值得提一下。但是我认为，只要深入理解了求背包问题最大价值的方法，即使问法变化了，也是不难想出算法的。</p>\n<p>例如，求解最多可以放多少件物品或者最多可以装满多少背包的空间。这都可以根据具体问题利用前面的方程求出所有状态的值（f数组）之后得到。</p>\n<p>还有，如果要求的是“总价值最小”“总件数最小”，只需简单的将上面的状态转移方程中的max改成min即可。</p>\n<p>下面说一些变化更大的问法。</p>\n<h3 id=\"9-1-输出方案\"><a href=\"#9-1-输出方案\" class=\"headerlink\" title=\"9.1.输出方案\"></a>9.1.输出方案</h3><p>一般而言，背包问题是要求一个最优值，如果要求输出这个最优值的方案，可以参照一般动态规划问题输出方案的方法：记录下每个状态的最优值是由状态转移方程的哪一项推出来的，换句话说，记录下它是由哪一个策略推出来的。便可根据这条策略找到上一个状态，从上一个状态接着向前推即可。</p>\n<p>还是以01背包为例，方程为<code>f[i][v]=max&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>。再用一个数组g[i] [v]，设<code>g[i][v]=0</code>表示推出<code>f[i</code>][v]的值时是采用了方程的前一项（也即<code>f[i][v]=f[i-1][v]</code>），<code>g[i][v]</code>表示采用了方程的后一项。注意这两项分别表示了两种策略：未选第i个物品及选了第i个物品。那么输出方案的伪代码可以这样写（设最终状态为<code>f[N</code>][V]）：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i=N</span><br><span class=\"line\">v=V</span><br><span class=\"line\">while(i&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span>(g[i][v]==<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;未选第i项物品&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(g[i][v]==<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;选了第i项物品&quot;</span></span><br><span class=\"line\">v=v-c[i]</span><br></pre></td></tr></table></figure>\n\n<p>另外，采用方程的前一项或后一项也可以在输出方案的过程中根据f[i][v]的值实时地求出来，也即不须纪录g数组，将上述代码中的<code>g[i] [v]==0</code>改成<code>f[i][v]==f[i-1][v]</code>，<code>g[i][v]==1</code>改成<code>f[i][v]==f[i-1][v-c[i]]+w[i]</code>也可。</p>\n<h3 id=\"9-2-输出字典序最小的最优方案\"><a href=\"#9-2-输出字典序最小的最优方案\" class=\"headerlink\" title=\"9.2.输出字典序最小的最优方案\"></a>9.2.输出字典序最小的最优方案</h3><p>这里“字典序最小”的意思是1..N号物品的选择方案排列出来以后字典序最小。以输出01背包最小字典序的方案为例。</p>\n<p>一般而言，求一个字典序最小的最优方案，只需要在转移时注意策略。首先，子问题的定义要略改一些。我们注意到，如果存在一个选了物品1的最优方案，那么答案一定包含物品1，原问题转化为一个背包容量为v-c[1]，物品为2..N的子问题。反之，如果答案不包含物品1，则转化成背包容量仍为V，物品为2..N的子问题。不管答案怎样，子问题的物品都是以i..N而非前所述的1..i的形式来定义的，所以状态的定义和转移方程都需要改一下。但也许更简易的方法是先把物品逆序排列一下，以下按物品已被逆序排列来叙述。</p>\n<p>在这种情况下，可以按照前面经典的状态转移方程来求值，只是输出方案的时候要注意：从N到1输入时，如果<code>f[i][v]==f[i-v]</code>及<code>f[i][v]==f[i-1][f-c[i]]+w[i]</code>同时成立，应该按照后者（即选择了物品i）来输出方案。</p>\n<p>求方案总数<br>对于一个给定了背包容量、物品费用、物品间相互关系（分组、依赖等）的背包问题，除了再给定每个物品的价值后求可得到的最大价值外，还可以得到装满背包或将背包装至某一指定容量的方案总数。</p>\n<p>对于这类改变问法的问题，一般只需将状态转移方程中的max改成sum即可。例如若每件物品均是01背包中的物品，转移方程即为<code>f[i][v]=sum&#123;f[i-1][v],f[i-1][v-c[i]]+w[i]&#125;</code>，初始条件<code>f[0][0]=1</code>。</p>\n<p>事实上，这样做可行的原因在于状态转移方程已经考察了所有可能的背包组成方案。</p>\n<h3 id=\"9-3-最优方案的总数\"><a href=\"#9-3-最优方案的总数\" class=\"headerlink\" title=\"9.3.最优方案的总数\"></a>9.3.最优方案的总数</h3><p>这里的最优方案是指物品总价值最大的方案。还是以01背包为例。</p>\n<p>结合求最大总价值和方案总数两个问题的思路，最优方案的总数可以这样求：f[i][v]意义同前述，g[i][v]表示这个子问题的最优方案的总数，则在求f[i][v]的同时求g[i][v]的伪代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1.</span>.N</span><br><span class=\"line\"><span class=\"keyword\">for</span> v=<span class=\"number\">0.</span>.V</span><br><span class=\"line\">f[i][v]=max&#123;f[i<span class=\"number\">-1</span>][v],f[i<span class=\"number\">-1</span>][v-c[i]]+w[i]&#125;</span><br><span class=\"line\">g[i][v]=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(f[i][v]==f[i<span class=\"number\">-1</span>][v])</span><br><span class=\"line\">inc(g[i][v],g[i<span class=\"number\">-1</span>][v]</span><br><span class=\"line\"><span class=\"keyword\">if</span>(f[i][v]==f[i<span class=\"number\">-1</span>][v-c[i]]+w[i])</span><br><span class=\"line\">inc(g[i][v],g[i<span class=\"number\">-1</span>][v-c[i]])</span><br></pre></td></tr></table></figure>\n\n<p>如果你是第一次看到这样的问题，请仔细体会上面的伪代码。</p>\n<h3 id=\"9-4-小结\"><a href=\"#9-4-小结\" class=\"headerlink\" title=\"9.4.小结\"></a>9.4.小结</h3><p>显然，这里不可能穷尽背包类动态规划问题所有的问法。甚至还存在一类将背包类动态规划问题与其它领域（例如数论、图论）结合起来的问题，在这篇论背包问题的专文中也不会论及。但只要深刻领会前述所有类别的背包问题的思路和状态转移方程，遇到其它的变形问法，只要题目难度还属于NOIP，应该也不难想出算法。</p>\n<p>触类旁通、举一反三，应该也是一个OIer应有的品质吧。</p>"},{"title":"01背包问题(go实现)","date":"2023-02-27T02:19:04.000Z","_content":"\n# 01背包问题(go实现)\n\n## 1.问题\n\n有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。\n\n第 i 件物品的体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\n输出最大价值。\n\n输入格式\n\n​    第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。\n\n​\t接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。\n\n输出格式\n\n​    输出一个整数，表示最大价值。\n\n数据范围\n\n​    0<N,V≤1000\n\n​    0<vi,wi≤1000\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t/*\n\t   问题：\n\t   有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。\n\n\t   第 i 件物品的体积是 vi，价值是 wi。\n\n\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\t   输出最大价值。\n\n\t   输入格式\n\t   第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。\n\n\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。\n\n\t   输出格式\n\t   输出一个整数，表示最大价值。\n\n\t   数据范围\n\t   0<N,V≤1000\n\t   0<vi,wi≤1000\n\n\t*/\n\toptimize()\n\t// simplicity()\n}\n\nfunc max(x, y int) int {\n\tif x < y {\n\t\treturn y\n\t} else {\n\t\treturn x\n\t}\n}\n\nfunc simplicity() {\n\t/*\n\t\t思路：\n\t\t   1、朴素实现\n\t\t   f[i][j]:表示前i件物品恰放入一个容量为j的背包可以获得的最大价值。\n\n\t\t   转移方程：\n\t\t   1.不选第i件物品。\n\t\t   f[i][j]=f[i-1][j]\n\n\t\t   2.选择第i件物品。\n\t\t   f[i][j]=f[i-1][j-v[i]]+w[i]\n\n\t\t   汇总：\n\t\t   f[i][j]=max{f[i-1][j],f[i-1][j-v[i]]+w[i]}\n\n\t\t复杂度：\n\t\t\t时间和空间复杂度均为O(N*V)\n\n\t*/\n\tconst N = 1010\n\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N][N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := 0; j <= m; j++ {\n\t\t\tf[i][j] = f[i-1][j]\n\t\t\tif j >= v[i] {\n\t\t\t\tf[i][j] = max(f[i][j], f[i-1][j-v[i]]+w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[n][m])\n}\n\nfunc optimize() {\n\t/*\n\t\t1、优化空间复杂度\n\t\t   f[j]:表示容量为j的背包可以获得的最大价值。\n\n\t\t   转移方程：\n\t\t   1.不选第i件物品。\n\t\t   f[j]=f[j]\n\n\t\t   2.选择第i件物品。\n\t\t   f[j]=f[j-v[i]]+w[i]\n\n\t\t   汇总：\n\t\t   f[j]=max{f[j],f[j-v[i]]+w[i]}\n\n\t\t复杂度：\n\t\t\t时间复杂度均为O(N*V)\n\t\t\t空间复杂度均为O(V)\n\n\t*/\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t\tfor j := m; j >= v[i]; j-- {\n\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])\n\t\t}\n\t}\n\tfmt.Println(f[m])\n}\n\n```\n\n\n\n\n\n","source":"_posts/8.01背包问题-go实现.md","raw":"---\ntitle: 01背包问题(go实现)\ndate: 2023-02-27 10:19:04\ntags:\n- 01背包问题\n- go\ncategories:\n- 技术\n---\n\n# 01背包问题(go实现)\n\n## 1.问题\n\n有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。\n\n第 i 件物品的体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\n输出最大价值。\n\n输入格式\n\n​    第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。\n\n​\t接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。\n\n输出格式\n\n​    输出一个整数，表示最大价值。\n\n数据范围\n\n​    0<N,V≤1000\n\n​    0<vi,wi≤1000\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t/*\n\t   问题：\n\t   有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。\n\n\t   第 i 件物品的体积是 vi，价值是 wi。\n\n\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\t   输出最大价值。\n\n\t   输入格式\n\t   第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。\n\n\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。\n\n\t   输出格式\n\t   输出一个整数，表示最大价值。\n\n\t   数据范围\n\t   0<N,V≤1000\n\t   0<vi,wi≤1000\n\n\t*/\n\toptimize()\n\t// simplicity()\n}\n\nfunc max(x, y int) int {\n\tif x < y {\n\t\treturn y\n\t} else {\n\t\treturn x\n\t}\n}\n\nfunc simplicity() {\n\t/*\n\t\t思路：\n\t\t   1、朴素实现\n\t\t   f[i][j]:表示前i件物品恰放入一个容量为j的背包可以获得的最大价值。\n\n\t\t   转移方程：\n\t\t   1.不选第i件物品。\n\t\t   f[i][j]=f[i-1][j]\n\n\t\t   2.选择第i件物品。\n\t\t   f[i][j]=f[i-1][j-v[i]]+w[i]\n\n\t\t   汇总：\n\t\t   f[i][j]=max{f[i-1][j],f[i-1][j-v[i]]+w[i]}\n\n\t\t复杂度：\n\t\t\t时间和空间复杂度均为O(N*V)\n\n\t*/\n\tconst N = 1010\n\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N][N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := 0; j <= m; j++ {\n\t\t\tf[i][j] = f[i-1][j]\n\t\t\tif j >= v[i] {\n\t\t\t\tf[i][j] = max(f[i][j], f[i-1][j-v[i]]+w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[n][m])\n}\n\nfunc optimize() {\n\t/*\n\t\t1、优化空间复杂度\n\t\t   f[j]:表示容量为j的背包可以获得的最大价值。\n\n\t\t   转移方程：\n\t\t   1.不选第i件物品。\n\t\t   f[j]=f[j]\n\n\t\t   2.选择第i件物品。\n\t\t   f[j]=f[j-v[i]]+w[i]\n\n\t\t   汇总：\n\t\t   f[j]=max{f[j],f[j-v[i]]+w[i]}\n\n\t\t复杂度：\n\t\t\t时间复杂度均为O(N*V)\n\t\t\t空间复杂度均为O(V)\n\n\t*/\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t\tfor j := m; j >= v[i]; j-- {\n\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])\n\t\t}\n\t}\n\tfmt.Println(f[m])\n}\n\n```\n\n\n\n\n\n","slug":"8.01背包问题-go实现","published":1,"updated":"2023-03-28T07:56:35.784Z","_id":"clfrxyv1q000l2cfv3zw93eds","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"01背包问题-go实现\"><a href=\"#01背包问题-go实现\" class=\"headerlink\" title=\"01背包问题(go实现)\"></a>01背包问题(go实现)</h1><h2 id=\"1-问题\"><a href=\"#1-问题\" class=\"headerlink\" title=\"1.问题\"></a>1.问题</h2><p>有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。</p>\n<p>第 i 件物品的体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</p>\n<p>输出最大价值。</p>\n<p>输入格式</p>\n<p>​    第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。</p>\n<p>​    接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。</p>\n<p>输出格式</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>​    0&lt;N,V≤1000</p>\n<p>​    0&lt;vi,wi≤1000</p>\n<span id=\"more\"></span>\n\n<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t   问题：</span></span><br><span class=\"line\"><span class=\"comment\">\t   有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   第 i 件物品的体积是 vi，价值是 wi。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输入格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输出格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出一个整数，表示最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   数据范围</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;N,V≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;vi,wi≤1000</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\toptimize()</span><br><span class=\"line\">\t<span class=\"comment\">// simplicity()</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(x, y <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> x &lt; y &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> y</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">simplicity</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t思路：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1、朴素实现</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]:表示前i件物品恰放入一个容量为j的背包可以获得的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1.不选第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=f[i-1][j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   2.选择第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=f[i-1][j-v[i]]+w[i]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=max&#123;f[i-1][j],f[i-1][j-v[i]]+w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t时间和空间复杂度均为O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N][N]<span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := <span class=\"number\">0</span>; j &lt;= m; j++ &#123;</span><br><span class=\"line\">\t\t\tf[i][j] = f[i<span class=\"number\">-1</span>][j]</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> j &gt;= v[i] &#123;</span><br><span class=\"line\">\t\t\t\tf[i][j] = max(f[i][j], f[i<span class=\"number\">-1</span>][j-v[i]]+w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[n][m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">optimize</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1、优化空间复杂度</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]:表示容量为j的背包可以获得的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1.不选第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=f[j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   2.选择第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=f[j-v[i]]+w[i]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=max&#123;f[j],f[j-v[i]]+w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t时间复杂度均为O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t空间复杂度均为O(V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N]<span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := m; j &gt;= v[i]; j-- &#123;</span><br><span class=\"line\">\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"excerpt":"<h1 id=\"01背包问题-go实现\"><a href=\"#01背包问题-go实现\" class=\"headerlink\" title=\"01背包问题(go实现)\"></a>01背包问题(go实现)</h1><h2 id=\"1-问题\"><a href=\"#1-问题\" class=\"headerlink\" title=\"1.问题\"></a>1.问题</h2><p>有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。</p>\n<p>第 i 件物品的体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</p>\n<p>输出最大价值。</p>\n<p>输入格式</p>\n<p>​    第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。</p>\n<p>​    接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。</p>\n<p>输出格式</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围</p>\n<p>​    0&lt;N,V≤1000</p>\n<p>​    0&lt;vi,wi≤1000</p>","more":"<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t   问题：</span></span><br><span class=\"line\"><span class=\"comment\">\t   有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   第 i 件物品的体积是 vi，价值是 wi。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输入格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输出格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出一个整数，表示最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   数据范围</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;N,V≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;vi,wi≤1000</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\toptimize()</span><br><span class=\"line\">\t<span class=\"comment\">// simplicity()</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(x, y <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> x &lt; y &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> y</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">simplicity</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t思路：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1、朴素实现</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]:表示前i件物品恰放入一个容量为j的背包可以获得的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1.不选第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=f[i-1][j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   2.选择第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=f[i-1][j-v[i]]+w[i]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[i][j]=max&#123;f[i-1][j],f[i-1][j-v[i]]+w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t时间和空间复杂度均为O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N][N]<span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := <span class=\"number\">0</span>; j &lt;= m; j++ &#123;</span><br><span class=\"line\">\t\t\tf[i][j] = f[i<span class=\"number\">-1</span>][j]</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> j &gt;= v[i] &#123;</span><br><span class=\"line\">\t\t\t\tf[i][j] = max(f[i][j], f[i<span class=\"number\">-1</span>][j-v[i]]+w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[n][m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">optimize</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1、优化空间复杂度</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]:表示容量为j的背包可以获得的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   1.不选第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=f[j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   2.选择第i件物品。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=f[j-v[i]]+w[i]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t   汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t   f[j]=max&#123;f[j],f[j-v[i]]+w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t时间复杂度均为O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t空间复杂度均为O(V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N]<span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := m; j &gt;= v[i]; j-- &#123;</span><br><span class=\"line\">\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"完全背包问题(go实现)","date":"2023-02-27T09:26:21.000Z","_content":"\n# 完全背包问题(go实现)\n\n## 1.题目\n\n有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。\n\n第 i 种物品的体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\n输出最大价值。\n\n输入格式：\n\n​\t第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。\n\n​\t接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。\n\n输出格式：\n\n​\t输出一个整数，表示最大价值。\n\n数据范围：\n\n​\t0<N,V≤1000\n\n​\t0<vi,wi≤1000\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t/*\n\t   题目：\n\t   有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。\n\n\t   第 i 种物品的体积是 vi，价值是 wi。\n\n\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\t   输出最大价值。\n\n\t   输入格式\n\t   第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。\n\n\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。\n\n\t   输出格式\n\t   输出一个整数，表示最大价值。\n\n\t   数据范围\n\t   0<N,V≤1000\n\t   0<vi,wi≤1000\n\t*/\n\tsimplicity()\n\t// optimize()\n}\n\nfunc max(x, y int) int {\n\tif x < y {\n\t\treturn y\n\t}\n\treturn x\n}\n\nfunc simplicity() {\n\n\t/*\n\t\t1.朴素解法\n\t\t状态表示：f[i][j] 表示考虑前i个物品的情况下，总体积为j时的最大价值。\n\n\t\t转移方程：\n\t\t1.不考虑i个物品的情况\n\t\tf[i][j] = f[i-1][j]\n\n\t\t2.考虑第i个物品的情况\n\t\tf[i][j] = f[i-1][j-k*v[i]]+k*w[i]  k在体积足够的情况下穷举\n\n\t\t汇总：\n\t\tf[i][j] = max{f[i-1][j],f[i-1][j-k*v[i]]+k*w[i]} k在体积足够的情况下穷举\n\n\n\t\t复杂度：\n\t\t时间复杂度O(N*V*K)\n\t\t空间复杂度O(N*V)\n\n\t*/\n\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N][N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := m; j >= v[i]; j-- {\n\t\t\tfor k := 0; k*v[i] <= j; k++ {\n\t\t\t\tf[i][j] = max(f[i-1][j], f[i-1][j-k*v[i]]+k*w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[n][m])\n}\n\nfunc optimize() {\n\t/*\n\t\t2.优化实现\n\t\t状态表示：f[i]表示总体积为i时的最大价值。\n\n\t\t转移方程：\n\t\tfor i=1...n\n\t\tfor j=0...m\n\t\tf[j]= max{f[j], f[j - v[i]] + w[i]}\n\n\t\t复杂度：\n\t\t时间复杂度O(VN)\n\t\t空间复杂度O(V)\n\n\n\t\t证明一下转移方程的正确性（数学归纳法）：\n\t\t初始条件：f[0] = 0\n\t\t1、假设考虑前i-1个物品之后，所有的f[j]是正确的。\n\t\t2、证明： 考虑完i个物品之后，所有的f[j]是正确的。\n\n\t\t对某个j而言，如果最优解中包含k个v[i]，\n\t\t则有：\n\t\tf[j - k*v[i]] 不包含第i个物品的情况；此时所有的f[j]是正确的。 ------ （假设条件）\n\n\t\t递推：\n\t\t转移方程：\tf[j] = max{ f[j], f[j - v[i]] + w[i] }\n\t\t则\n\t\tf[j] = max{f[j],f[j - (k-1)*v[i] -v[i]] + w[i]}  包含1个v[i]的情况\n\t\t...\n\t\tf[j] = max{f[j], f[j - v[i]] + w[i]} 包含k-1个v[i]的情况\n\t\tf[j] = max{f[j], f[j]} 包含k个v[i]的情况\n\t\t表明，在考虑完第i个物品之后，所有的f[j]也是正确的。\n\t\t证毕。\n\t*/\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := 0; j <= m; j++ {\n\t\t\tif j >= v[i] {\n\t\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[m])\n}\n\n```\n\n","source":"_posts/9.完全背包问题-go实现.md","raw":"---\ntitle: 完全背包问题(go实现)\ndate: 2023-02-27 17:26:21\ntags:\n- 完全背包\n- go\n- 算法\ncategories:\n- 技术\n- 算法\n---\n\n# 完全背包问题(go实现)\n\n## 1.题目\n\n有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。\n\n第 i 种物品的体积是 vi，价值是 wi。\n\n求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\n输出最大价值。\n\n输入格式：\n\n​\t第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。\n\n​\t接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。\n\n输出格式：\n\n​\t输出一个整数，表示最大价值。\n\n数据范围：\n\n​\t0<N,V≤1000\n\n​\t0<vi,wi≤1000\n\n<!--more-->\n\n## 2.解题思路及代码实现\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\t/*\n\t   题目：\n\t   有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。\n\n\t   第 i 种物品的体积是 vi，价值是 wi。\n\n\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。\n\t   输出最大价值。\n\n\t   输入格式\n\t   第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。\n\n\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。\n\n\t   输出格式\n\t   输出一个整数，表示最大价值。\n\n\t   数据范围\n\t   0<N,V≤1000\n\t   0<vi,wi≤1000\n\t*/\n\tsimplicity()\n\t// optimize()\n}\n\nfunc max(x, y int) int {\n\tif x < y {\n\t\treturn y\n\t}\n\treturn x\n}\n\nfunc simplicity() {\n\n\t/*\n\t\t1.朴素解法\n\t\t状态表示：f[i][j] 表示考虑前i个物品的情况下，总体积为j时的最大价值。\n\n\t\t转移方程：\n\t\t1.不考虑i个物品的情况\n\t\tf[i][j] = f[i-1][j]\n\n\t\t2.考虑第i个物品的情况\n\t\tf[i][j] = f[i-1][j-k*v[i]]+k*w[i]  k在体积足够的情况下穷举\n\n\t\t汇总：\n\t\tf[i][j] = max{f[i-1][j],f[i-1][j-k*v[i]]+k*w[i]} k在体积足够的情况下穷举\n\n\n\t\t复杂度：\n\t\t时间复杂度O(N*V*K)\n\t\t空间复杂度O(N*V)\n\n\t*/\n\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N][N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := m; j >= v[i]; j-- {\n\t\t\tfor k := 0; k*v[i] <= j; k++ {\n\t\t\t\tf[i][j] = max(f[i-1][j], f[i-1][j-k*v[i]]+k*w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[n][m])\n}\n\nfunc optimize() {\n\t/*\n\t\t2.优化实现\n\t\t状态表示：f[i]表示总体积为i时的最大价值。\n\n\t\t转移方程：\n\t\tfor i=1...n\n\t\tfor j=0...m\n\t\tf[j]= max{f[j], f[j - v[i]] + w[i]}\n\n\t\t复杂度：\n\t\t时间复杂度O(VN)\n\t\t空间复杂度O(V)\n\n\n\t\t证明一下转移方程的正确性（数学归纳法）：\n\t\t初始条件：f[0] = 0\n\t\t1、假设考虑前i-1个物品之后，所有的f[j]是正确的。\n\t\t2、证明： 考虑完i个物品之后，所有的f[j]是正确的。\n\n\t\t对某个j而言，如果最优解中包含k个v[i]，\n\t\t则有：\n\t\tf[j - k*v[i]] 不包含第i个物品的情况；此时所有的f[j]是正确的。 ------ （假设条件）\n\n\t\t递推：\n\t\t转移方程：\tf[j] = max{ f[j], f[j - v[i]] + w[i] }\n\t\t则\n\t\tf[j] = max{f[j],f[j - (k-1)*v[i] -v[i]] + w[i]}  包含1个v[i]的情况\n\t\t...\n\t\tf[j] = max{f[j], f[j - v[i]] + w[i]} 包含k-1个v[i]的情况\n\t\tf[j] = max{f[j], f[j]} 包含k个v[i]的情况\n\t\t表明，在考虑完第i个物品之后，所有的f[j]也是正确的。\n\t\t证毕。\n\t*/\n\tconst N = 1010\n\tvar n, m int\n\tvar v, w [N]int\n\tvar f [N]int\n\n\tfmt.Scanf(\"%d %d\\n\", &n, &m)\n\tfor i := 1; i <= n; i++ {\n\t\tfmt.Scanf(\"%d %d\\n\", &v[i], &w[i])\n\t}\n\n\tfor i := 1; i <= n; i++ {\n\t\tfor j := 0; j <= m; j++ {\n\t\t\tif j >= v[i] {\n\t\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(f[m])\n}\n\n```\n\n","slug":"9.完全背包问题-go实现","published":1,"updated":"2023-03-28T08:02:12.376Z","_id":"clfrxyv1r000p2cfvg4w0a3hx","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"完全背包问题-go实现\"><a href=\"#完全背包问题-go实现\" class=\"headerlink\" title=\"完全背包问题(go实现)\"></a>完全背包问题(go实现)</h1><h2 id=\"1-题目\"><a href=\"#1-题目\" class=\"headerlink\" title=\"1.题目\"></a>1.题目</h2><p>有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。</p>\n<p>第 i 种物品的体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</p>\n<p>输出最大价值。</p>\n<p>输入格式：</p>\n<p>​    第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。</p>\n<p>​    接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。</p>\n<p>输出格式：</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围：</p>\n<p>​    0&lt;N,V≤1000</p>\n<p>​    0&lt;vi,wi≤1000</p>\n<span id=\"more\"></span>\n\n<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t   题目：</span></span><br><span class=\"line\"><span class=\"comment\">\t   有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   第 i 种物品的体积是 vi，价值是 wi。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输入格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输出格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出一个整数，表示最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   数据范围</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;N,V≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;vi,wi≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\tsimplicity()</span><br><span class=\"line\">\t<span class=\"comment\">// optimize()</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(x, y <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> x &lt; y &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> y</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">simplicity</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1.朴素解法</span></span><br><span class=\"line\"><span class=\"comment\">\t\t状态表示：f[i][j] 表示考虑前i个物品的情况下，总体积为j时的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1.不考虑i个物品的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = f[i-1][j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t2.考虑第i个物品的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = f[i-1][j-k*v[i]]+k*w[i]  k在体积足够的情况下穷举</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = max&#123;f[i-1][j],f[i-1][j-k*v[i]]+k*w[i]&#125; k在体积足够的情况下穷举</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t时间复杂度O(N*V*K)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t空间复杂度O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N][N]<span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := m; j &gt;= v[i]; j-- &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> k := <span class=\"number\">0</span>; k*v[i] &lt;= j; k++ &#123;</span><br><span class=\"line\">\t\t\t\tf[i][j] = max(f[i<span class=\"number\">-1</span>][j], f[i<span class=\"number\">-1</span>][j-k*v[i]]+k*w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[n][m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">optimize</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t2.优化实现</span></span><br><span class=\"line\"><span class=\"comment\">\t\t状态表示：f[i]表示总体积为i时的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfor i=1...n</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfor j=0...m</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j]= max&#123;f[j], f[j - v[i]] + w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t时间复杂度O(VN)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t空间复杂度O(V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t证明一下转移方程的正确性（数学归纳法）：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t初始条件：f[0] = 0</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1、假设考虑前i-1个物品之后，所有的f[j]是正确的。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t2、证明： 考虑完i个物品之后，所有的f[j]是正确的。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t对某个j而言，如果最优解中包含k个v[i]，</span></span><br><span class=\"line\"><span class=\"comment\">\t\t则有：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j - k*v[i]] 不包含第i个物品的情况；此时所有的f[j]是正确的。 ------ （假设条件）</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t递推：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：\tf[j] = max&#123; f[j], f[j - v[i]] + w[i] &#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t则</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j],f[j - (k-1)*v[i] -v[i]] + w[i]&#125;  包含1个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\t...</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j], f[j - v[i]] + w[i]&#125; 包含k-1个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j], f[j]&#125; 包含k个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\t表明，在考虑完第i个物品之后，所有的f[j]也是正确的。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t证毕。</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N]<span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := <span class=\"number\">0</span>; j &lt;= m; j++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> j &gt;= v[i] &#123;</span><br><span class=\"line\">\t\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h1 id=\"完全背包问题-go实现\"><a href=\"#完全背包问题-go实现\" class=\"headerlink\" title=\"完全背包问题(go实现)\"></a>完全背包问题(go实现)</h1><h2 id=\"1-题目\"><a href=\"#1-题目\" class=\"headerlink\" title=\"1.题目\"></a>1.题目</h2><p>有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。</p>\n<p>第 i 种物品的体积是 vi，价值是 wi。</p>\n<p>求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</p>\n<p>输出最大价值。</p>\n<p>输入格式：</p>\n<p>​    第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。</p>\n<p>​    接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。</p>\n<p>输出格式：</p>\n<p>​    输出一个整数，表示最大价值。</p>\n<p>数据范围：</p>\n<p>​    0&lt;N,V≤1000</p>\n<p>​    0&lt;vi,wi≤1000</p>","more":"<h2 id=\"2-解题思路及代码实现\"><a href=\"#2-解题思路及代码实现\" class=\"headerlink\" title=\"2.解题思路及代码实现\"></a>2.解题思路及代码实现</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t   题目：</span></span><br><span class=\"line\"><span class=\"comment\">\t   有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   第 i 种物品的体积是 vi，价值是 wi。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输入格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   输出格式</span></span><br><span class=\"line\"><span class=\"comment\">\t   输出一个整数，表示最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t   数据范围</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;N,V≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t   0&lt;vi,wi≤1000</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\tsimplicity()</span><br><span class=\"line\">\t<span class=\"comment\">// optimize()</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(x, y <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> x &lt; y &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> y</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">simplicity</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1.朴素解法</span></span><br><span class=\"line\"><span class=\"comment\">\t\t状态表示：f[i][j] 表示考虑前i个物品的情况下，总体积为j时的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1.不考虑i个物品的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = f[i-1][j]</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t2.考虑第i个物品的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = f[i-1][j-k*v[i]]+k*w[i]  k在体积足够的情况下穷举</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t汇总：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[i][j] = max&#123;f[i-1][j],f[i-1][j-k*v[i]]+k*w[i]&#125; k在体积足够的情况下穷举</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t时间复杂度O(N*V*K)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t空间复杂度O(N*V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N][N]<span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := m; j &gt;= v[i]; j-- &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> k := <span class=\"number\">0</span>; k*v[i] &lt;= j; k++ &#123;</span><br><span class=\"line\">\t\t\t\tf[i][j] = max(f[i<span class=\"number\">-1</span>][j], f[i<span class=\"number\">-1</span>][j-k*v[i]]+k*w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[n][m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">optimize</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t2.优化实现</span></span><br><span class=\"line\"><span class=\"comment\">\t\t状态表示：f[i]表示总体积为i时的最大价值。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfor i=1...n</span></span><br><span class=\"line\"><span class=\"comment\">\t\tfor j=0...m</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j]= max&#123;f[j], f[j - v[i]] + w[i]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t复杂度：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t时间复杂度O(VN)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t空间复杂度O(V)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t证明一下转移方程的正确性（数学归纳法）：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t初始条件：f[0] = 0</span></span><br><span class=\"line\"><span class=\"comment\">\t\t1、假设考虑前i-1个物品之后，所有的f[j]是正确的。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t2、证明： 考虑完i个物品之后，所有的f[j]是正确的。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t对某个j而言，如果最优解中包含k个v[i]，</span></span><br><span class=\"line\"><span class=\"comment\">\t\t则有：</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j - k*v[i]] 不包含第i个物品的情况；此时所有的f[j]是正确的。 ------ （假设条件）</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t\t递推：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t转移方程：\tf[j] = max&#123; f[j], f[j - v[i]] + w[i] &#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t则</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j],f[j - (k-1)*v[i] -v[i]] + w[i]&#125;  包含1个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\t...</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j], f[j - v[i]] + w[i]&#125; 包含k-1个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\tf[j] = max&#123;f[j], f[j]&#125; 包含k个v[i]的情况</span></span><br><span class=\"line\"><span class=\"comment\">\t\t表明，在考虑完第i个物品之后，所有的f[j]也是正确的。</span></span><br><span class=\"line\"><span class=\"comment\">\t\t证毕。</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> N = <span class=\"number\">1010</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> n, m <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> v, w [N]<span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> f [N]<span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;n, &amp;m)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\tfmt.Scanf(<span class=\"string\">&quot;%d %d\\n&quot;</span>, &amp;v[i], &amp;w[i])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= n; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j := <span class=\"number\">0</span>; j &lt;= m; j++ &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> j &gt;= v[i] &#123;</span><br><span class=\"line\">\t\t\t\tf[j] = max(f[j], f[j-v[i]]+w[i])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(f[m])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"11.使用kubeadm搭建k8s集群","date":"2023-03-28T07:54:57.000Z","_content":"\n# 使用kubeadm搭建k8s集群\n\n## 1.安装环境准备\n\n### 1.1.云服务器准备\n\n|  IP地址  |    节点角色     | CPU  | Memory | Hostname |\n| :------: | :-------------: | :--: | :----: | :------: |\n| 10.0.1.9 | master and etcd | >=2c |  >=2G  |  master  |\n| 10.0.1.5 |      node       | >=2c |  >=2G  |  node1   |\n\n### 1.2.软件版本\n\n|  系统类型  | Kubernetes版本 | docker版本 | kubeadm版本 | kubectl版本 | kubelet版本 |\n| :--------: | :------------: | :--------: | :---------: | :---------: | :---------: |\n| CentOS 7.6 |    v1.17.4     | 19.03.8-ce |   v1.17.4   |   v1.17.4   |   v1.17.4   |\n\n<!--more-->\n\n### 1.3.云服务器环境初始化操作\n\n#### 1.3.1.设置主机名 \n\n```bash\n#master是设置名称 2台设备分别是 master node1\nhostnamectl set-hostname master \n```\n\n#### 1.3.2.修改host文件 \n\n```bash\nvim /etc/hosts\n\n#添加\n10.0.1.9 master\n10.0.1.5 node1\n```\n\n#### 1.3.3.关闭selinux\n\n```bash\n#实时动态关闭\nsetenforce 0 \n\n#禁止重启后自动开启\nsed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config \n```\n\n#### 1.3.4.关闭交换分区\n\n```bash\n#实时动态关闭\nswapoff -a \n\n#禁止重启后自动开启\nsed -i '/ swap / s/^/#/' /etc/fstab \n```\n\n#### 1.3.5.网络配置文件\n\n```bash\ncat > /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nvm.swappiness=0\n\n#退出 按 Ctrl + D\n\n#执行该命令 如果不执行就会在应用k8s.conf时出现加载错误\nmodprobe br_netfilter  \n\n#应用配置文件\nsysctl -p /etc/sysctl.d/k8s.conf\n```\n\n#### 1.3.6.配置资源地址\n\n```bash\nyum install wget -y  #安装wget命令行\n\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  #配置yum源\n\nyum makecache #更新缓存\n\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo #配置docker下载的地址\n```\n\n#### 1.3.7.安装Docker\n\n```bash\nyum list docker-ce --showduplicates|sort -r  #展示版本列表\n\nyum install -y docker-ce  #默认安装最新版，也可以指定版本下载\n\nsystemctl start docker #启动docker\nsystemctl enable docker #将docker加入到开机启动\n\ndocker version #查看docker启动情况 和版本信息\n\n# 如果安装的docker版本使用的cgroups，按以下方式修改为systemd\nvim /etc/docker/daemon.json\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"registry-mirrors\": [\"https://mj9kvemk.mirror.aliyuncs.com\"]\n}\n\nsystemctl daemon-reload\nsystemctl restart docker\n```\n\n#### 1.3.8.配置k8s资源的下载地址\n\n```bash\ncat <<EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n```\n\n#### 1.3.9.安装 kubelet kubeadm kubectl\n\n```bash\n# 默认安装最新版本，也可以指定版本\nyum install -y kubelet kubeadm kubectl\n\n#设置kubelet开机启动\nsystemctl enable kubelet.service \n```\n\n## 2.开始初始化 （只在主节点Master上面操作）\n\n### 2.1.创建初始化配置文件\n\n```\nkubeadm config print init-defaults > kubeadm-config.yaml\n```\n\n### 2.2.根据各自部署环境修改配置文件\n\n```yaml\napiVersion: kubeadm.k8s.io/v1beta2\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: abcdef.0123456789abcdef\n  ttl: 24h0m0s\n  usages:\n  - signing\n  - authentication\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: 10.0.1.9\n  bindPort: 6443\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: k8s1\n  taints:\n  - effect: NoSchedule\n    key: node-role.kubernetes.io/master\n---\napiServer:\n  timeoutForControlPlane: 4m0s\napiVersion: kubeadm.k8s.io/v1beta2\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ncontrollerManager: {}\ndns:\n  type: CoreDNS\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: gcr.azk8s.cn/google-containers\nkind: ClusterConfiguration\nkubernetesVersion: v1.17.3\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: \"192.168.0.0/16\"\n  serviceSubnet: 10.96.0.0/12\nscheduler: {}\n```\n\n配置说明：\n**imageRepository**：指定为业务所需的镜像仓库地址\n**podSubnet**：指定的IP地址段与后续部署的网络插件相匹配。（部署flannel插件，配置为10.244.0.0/16；部署calico插件，配置为192.168.0.0/16）\n\n### 2.3.开始初始化\n\n```bash\n#只在Master1的主机上面执行 版本信息与你要安装的相同\nkubeadm init --config=kubeadm-config.yaml\n\n#当出现 类似 如下说明master安装成功\nkubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128\n\n#然后执行安装成功提示的命令行，这部分执行你安装成功后的部分，可能每个人的有所不同\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n```\n\n## 3.节点node加入（默认此事上面一步骤 都进行了操作）\n\n```bash\n# 执行master安装成功后的 kubeadm join命令，注意是你自己的，下面是举例\nkubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128\n\n#当出现 类似 如下说明node加入集群成功\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n```\n\n## 4.master节点验证安装进度\n\n```bash\n#命令一 \nkubectl get cs #显示内容如下说明Master安装没问题\nNAME                 STATUS    MESSAGE              ERROR\nscheduler            Healthy   ok                   \ncontroller-manager   Healthy   ok                   \netcd-0               Healthy   {\"health\": \"true\"} \n\n#命令二\nkubectl get pod -n kube-system #查看pod状态，下面只是部分pod内容\nNAME                                   READY   STATUS             RESTARTS   AGE\ncoredns-86c58d9df4-j9g8d               1/1     Running            0          128m\ncoredns-86c58d9df4-pg45w               1/1     Running            0          128m\netcd-k8s1                              1/1     Running            0          127m\nkube-apiserver-k8s1                    1/1     Running            0          127m\nkube-controller-manager-k8s1           1/1     Running            0          127m\n\n\n#在这里你可能发现你的coredns的状态并不是Running，不要着急，这里需要给集群配置网络插件，配置好就自动Running了\n\n#命令三\nkubectl get node #查看节点状态 \nNAME   STATUS   ROLES    AGE    VERSION\nmaster   NoReady    master   131m   v1.17.4\nnode1   NoReady    <none>   93m    v1.17.4\n\n#如果你添加了节点里面看的话,可能还未初始化，显示的是NoReady是因为集群网络插件还未配置。\n```\n\n## 5.安装集群网络插件 (只需要Master安装)\n\n下面两种网络插件任选一种即可。\n\n### 5.1.安装Flannel 网络插件\n\n```bash\n# 获取flannel网络插件配置yaml文件\nwget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n\n# 如果云服务器为多网卡机器，在启动命令中添加：\n\t\t...\n        command:\n        - /opt/bin/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        - --iface=eth0  # 指定使用的相应网卡\n        ...\n\nkubectl apply -f kube-flannel.yml\n\n#安装成功后查看pod\nkubectl get pod -n kube-system\nNAME                                   READY   STATUS             RESTARTS   AGE\ncoredns-86c58d9df4-j9g8d               1/1     Running            0          128m\ncoredns-86c58d9df4-pg45w               1/1     Running            0          128m\netcd-k8s1                              1/1     Running            0          127m\nkube-apiserver-k8s1                    1/1     Running            0          127m\nkube-controller-manager-k8s1           1/1     Running            0          127m\nkube-flannel-ds-amd64-7btlw            1/1     Running            0          91m\nkube-flannel-ds-amd64-9vq42            1/1     Running            0          106m\nkube-flannel-ds-amd64-kdf42            1/1     Running            0          90m\nkube-proxy-dtmfs                       1/1     Running            0          128m\nkube-proxy-p76tc                       1/1     Running            0          90m\nkube-proxy-xgw28                       1/1     Running            0          91m\nkube-scheduler-k8s1                    1/1     Running            0          128m\n\n#全部Running则表示 成功了\n```\n\n### 5.2.安装calico\n\n```bash\n# 获取calico网络插件配置yaml文件\nwget https://docs.projectcalico.org/manifests/calico.yaml\n\nkubectl apply -f calico.yaml\n\n#安装成功后查看pod\nkubectl get pod -n kube-system\n\n#全部Running则表示 成功了\n```\n","source":"_posts/11.使用kubeadm搭建k8s集群.md","raw":"---\ntitle: 11.使用kubeadm搭建k8s集群\ndate: 2023-03-28 15:54:57\ntags:\n- k8s\n- kubeadm\ncategories:\n- 技术\n---\n\n# 使用kubeadm搭建k8s集群\n\n## 1.安装环境准备\n\n### 1.1.云服务器准备\n\n|  IP地址  |    节点角色     | CPU  | Memory | Hostname |\n| :------: | :-------------: | :--: | :----: | :------: |\n| 10.0.1.9 | master and etcd | >=2c |  >=2G  |  master  |\n| 10.0.1.5 |      node       | >=2c |  >=2G  |  node1   |\n\n### 1.2.软件版本\n\n|  系统类型  | Kubernetes版本 | docker版本 | kubeadm版本 | kubectl版本 | kubelet版本 |\n| :--------: | :------------: | :--------: | :---------: | :---------: | :---------: |\n| CentOS 7.6 |    v1.17.4     | 19.03.8-ce |   v1.17.4   |   v1.17.4   |   v1.17.4   |\n\n<!--more-->\n\n### 1.3.云服务器环境初始化操作\n\n#### 1.3.1.设置主机名 \n\n```bash\n#master是设置名称 2台设备分别是 master node1\nhostnamectl set-hostname master \n```\n\n#### 1.3.2.修改host文件 \n\n```bash\nvim /etc/hosts\n\n#添加\n10.0.1.9 master\n10.0.1.5 node1\n```\n\n#### 1.3.3.关闭selinux\n\n```bash\n#实时动态关闭\nsetenforce 0 \n\n#禁止重启后自动开启\nsed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config \n```\n\n#### 1.3.4.关闭交换分区\n\n```bash\n#实时动态关闭\nswapoff -a \n\n#禁止重启后自动开启\nsed -i '/ swap / s/^/#/' /etc/fstab \n```\n\n#### 1.3.5.网络配置文件\n\n```bash\ncat > /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nvm.swappiness=0\n\n#退出 按 Ctrl + D\n\n#执行该命令 如果不执行就会在应用k8s.conf时出现加载错误\nmodprobe br_netfilter  \n\n#应用配置文件\nsysctl -p /etc/sysctl.d/k8s.conf\n```\n\n#### 1.3.6.配置资源地址\n\n```bash\nyum install wget -y  #安装wget命令行\n\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  #配置yum源\n\nyum makecache #更新缓存\n\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo #配置docker下载的地址\n```\n\n#### 1.3.7.安装Docker\n\n```bash\nyum list docker-ce --showduplicates|sort -r  #展示版本列表\n\nyum install -y docker-ce  #默认安装最新版，也可以指定版本下载\n\nsystemctl start docker #启动docker\nsystemctl enable docker #将docker加入到开机启动\n\ndocker version #查看docker启动情况 和版本信息\n\n# 如果安装的docker版本使用的cgroups，按以下方式修改为systemd\nvim /etc/docker/daemon.json\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"registry-mirrors\": [\"https://mj9kvemk.mirror.aliyuncs.com\"]\n}\n\nsystemctl daemon-reload\nsystemctl restart docker\n```\n\n#### 1.3.8.配置k8s资源的下载地址\n\n```bash\ncat <<EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n```\n\n#### 1.3.9.安装 kubelet kubeadm kubectl\n\n```bash\n# 默认安装最新版本，也可以指定版本\nyum install -y kubelet kubeadm kubectl\n\n#设置kubelet开机启动\nsystemctl enable kubelet.service \n```\n\n## 2.开始初始化 （只在主节点Master上面操作）\n\n### 2.1.创建初始化配置文件\n\n```\nkubeadm config print init-defaults > kubeadm-config.yaml\n```\n\n### 2.2.根据各自部署环境修改配置文件\n\n```yaml\napiVersion: kubeadm.k8s.io/v1beta2\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: abcdef.0123456789abcdef\n  ttl: 24h0m0s\n  usages:\n  - signing\n  - authentication\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: 10.0.1.9\n  bindPort: 6443\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: k8s1\n  taints:\n  - effect: NoSchedule\n    key: node-role.kubernetes.io/master\n---\napiServer:\n  timeoutForControlPlane: 4m0s\napiVersion: kubeadm.k8s.io/v1beta2\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ncontrollerManager: {}\ndns:\n  type: CoreDNS\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: gcr.azk8s.cn/google-containers\nkind: ClusterConfiguration\nkubernetesVersion: v1.17.3\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: \"192.168.0.0/16\"\n  serviceSubnet: 10.96.0.0/12\nscheduler: {}\n```\n\n配置说明：\n**imageRepository**：指定为业务所需的镜像仓库地址\n**podSubnet**：指定的IP地址段与后续部署的网络插件相匹配。（部署flannel插件，配置为10.244.0.0/16；部署calico插件，配置为192.168.0.0/16）\n\n### 2.3.开始初始化\n\n```bash\n#只在Master1的主机上面执行 版本信息与你要安装的相同\nkubeadm init --config=kubeadm-config.yaml\n\n#当出现 类似 如下说明master安装成功\nkubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128\n\n#然后执行安装成功提示的命令行，这部分执行你安装成功后的部分，可能每个人的有所不同\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n```\n\n## 3.节点node加入（默认此事上面一步骤 都进行了操作）\n\n```bash\n# 执行master安装成功后的 kubeadm join命令，注意是你自己的，下面是举例\nkubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128\n\n#当出现 类似 如下说明node加入集群成功\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n```\n\n## 4.master节点验证安装进度\n\n```bash\n#命令一 \nkubectl get cs #显示内容如下说明Master安装没问题\nNAME                 STATUS    MESSAGE              ERROR\nscheduler            Healthy   ok                   \ncontroller-manager   Healthy   ok                   \netcd-0               Healthy   {\"health\": \"true\"} \n\n#命令二\nkubectl get pod -n kube-system #查看pod状态，下面只是部分pod内容\nNAME                                   READY   STATUS             RESTARTS   AGE\ncoredns-86c58d9df4-j9g8d               1/1     Running            0          128m\ncoredns-86c58d9df4-pg45w               1/1     Running            0          128m\netcd-k8s1                              1/1     Running            0          127m\nkube-apiserver-k8s1                    1/1     Running            0          127m\nkube-controller-manager-k8s1           1/1     Running            0          127m\n\n\n#在这里你可能发现你的coredns的状态并不是Running，不要着急，这里需要给集群配置网络插件，配置好就自动Running了\n\n#命令三\nkubectl get node #查看节点状态 \nNAME   STATUS   ROLES    AGE    VERSION\nmaster   NoReady    master   131m   v1.17.4\nnode1   NoReady    <none>   93m    v1.17.4\n\n#如果你添加了节点里面看的话,可能还未初始化，显示的是NoReady是因为集群网络插件还未配置。\n```\n\n## 5.安装集群网络插件 (只需要Master安装)\n\n下面两种网络插件任选一种即可。\n\n### 5.1.安装Flannel 网络插件\n\n```bash\n# 获取flannel网络插件配置yaml文件\nwget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n\n# 如果云服务器为多网卡机器，在启动命令中添加：\n\t\t...\n        command:\n        - /opt/bin/flanneld\n        args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        - --iface=eth0  # 指定使用的相应网卡\n        ...\n\nkubectl apply -f kube-flannel.yml\n\n#安装成功后查看pod\nkubectl get pod -n kube-system\nNAME                                   READY   STATUS             RESTARTS   AGE\ncoredns-86c58d9df4-j9g8d               1/1     Running            0          128m\ncoredns-86c58d9df4-pg45w               1/1     Running            0          128m\netcd-k8s1                              1/1     Running            0          127m\nkube-apiserver-k8s1                    1/1     Running            0          127m\nkube-controller-manager-k8s1           1/1     Running            0          127m\nkube-flannel-ds-amd64-7btlw            1/1     Running            0          91m\nkube-flannel-ds-amd64-9vq42            1/1     Running            0          106m\nkube-flannel-ds-amd64-kdf42            1/1     Running            0          90m\nkube-proxy-dtmfs                       1/1     Running            0          128m\nkube-proxy-p76tc                       1/1     Running            0          90m\nkube-proxy-xgw28                       1/1     Running            0          91m\nkube-scheduler-k8s1                    1/1     Running            0          128m\n\n#全部Running则表示 成功了\n```\n\n### 5.2.安装calico\n\n```bash\n# 获取calico网络插件配置yaml文件\nwget https://docs.projectcalico.org/manifests/calico.yaml\n\nkubectl apply -f calico.yaml\n\n#安装成功后查看pod\nkubectl get pod -n kube-system\n\n#全部Running则表示 成功了\n```\n","slug":"11.使用kubeadm搭建k8s集群","published":1,"updated":"2023-03-28T12:18:04.485Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfsa8hn00000r8fvag6gfltd","content":"<h1 id=\"使用kubeadm搭建k8s集群\"><a href=\"#使用kubeadm搭建k8s集群\" class=\"headerlink\" title=\"使用kubeadm搭建k8s集群\"></a>使用kubeadm搭建k8s集群</h1><h2 id=\"1-安装环境准备\"><a href=\"#1-安装环境准备\" class=\"headerlink\" title=\"1.安装环境准备\"></a>1.安装环境准备</h2><h3 id=\"1-1-云服务器准备\"><a href=\"#1-1-云服务器准备\" class=\"headerlink\" title=\"1.1.云服务器准备\"></a>1.1.云服务器准备</h3><table>\n<thead>\n<tr>\n<th align=\"center\">IP地址</th>\n<th align=\"center\">节点角色</th>\n<th align=\"center\">CPU</th>\n<th align=\"center\">Memory</th>\n<th align=\"center\">Hostname</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">10.0.1.9</td>\n<td align=\"center\">master and etcd</td>\n<td align=\"center\">&gt;=2c</td>\n<td align=\"center\">&gt;=2G</td>\n<td align=\"center\">master</td>\n</tr>\n<tr>\n<td align=\"center\">10.0.1.5</td>\n<td align=\"center\">node</td>\n<td align=\"center\">&gt;=2c</td>\n<td align=\"center\">&gt;=2G</td>\n<td align=\"center\">node1</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-2-软件版本\"><a href=\"#1-2-软件版本\" class=\"headerlink\" title=\"1.2.软件版本\"></a>1.2.软件版本</h3><table>\n<thead>\n<tr>\n<th align=\"center\">系统类型</th>\n<th align=\"center\">Kubernetes版本</th>\n<th align=\"center\">docker版本</th>\n<th align=\"center\">kubeadm版本</th>\n<th align=\"center\">kubectl版本</th>\n<th align=\"center\">kubelet版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">CentOS 7.6</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">19.03.8-ce</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">v1.17.4</td>\n</tr>\n</tbody></table>\n<span id=\"more\"></span>\n\n<h3 id=\"1-3-云服务器环境初始化操作\"><a href=\"#1-3-云服务器环境初始化操作\" class=\"headerlink\" title=\"1.3.云服务器环境初始化操作\"></a>1.3.云服务器环境初始化操作</h3><h4 id=\"1-3-1-设置主机名\"><a href=\"#1-3-1-设置主机名\" class=\"headerlink\" title=\"1.3.1.设置主机名\"></a>1.3.1.设置主机名</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#master是设置名称 2台设备分别是 master node1</span></span><br><span class=\"line\">hostnamectl set-hostname master </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-2-修改host文件\"><a href=\"#1-3-2-修改host文件\" class=\"headerlink\" title=\"1.3.2.修改host文件\"></a>1.3.2.修改host文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/hosts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加</span></span><br><span class=\"line\">10.0.1.9 master</span><br><span class=\"line\">10.0.1.5 node1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-3-关闭selinux\"><a href=\"#1-3-3-关闭selinux\" class=\"headerlink\" title=\"1.3.3.关闭selinux\"></a>1.3.3.关闭selinux</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实时动态关闭</span></span><br><span class=\"line\">setenforce 0 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#禁止重启后自动开启</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27;</span> /etc/selinux/config </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-4-关闭交换分区\"><a href=\"#1-3-4-关闭交换分区\" class=\"headerlink\" title=\"1.3.4.关闭交换分区\"></a>1.3.4.关闭交换分区</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实时动态关闭</span></span><br><span class=\"line\">swapoff -a </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#禁止重启后自动开启</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;/ swap / s/^/#/&#x27;</span> /etc/fstab </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-5-网络配置文件\"><a href=\"#1-3-5-网络配置文件\" class=\"headerlink\" title=\"1.3.5.网络配置文件\"></a>1.3.5.网络配置文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/sysctl.d/k8s.conf</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\">vm.swappiness=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#退出 按 Ctrl + D</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行该命令 如果不执行就会在应用k8s.conf时出现加载错误</span></span><br><span class=\"line\">modprobe br_netfilter  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#应用配置文件</span></span><br><span class=\"line\">sysctl -p /etc/sysctl.d/k8s.conf</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-6-配置资源地址\"><a href=\"#1-3-6-配置资源地址\" class=\"headerlink\" title=\"1.3.6.配置资源地址\"></a>1.3.6.配置资源地址</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install wget -y  <span class=\"comment\">#安装wget命令行</span></span><br><span class=\"line\"></span><br><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  <span class=\"comment\">#配置yum源</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum makecache <span class=\"comment\">#更新缓存</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo <span class=\"comment\">#配置docker下载的地址</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-7-安装Docker\"><a href=\"#1-3-7-安装Docker\" class=\"headerlink\" title=\"1.3.7.安装Docker\"></a>1.3.7.安装Docker</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list docker-ce --showduplicates|sort -r  <span class=\"comment\">#展示版本列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y docker-ce  <span class=\"comment\">#默认安装最新版，也可以指定版本下载</span></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start docker <span class=\"comment\">#启动docker</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker <span class=\"comment\">#将docker加入到开机启动</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker version <span class=\"comment\">#查看docker启动情况 和版本信息</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果安装的docker版本使用的cgroups，按以下方式修改为systemd</span></span><br><span class=\"line\">vim /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;exec-opts&quot;</span>: [<span class=\"string\">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class=\"line\">  <span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;https://mj9kvemk.mirror.aliyuncs.com&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-8-配置k8s资源的下载地址\"><a href=\"#1-3-8-配置k8s资源的下载地址\" class=\"headerlink\" title=\"1.3.8.配置k8s资源的下载地址\"></a>1.3.8.配置k8s资源的下载地址</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;<span class=\"string\">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class=\"line\"><span class=\"string\">[kubernetes]</span></span><br><span class=\"line\"><span class=\"string\">name=Kubernetes</span></span><br><span class=\"line\"><span class=\"string\">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class=\"line\"><span class=\"string\">enabled=1</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">repo_gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span></span><br><span class=\"line\"><span class=\"string\">        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-9-安装-kubelet-kubeadm-kubectl\"><a href=\"#1-3-9-安装-kubelet-kubeadm-kubectl\" class=\"headerlink\" title=\"1.3.9.安装 kubelet kubeadm kubectl\"></a>1.3.9.安装 kubelet kubeadm kubectl</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认安装最新版本，也可以指定版本</span></span><br><span class=\"line\">yum install -y kubelet kubeadm kubectl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置kubelet开机启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> kubelet.service </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-开始初始化-（只在主节点Master上面操作）\"><a href=\"#2-开始初始化-（只在主节点Master上面操作）\" class=\"headerlink\" title=\"2.开始初始化 （只在主节点Master上面操作）\"></a>2.开始初始化 （只在主节点Master上面操作）</h2><h3 id=\"2-1-创建初始化配置文件\"><a href=\"#2-1-创建初始化配置文件\" class=\"headerlink\" title=\"2.1.创建初始化配置文件\"></a>2.1.创建初始化配置文件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm config print init-defaults &gt; kubeadm-config.yaml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-根据各自部署环境修改配置文件\"><a href=\"#2-2-根据各自部署环境修改配置文件\" class=\"headerlink\" title=\"2.2.根据各自部署环境修改配置文件\"></a>2.2.根据各自部署环境修改配置文件</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"attr\">bootstrapTokens:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">groups:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class=\"line\">  <span class=\"attr\">token:</span> <span class=\"string\">abcdef.0123456789abcdef</span></span><br><span class=\"line\">  <span class=\"attr\">ttl:</span> <span class=\"string\">24h0m0s</span></span><br><span class=\"line\">  <span class=\"attr\">usages:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">signing</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">authentication</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">InitConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">localAPIEndpoint:</span></span><br><span class=\"line\">  <span class=\"attr\">advertiseAddress:</span> <span class=\"number\">10.0</span><span class=\"number\">.1</span><span class=\"number\">.9</span></span><br><span class=\"line\">  <span class=\"attr\">bindPort:</span> <span class=\"number\">6443</span></span><br><span class=\"line\"><span class=\"attr\">nodeRegistration:</span></span><br><span class=\"line\">  <span class=\"attr\">criSocket:</span> <span class=\"string\">/var/run/dockershim.sock</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">k8s1</span></span><br><span class=\"line\">  <span class=\"attr\">taints:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">effect:</span> <span class=\"string\">NoSchedule</span></span><br><span class=\"line\">    <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/master</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiServer:</span></span><br><span class=\"line\">  <span class=\"attr\">timeoutForControlPlane:</span> <span class=\"string\">4m0s</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"attr\">certificatesDir:</span> <span class=\"string\">/etc/kubernetes/pki</span></span><br><span class=\"line\"><span class=\"attr\">clusterName:</span> <span class=\"string\">kubernetes</span></span><br><span class=\"line\"><span class=\"attr\">controllerManager:</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"attr\">dns:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">CoreDNS</span></span><br><span class=\"line\"><span class=\"attr\">etcd:</span></span><br><span class=\"line\">  <span class=\"attr\">local:</span></span><br><span class=\"line\">    <span class=\"attr\">dataDir:</span> <span class=\"string\">/var/lib/etcd</span></span><br><span class=\"line\"><span class=\"attr\">imageRepository:</span> <span class=\"string\">gcr.azk8s.cn/google-containers</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">kubernetesVersion:</span> <span class=\"string\">v1.17.3</span></span><br><span class=\"line\"><span class=\"attr\">networking:</span></span><br><span class=\"line\">  <span class=\"attr\">dnsDomain:</span> <span class=\"string\">cluster.local</span></span><br><span class=\"line\">  <span class=\"attr\">podSubnet:</span> <span class=\"string\">&quot;192.168.0.0/16&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">serviceSubnet:</span> <span class=\"number\">10.96</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">/12</span></span><br><span class=\"line\"><span class=\"attr\">scheduler:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配置说明：<br><strong>imageRepository</strong>：指定为业务所需的镜像仓库地址<br><strong>podSubnet</strong>：指定的IP地址段与后续部署的网络插件相匹配。（部署flannel插件，配置为10.244.0.0/16；部署calico插件，配置为192.168.0.0/16）</p>\n<h3 id=\"2-3-开始初始化\"><a href=\"#2-3-开始初始化\" class=\"headerlink\" title=\"2.3.开始初始化\"></a>2.3.开始初始化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#只在Master1的主机上面执行 版本信息与你要安装的相同</span></span><br><span class=\"line\">kubeadm init --config=kubeadm-config.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当出现 类似 如下说明master安装成功</span></span><br><span class=\"line\">kubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#然后执行安装成功提示的命令行，这部分执行你安装成功后的部分，可能每个人的有所不同</span></span><br><span class=\"line\">  mkdir -p <span class=\"variable\">$HOME</span>/.kube</span><br><span class=\"line\">  sudo cp -i /etc/kubernetes/admin.conf <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\">  sudo chown $(id -u):$(id -g) <span class=\"variable\">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-节点node加入（默认此事上面一步骤-都进行了操作）\"><a href=\"#3-节点node加入（默认此事上面一步骤-都进行了操作）\" class=\"headerlink\" title=\"3.节点node加入（默认此事上面一步骤 都进行了操作）\"></a>3.节点node加入（默认此事上面一步骤 都进行了操作）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 执行master安装成功后的 kubeadm join命令，注意是你自己的，下面是举例</span></span><br><span class=\"line\">kubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当出现 类似 如下说明node加入集群成功</span></span><br><span class=\"line\">This node has joined the cluster:</span><br><span class=\"line\">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class=\"line\">* The Kubelet was informed of the new secure connection details.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-master节点验证安装进度\"><a href=\"#4-master节点验证安装进度\" class=\"headerlink\" title=\"4.master节点验证安装进度\"></a>4.master节点验证安装进度</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#命令一 </span></span><br><span class=\"line\">kubectl get cs <span class=\"comment\">#显示内容如下说明Master安装没问题</span></span><br><span class=\"line\">NAME                 STATUS    MESSAGE              ERROR</span><br><span class=\"line\">scheduler            Healthy   ok                   </span><br><span class=\"line\">controller-manager   Healthy   ok                   </span><br><span class=\"line\">etcd-0               Healthy   &#123;<span class=\"string\">&quot;health&quot;</span>: <span class=\"string\">&quot;true&quot;</span>&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命令二</span></span><br><span class=\"line\">kubectl get pod -n kube-system <span class=\"comment\">#查看pod状态，下面只是部分pod内容</span></span><br><span class=\"line\">NAME                                   READY   STATUS             RESTARTS   AGE</span><br><span class=\"line\">coredns-86c58d9df4-j9g8d               1/1     Running            0          128m</span><br><span class=\"line\">coredns-86c58d9df4-pg45w               1/1     Running            0          128m</span><br><span class=\"line\">etcd-k8s1                              1/1     Running            0          127m</span><br><span class=\"line\">kube-apiserver-k8s1                    1/1     Running            0          127m</span><br><span class=\"line\">kube-controller-manager-k8s1           1/1     Running            0          127m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在这里你可能发现你的coredns的状态并不是Running，不要着急，这里需要给集群配置网络插件，配置好就自动Running了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命令三</span></span><br><span class=\"line\">kubectl get node <span class=\"comment\">#查看节点状态 </span></span><br><span class=\"line\">NAME   STATUS   ROLES    AGE    VERSION</span><br><span class=\"line\">master   NoReady    master   131m   v1.17.4</span><br><span class=\"line\">node1   NoReady    &lt;none&gt;   93m    v1.17.4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果你添加了节点里面看的话,可能还未初始化，显示的是NoReady是因为集群网络插件还未配置。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-安装集群网络插件-只需要Master安装\"><a href=\"#5-安装集群网络插件-只需要Master安装\" class=\"headerlink\" title=\"5.安装集群网络插件 (只需要Master安装)\"></a>5.安装集群网络插件 (只需要Master安装)</h2><p>下面两种网络插件任选一种即可。</p>\n<h3 id=\"5-1-安装Flannel-网络插件\"><a href=\"#5-1-安装Flannel-网络插件\" class=\"headerlink\" title=\"5.1.安装Flannel 网络插件\"></a>5.1.安装Flannel 网络插件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取flannel网络插件配置yaml文件</span></span><br><span class=\"line\">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果云服务器为多网卡机器，在启动命令中添加：</span></span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">        <span class=\"built_in\">command</span>:</span><br><span class=\"line\">        - /opt/bin/flanneld</span><br><span class=\"line\">        args:</span><br><span class=\"line\">        - --ip-masq</span><br><span class=\"line\">        - --kube-subnet-mgr</span><br><span class=\"line\">        - --iface=eth0  <span class=\"comment\"># 指定使用的相应网卡</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f kube-flannel.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装成功后查看pod</span></span><br><span class=\"line\">kubectl get pod -n kube-system</span><br><span class=\"line\">NAME                                   READY   STATUS             RESTARTS   AGE</span><br><span class=\"line\">coredns-86c58d9df4-j9g8d               1/1     Running            0          128m</span><br><span class=\"line\">coredns-86c58d9df4-pg45w               1/1     Running            0          128m</span><br><span class=\"line\">etcd-k8s1                              1/1     Running            0          127m</span><br><span class=\"line\">kube-apiserver-k8s1                    1/1     Running            0          127m</span><br><span class=\"line\">kube-controller-manager-k8s1           1/1     Running            0          127m</span><br><span class=\"line\">kube-flannel-ds-amd64-7btlw            1/1     Running            0          91m</span><br><span class=\"line\">kube-flannel-ds-amd64-9vq42            1/1     Running            0          106m</span><br><span class=\"line\">kube-flannel-ds-amd64-kdf42            1/1     Running            0          90m</span><br><span class=\"line\">kube-proxy-dtmfs                       1/1     Running            0          128m</span><br><span class=\"line\">kube-proxy-p76tc                       1/1     Running            0          90m</span><br><span class=\"line\">kube-proxy-xgw28                       1/1     Running            0          91m</span><br><span class=\"line\">kube-scheduler-k8s1                    1/1     Running            0          128m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#全部Running则表示 成功了</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-安装calico\"><a href=\"#5-2-安装calico\" class=\"headerlink\" title=\"5.2.安装calico\"></a>5.2.安装calico</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取calico网络插件配置yaml文件</span></span><br><span class=\"line\">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f calico.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装成功后查看pod</span></span><br><span class=\"line\">kubectl get pod -n kube-system</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#全部Running则表示 成功了</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"使用kubeadm搭建k8s集群\"><a href=\"#使用kubeadm搭建k8s集群\" class=\"headerlink\" title=\"使用kubeadm搭建k8s集群\"></a>使用kubeadm搭建k8s集群</h1><h2 id=\"1-安装环境准备\"><a href=\"#1-安装环境准备\" class=\"headerlink\" title=\"1.安装环境准备\"></a>1.安装环境准备</h2><h3 id=\"1-1-云服务器准备\"><a href=\"#1-1-云服务器准备\" class=\"headerlink\" title=\"1.1.云服务器准备\"></a>1.1.云服务器准备</h3><table>\n<thead>\n<tr>\n<th align=\"center\">IP地址</th>\n<th align=\"center\">节点角色</th>\n<th align=\"center\">CPU</th>\n<th align=\"center\">Memory</th>\n<th align=\"center\">Hostname</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">10.0.1.9</td>\n<td align=\"center\">master and etcd</td>\n<td align=\"center\">&gt;=2c</td>\n<td align=\"center\">&gt;=2G</td>\n<td align=\"center\">master</td>\n</tr>\n<tr>\n<td align=\"center\">10.0.1.5</td>\n<td align=\"center\">node</td>\n<td align=\"center\">&gt;=2c</td>\n<td align=\"center\">&gt;=2G</td>\n<td align=\"center\">node1</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-2-软件版本\"><a href=\"#1-2-软件版本\" class=\"headerlink\" title=\"1.2.软件版本\"></a>1.2.软件版本</h3><table>\n<thead>\n<tr>\n<th align=\"center\">系统类型</th>\n<th align=\"center\">Kubernetes版本</th>\n<th align=\"center\">docker版本</th>\n<th align=\"center\">kubeadm版本</th>\n<th align=\"center\">kubectl版本</th>\n<th align=\"center\">kubelet版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">CentOS 7.6</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">19.03.8-ce</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">v1.17.4</td>\n<td align=\"center\">v1.17.4</td>\n</tr>\n</tbody></table>","more":"<h3 id=\"1-3-云服务器环境初始化操作\"><a href=\"#1-3-云服务器环境初始化操作\" class=\"headerlink\" title=\"1.3.云服务器环境初始化操作\"></a>1.3.云服务器环境初始化操作</h3><h4 id=\"1-3-1-设置主机名\"><a href=\"#1-3-1-设置主机名\" class=\"headerlink\" title=\"1.3.1.设置主机名\"></a>1.3.1.设置主机名</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#master是设置名称 2台设备分别是 master node1</span></span><br><span class=\"line\">hostnamectl set-hostname master </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-2-修改host文件\"><a href=\"#1-3-2-修改host文件\" class=\"headerlink\" title=\"1.3.2.修改host文件\"></a>1.3.2.修改host文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/hosts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加</span></span><br><span class=\"line\">10.0.1.9 master</span><br><span class=\"line\">10.0.1.5 node1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-3-关闭selinux\"><a href=\"#1-3-3-关闭selinux\" class=\"headerlink\" title=\"1.3.3.关闭selinux\"></a>1.3.3.关闭selinux</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实时动态关闭</span></span><br><span class=\"line\">setenforce 0 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#禁止重启后自动开启</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27;</span> /etc/selinux/config </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-4-关闭交换分区\"><a href=\"#1-3-4-关闭交换分区\" class=\"headerlink\" title=\"1.3.4.关闭交换分区\"></a>1.3.4.关闭交换分区</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实时动态关闭</span></span><br><span class=\"line\">swapoff -a </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#禁止重启后自动开启</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;/ swap / s/^/#/&#x27;</span> /etc/fstab </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-5-网络配置文件\"><a href=\"#1-3-5-网络配置文件\" class=\"headerlink\" title=\"1.3.5.网络配置文件\"></a>1.3.5.网络配置文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/sysctl.d/k8s.conf</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\">vm.swappiness=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#退出 按 Ctrl + D</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行该命令 如果不执行就会在应用k8s.conf时出现加载错误</span></span><br><span class=\"line\">modprobe br_netfilter  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#应用配置文件</span></span><br><span class=\"line\">sysctl -p /etc/sysctl.d/k8s.conf</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-6-配置资源地址\"><a href=\"#1-3-6-配置资源地址\" class=\"headerlink\" title=\"1.3.6.配置资源地址\"></a>1.3.6.配置资源地址</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install wget -y  <span class=\"comment\">#安装wget命令行</span></span><br><span class=\"line\"></span><br><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo  <span class=\"comment\">#配置yum源</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum makecache <span class=\"comment\">#更新缓存</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo <span class=\"comment\">#配置docker下载的地址</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-7-安装Docker\"><a href=\"#1-3-7-安装Docker\" class=\"headerlink\" title=\"1.3.7.安装Docker\"></a>1.3.7.安装Docker</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum list docker-ce --showduplicates|sort -r  <span class=\"comment\">#展示版本列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y docker-ce  <span class=\"comment\">#默认安装最新版，也可以指定版本下载</span></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start docker <span class=\"comment\">#启动docker</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker <span class=\"comment\">#将docker加入到开机启动</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker version <span class=\"comment\">#查看docker启动情况 和版本信息</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果安装的docker版本使用的cgroups，按以下方式修改为systemd</span></span><br><span class=\"line\">vim /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;exec-opts&quot;</span>: [<span class=\"string\">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class=\"line\">  <span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;https://mj9kvemk.mirror.aliyuncs.com&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-8-配置k8s资源的下载地址\"><a href=\"#1-3-8-配置k8s资源的下载地址\" class=\"headerlink\" title=\"1.3.8.配置k8s资源的下载地址\"></a>1.3.8.配置k8s资源的下载地址</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;<span class=\"string\">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class=\"line\"><span class=\"string\">[kubernetes]</span></span><br><span class=\"line\"><span class=\"string\">name=Kubernetes</span></span><br><span class=\"line\"><span class=\"string\">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class=\"line\"><span class=\"string\">enabled=1</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">repo_gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span></span><br><span class=\"line\"><span class=\"string\">        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-9-安装-kubelet-kubeadm-kubectl\"><a href=\"#1-3-9-安装-kubelet-kubeadm-kubectl\" class=\"headerlink\" title=\"1.3.9.安装 kubelet kubeadm kubectl\"></a>1.3.9.安装 kubelet kubeadm kubectl</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认安装最新版本，也可以指定版本</span></span><br><span class=\"line\">yum install -y kubelet kubeadm kubectl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置kubelet开机启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> kubelet.service </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-开始初始化-（只在主节点Master上面操作）\"><a href=\"#2-开始初始化-（只在主节点Master上面操作）\" class=\"headerlink\" title=\"2.开始初始化 （只在主节点Master上面操作）\"></a>2.开始初始化 （只在主节点Master上面操作）</h2><h3 id=\"2-1-创建初始化配置文件\"><a href=\"#2-1-创建初始化配置文件\" class=\"headerlink\" title=\"2.1.创建初始化配置文件\"></a>2.1.创建初始化配置文件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm config print init-defaults &gt; kubeadm-config.yaml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-根据各自部署环境修改配置文件\"><a href=\"#2-2-根据各自部署环境修改配置文件\" class=\"headerlink\" title=\"2.2.根据各自部署环境修改配置文件\"></a>2.2.根据各自部署环境修改配置文件</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"attr\">bootstrapTokens:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">groups:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class=\"line\">  <span class=\"attr\">token:</span> <span class=\"string\">abcdef.0123456789abcdef</span></span><br><span class=\"line\">  <span class=\"attr\">ttl:</span> <span class=\"string\">24h0m0s</span></span><br><span class=\"line\">  <span class=\"attr\">usages:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">signing</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">authentication</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">InitConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">localAPIEndpoint:</span></span><br><span class=\"line\">  <span class=\"attr\">advertiseAddress:</span> <span class=\"number\">10.0</span><span class=\"number\">.1</span><span class=\"number\">.9</span></span><br><span class=\"line\">  <span class=\"attr\">bindPort:</span> <span class=\"number\">6443</span></span><br><span class=\"line\"><span class=\"attr\">nodeRegistration:</span></span><br><span class=\"line\">  <span class=\"attr\">criSocket:</span> <span class=\"string\">/var/run/dockershim.sock</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">k8s1</span></span><br><span class=\"line\">  <span class=\"attr\">taints:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">effect:</span> <span class=\"string\">NoSchedule</span></span><br><span class=\"line\">    <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/master</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiServer:</span></span><br><span class=\"line\">  <span class=\"attr\">timeoutForControlPlane:</span> <span class=\"string\">4m0s</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"attr\">certificatesDir:</span> <span class=\"string\">/etc/kubernetes/pki</span></span><br><span class=\"line\"><span class=\"attr\">clusterName:</span> <span class=\"string\">kubernetes</span></span><br><span class=\"line\"><span class=\"attr\">controllerManager:</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"attr\">dns:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">CoreDNS</span></span><br><span class=\"line\"><span class=\"attr\">etcd:</span></span><br><span class=\"line\">  <span class=\"attr\">local:</span></span><br><span class=\"line\">    <span class=\"attr\">dataDir:</span> <span class=\"string\">/var/lib/etcd</span></span><br><span class=\"line\"><span class=\"attr\">imageRepository:</span> <span class=\"string\">gcr.azk8s.cn/google-containers</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">kubernetesVersion:</span> <span class=\"string\">v1.17.3</span></span><br><span class=\"line\"><span class=\"attr\">networking:</span></span><br><span class=\"line\">  <span class=\"attr\">dnsDomain:</span> <span class=\"string\">cluster.local</span></span><br><span class=\"line\">  <span class=\"attr\">podSubnet:</span> <span class=\"string\">&quot;192.168.0.0/16&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">serviceSubnet:</span> <span class=\"number\">10.96</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">/12</span></span><br><span class=\"line\"><span class=\"attr\">scheduler:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配置说明：<br><strong>imageRepository</strong>：指定为业务所需的镜像仓库地址<br><strong>podSubnet</strong>：指定的IP地址段与后续部署的网络插件相匹配。（部署flannel插件，配置为10.244.0.0/16；部署calico插件，配置为192.168.0.0/16）</p>\n<h3 id=\"2-3-开始初始化\"><a href=\"#2-3-开始初始化\" class=\"headerlink\" title=\"2.3.开始初始化\"></a>2.3.开始初始化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#只在Master1的主机上面执行 版本信息与你要安装的相同</span></span><br><span class=\"line\">kubeadm init --config=kubeadm-config.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当出现 类似 如下说明master安装成功</span></span><br><span class=\"line\">kubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#然后执行安装成功提示的命令行，这部分执行你安装成功后的部分，可能每个人的有所不同</span></span><br><span class=\"line\">  mkdir -p <span class=\"variable\">$HOME</span>/.kube</span><br><span class=\"line\">  sudo cp -i /etc/kubernetes/admin.conf <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\">  sudo chown $(id -u):$(id -g) <span class=\"variable\">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-节点node加入（默认此事上面一步骤-都进行了操作）\"><a href=\"#3-节点node加入（默认此事上面一步骤-都进行了操作）\" class=\"headerlink\" title=\"3.节点node加入（默认此事上面一步骤 都进行了操作）\"></a>3.节点node加入（默认此事上面一步骤 都进行了操作）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 执行master安装成功后的 kubeadm join命令，注意是你自己的，下面是举例</span></span><br><span class=\"line\">kubeadm join 10.0.1.9:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:b617794af7644843a3dd1104d717686fb31b9c295c7636c2b664b253e0fa6128</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当出现 类似 如下说明node加入集群成功</span></span><br><span class=\"line\">This node has joined the cluster:</span><br><span class=\"line\">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class=\"line\">* The Kubelet was informed of the new secure connection details.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-master节点验证安装进度\"><a href=\"#4-master节点验证安装进度\" class=\"headerlink\" title=\"4.master节点验证安装进度\"></a>4.master节点验证安装进度</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#命令一 </span></span><br><span class=\"line\">kubectl get cs <span class=\"comment\">#显示内容如下说明Master安装没问题</span></span><br><span class=\"line\">NAME                 STATUS    MESSAGE              ERROR</span><br><span class=\"line\">scheduler            Healthy   ok                   </span><br><span class=\"line\">controller-manager   Healthy   ok                   </span><br><span class=\"line\">etcd-0               Healthy   &#123;<span class=\"string\">&quot;health&quot;</span>: <span class=\"string\">&quot;true&quot;</span>&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命令二</span></span><br><span class=\"line\">kubectl get pod -n kube-system <span class=\"comment\">#查看pod状态，下面只是部分pod内容</span></span><br><span class=\"line\">NAME                                   READY   STATUS             RESTARTS   AGE</span><br><span class=\"line\">coredns-86c58d9df4-j9g8d               1/1     Running            0          128m</span><br><span class=\"line\">coredns-86c58d9df4-pg45w               1/1     Running            0          128m</span><br><span class=\"line\">etcd-k8s1                              1/1     Running            0          127m</span><br><span class=\"line\">kube-apiserver-k8s1                    1/1     Running            0          127m</span><br><span class=\"line\">kube-controller-manager-k8s1           1/1     Running            0          127m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在这里你可能发现你的coredns的状态并不是Running，不要着急，这里需要给集群配置网络插件，配置好就自动Running了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命令三</span></span><br><span class=\"line\">kubectl get node <span class=\"comment\">#查看节点状态 </span></span><br><span class=\"line\">NAME   STATUS   ROLES    AGE    VERSION</span><br><span class=\"line\">master   NoReady    master   131m   v1.17.4</span><br><span class=\"line\">node1   NoReady    &lt;none&gt;   93m    v1.17.4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果你添加了节点里面看的话,可能还未初始化，显示的是NoReady是因为集群网络插件还未配置。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-安装集群网络插件-只需要Master安装\"><a href=\"#5-安装集群网络插件-只需要Master安装\" class=\"headerlink\" title=\"5.安装集群网络插件 (只需要Master安装)\"></a>5.安装集群网络插件 (只需要Master安装)</h2><p>下面两种网络插件任选一种即可。</p>\n<h3 id=\"5-1-安装Flannel-网络插件\"><a href=\"#5-1-安装Flannel-网络插件\" class=\"headerlink\" title=\"5.1.安装Flannel 网络插件\"></a>5.1.安装Flannel 网络插件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取flannel网络插件配置yaml文件</span></span><br><span class=\"line\">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果云服务器为多网卡机器，在启动命令中添加：</span></span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">        <span class=\"built_in\">command</span>:</span><br><span class=\"line\">        - /opt/bin/flanneld</span><br><span class=\"line\">        args:</span><br><span class=\"line\">        - --ip-masq</span><br><span class=\"line\">        - --kube-subnet-mgr</span><br><span class=\"line\">        - --iface=eth0  <span class=\"comment\"># 指定使用的相应网卡</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f kube-flannel.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装成功后查看pod</span></span><br><span class=\"line\">kubectl get pod -n kube-system</span><br><span class=\"line\">NAME                                   READY   STATUS             RESTARTS   AGE</span><br><span class=\"line\">coredns-86c58d9df4-j9g8d               1/1     Running            0          128m</span><br><span class=\"line\">coredns-86c58d9df4-pg45w               1/1     Running            0          128m</span><br><span class=\"line\">etcd-k8s1                              1/1     Running            0          127m</span><br><span class=\"line\">kube-apiserver-k8s1                    1/1     Running            0          127m</span><br><span class=\"line\">kube-controller-manager-k8s1           1/1     Running            0          127m</span><br><span class=\"line\">kube-flannel-ds-amd64-7btlw            1/1     Running            0          91m</span><br><span class=\"line\">kube-flannel-ds-amd64-9vq42            1/1     Running            0          106m</span><br><span class=\"line\">kube-flannel-ds-amd64-kdf42            1/1     Running            0          90m</span><br><span class=\"line\">kube-proxy-dtmfs                       1/1     Running            0          128m</span><br><span class=\"line\">kube-proxy-p76tc                       1/1     Running            0          90m</span><br><span class=\"line\">kube-proxy-xgw28                       1/1     Running            0          91m</span><br><span class=\"line\">kube-scheduler-k8s1                    1/1     Running            0          128m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#全部Running则表示 成功了</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-安装calico\"><a href=\"#5-2-安装calico\" class=\"headerlink\" title=\"5.2.安装calico\"></a>5.2.安装calico</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取calico网络插件配置yaml文件</span></span><br><span class=\"line\">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f calico.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装成功后查看pod</span></span><br><span class=\"line\">kubectl get pod -n kube-system</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#全部Running则表示 成功了</span></span><br></pre></td></tr></table></figure>"},{"title":"k8s apiserver证书添加新地址","date":"2023-03-28T13:01:05.000Z","_content":"\n# k8s apiserver证书添加新地址\n\n## 1.环境基础\n\n| 集群版本 |     安装环境      |\n| :------: | :---------------: |\n| v1.26.3  | kubeadm安装的集群 |\n\n<!--more-->\n\n## 2.查看当前证书中的可信地址\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nopenssl x509 -in apiserver.crt -noout -text\n```\n\n## 3.给证书添加新地址\n\n### 3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址\n\n```yaml\napiServer:\n  certSANs:\n  - xx.xx.xx.xx\n```\n\n### 3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nrm -f apiserver.*\n```\n\n### 3.3.根据kubeadm配置文件生成新的证书\n\n```bash\nkubeadm init phase certs apiserver --config ./kubeadm-config.yaml\n```\n\n### 3.4.查看新生成证书中的可信地址\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nopenssl x509 -in apiserver.crt -noout -text\n```\n\n","source":"_posts/13.k8s-apiserver证书添加新地址.md","raw":"---\ntitle: k8s apiserver证书添加新地址\ndate: 2023-03-28 21:01:05\ntags:\ncategories:\n---\n\n# k8s apiserver证书添加新地址\n\n## 1.环境基础\n\n| 集群版本 |     安装环境      |\n| :------: | :---------------: |\n| v1.26.3  | kubeadm安装的集群 |\n\n<!--more-->\n\n## 2.查看当前证书中的可信地址\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nopenssl x509 -in apiserver.crt -noout -text\n```\n\n## 3.给证书添加新地址\n\n### 3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址\n\n```yaml\napiServer:\n  certSANs:\n  - xx.xx.xx.xx\n```\n\n### 3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nrm -f apiserver.*\n```\n\n### 3.3.根据kubeadm配置文件生成新的证书\n\n```bash\nkubeadm init phase certs apiserver --config ./kubeadm-config.yaml\n```\n\n### 3.4.查看新生成证书中的可信地址\n\n```bash\n# k8s证书目录： /etc/kubernetes/pki\n\nopenssl x509 -in apiserver.crt -noout -text\n```\n\n","slug":"13.k8s-apiserver证书添加新地址","published":1,"updated":"2023-03-28T13:13:53.175Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfsa8hn20001r8fve9ci7byy","content":"<h1 id=\"k8s-apiserver证书添加新地址\"><a href=\"#k8s-apiserver证书添加新地址\" class=\"headerlink\" title=\"k8s apiserver证书添加新地址\"></a>k8s apiserver证书添加新地址</h1><h2 id=\"1-环境基础\"><a href=\"#1-环境基础\" class=\"headerlink\" title=\"1.环境基础\"></a>1.环境基础</h2><table>\n<thead>\n<tr>\n<th align=\"center\">集群版本</th>\n<th align=\"center\">安装环境</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">v1.26.3</td>\n<td align=\"center\">kubeadm安装的集群</td>\n</tr>\n</tbody></table>\n<span id=\"more\"></span>\n\n<h2 id=\"2-查看当前证书中的可信地址\"><a href=\"#2-查看当前证书中的可信地址\" class=\"headerlink\" title=\"2.查看当前证书中的可信地址\"></a>2.查看当前证书中的可信地址</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl x509 -<span class=\"keyword\">in</span> apiserver.crt -noout -text</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-给证书添加新地址\"><a href=\"#3-给证书添加新地址\" class=\"headerlink\" title=\"3.给证书添加新地址\"></a>3.给证书添加新地址</h2><h3 id=\"3-1-修改kubeadm-config-yaml-在certSANs中添加要加入的地址\"><a href=\"#3-1-修改kubeadm-config-yaml-在certSANs中添加要加入的地址\" class=\"headerlink\" title=\"3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址\"></a>3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiServer:</span></span><br><span class=\"line\">  <span class=\"attr\">certSANs:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">xx.xx.xx.xx</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-删除k8s证书目录中的apiserver-crt-、apiserver-key\"><a href=\"#3-2-删除k8s证书目录中的apiserver-crt-、apiserver-key\" class=\"headerlink\" title=\"3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key\"></a>3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm -f apiserver.*</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-根据kubeadm配置文件生成新的证书\"><a href=\"#3-3-根据kubeadm配置文件生成新的证书\" class=\"headerlink\" title=\"3.3.根据kubeadm配置文件生成新的证书\"></a>3.3.根据kubeadm配置文件生成新的证书</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm init phase certs apiserver --config ./kubeadm-config.yaml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-查看新生成证书中的可信地址\"><a href=\"#3-4-查看新生成证书中的可信地址\" class=\"headerlink\" title=\"3.4.查看新生成证书中的可信地址\"></a>3.4.查看新生成证书中的可信地址</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl x509 -<span class=\"keyword\">in</span> apiserver.crt -noout -text</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h1 id=\"k8s-apiserver证书添加新地址\"><a href=\"#k8s-apiserver证书添加新地址\" class=\"headerlink\" title=\"k8s apiserver证书添加新地址\"></a>k8s apiserver证书添加新地址</h1><h2 id=\"1-环境基础\"><a href=\"#1-环境基础\" class=\"headerlink\" title=\"1.环境基础\"></a>1.环境基础</h2><table>\n<thead>\n<tr>\n<th align=\"center\">集群版本</th>\n<th align=\"center\">安装环境</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">v1.26.3</td>\n<td align=\"center\">kubeadm安装的集群</td>\n</tr>\n</tbody></table>","more":"<h2 id=\"2-查看当前证书中的可信地址\"><a href=\"#2-查看当前证书中的可信地址\" class=\"headerlink\" title=\"2.查看当前证书中的可信地址\"></a>2.查看当前证书中的可信地址</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl x509 -<span class=\"keyword\">in</span> apiserver.crt -noout -text</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-给证书添加新地址\"><a href=\"#3-给证书添加新地址\" class=\"headerlink\" title=\"3.给证书添加新地址\"></a>3.给证书添加新地址</h2><h3 id=\"3-1-修改kubeadm-config-yaml-在certSANs中添加要加入的地址\"><a href=\"#3-1-修改kubeadm-config-yaml-在certSANs中添加要加入的地址\" class=\"headerlink\" title=\"3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址\"></a>3.1.修改kubeadm-config.yaml ,在certSANs中添加要加入的地址</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiServer:</span></span><br><span class=\"line\">  <span class=\"attr\">certSANs:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">xx.xx.xx.xx</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-删除k8s证书目录中的apiserver-crt-、apiserver-key\"><a href=\"#3-2-删除k8s证书目录中的apiserver-crt-、apiserver-key\" class=\"headerlink\" title=\"3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key\"></a>3.2.删除k8s证书目录中的apiserver.crt 、apiserver.key</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm -f apiserver.*</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-根据kubeadm配置文件生成新的证书\"><a href=\"#3-3-根据kubeadm配置文件生成新的证书\" class=\"headerlink\" title=\"3.3.根据kubeadm配置文件生成新的证书\"></a>3.3.根据kubeadm配置文件生成新的证书</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm init phase certs apiserver --config ./kubeadm-config.yaml</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-查看新生成证书中的可信地址\"><a href=\"#3-4-查看新生成证书中的可信地址\" class=\"headerlink\" title=\"3.4.查看新生成证书中的可信地址\"></a>3.4.查看新生成证书中的可信地址</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s证书目录： /etc/kubernetes/pki</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl x509 -<span class=\"keyword\">in</span> apiserver.crt -noout -text</span><br></pre></td></tr></table></figure>"},{"title":"12.centos系统安装containerd","date":"2023-03-28T08:45:03.000Z","_content":"\n# centos系统安装containerd\n\n## 1.背景\n\nKubernetes 的早期版本仅适用于特定的容器运行时：Docker Engine。 后来，Kubernetes 增加了对使用其他容器运行时的支持。创建[CRI 标准](https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/) 是为了实现编排器（如 Kubernetes）和许多不同的容器运行时之间交互操作。 Docker Engine 没有实现（CRI）接口，因此 Kubernetes 项目创建了特殊代码来帮助过渡， 并使 dockershim 代码成为 Kubernetes 的一部分。\n\ndockershim 代码一直是一个临时解决方案（因此得名：shim）。 你可以阅读 [Kubernetes 移除 Dockershim 增强方案](https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim) 以了解相关的社区讨论和计划。 事实上，维护 dockershim 已经成为 Kubernetes 维护者的沉重负担。\n\n此外，在较新的 CRI 运行时中实现了与 dockershim 不兼容的功能，例如 cgroups v2 和用户命名空间。 从 Kubernetes 中移除 dockershim 允许在这些领域进行进一步的开发。\n\nKubernetes 在 [v1.24 版](https://kubernetes.io/releases/#release-v1-24)正式移除了 dockershim。\n\n<!--more-->\n\n## 2.containerd运行时\n\n[containerd](https://github.com/containerd/containerd)作为CNCF社区毕业的运行时项目，在k8s移除dockershim的背景下，有必要了解containerd的安装和基本使用。\n\n### 2.1.containerd安装\n\n```bash\n# 1.安装依赖\n \nyum install -y yum-utils device-mapper-persistent-data lvm2\n \n# 2.添加yum源\n \nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n \n# 3.安装containerd\n \nyum install containerd -y\n \n# 4.生成配置文件\n \ncontainerd config default > /etc/containerd/config.toml\n \n# 5.替换 containerd 默认的 sand_box 镜像，编辑 /etc/containerd/config.toml\n \nsandbox_image = \"registry.aliyuncs.com/google_containers/pause:3.2\"\n \n# 6.启动服务\n \nsystemctl restart containerd && systemctl enable containerd\n```\n\n","source":"_posts/12.centos系统安装containerd.md","raw":"---\ntitle: 12.centos系统安装containerd\ndate: 2023-03-28 16:45:03\ntags:\n- k8s\n- containerd\ncategories:\n- 技术\n---\n\n# centos系统安装containerd\n\n## 1.背景\n\nKubernetes 的早期版本仅适用于特定的容器运行时：Docker Engine。 后来，Kubernetes 增加了对使用其他容器运行时的支持。创建[CRI 标准](https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/) 是为了实现编排器（如 Kubernetes）和许多不同的容器运行时之间交互操作。 Docker Engine 没有实现（CRI）接口，因此 Kubernetes 项目创建了特殊代码来帮助过渡， 并使 dockershim 代码成为 Kubernetes 的一部分。\n\ndockershim 代码一直是一个临时解决方案（因此得名：shim）。 你可以阅读 [Kubernetes 移除 Dockershim 增强方案](https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim) 以了解相关的社区讨论和计划。 事实上，维护 dockershim 已经成为 Kubernetes 维护者的沉重负担。\n\n此外，在较新的 CRI 运行时中实现了与 dockershim 不兼容的功能，例如 cgroups v2 和用户命名空间。 从 Kubernetes 中移除 dockershim 允许在这些领域进行进一步的开发。\n\nKubernetes 在 [v1.24 版](https://kubernetes.io/releases/#release-v1-24)正式移除了 dockershim。\n\n<!--more-->\n\n## 2.containerd运行时\n\n[containerd](https://github.com/containerd/containerd)作为CNCF社区毕业的运行时项目，在k8s移除dockershim的背景下，有必要了解containerd的安装和基本使用。\n\n### 2.1.containerd安装\n\n```bash\n# 1.安装依赖\n \nyum install -y yum-utils device-mapper-persistent-data lvm2\n \n# 2.添加yum源\n \nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n \n# 3.安装containerd\n \nyum install containerd -y\n \n# 4.生成配置文件\n \ncontainerd config default > /etc/containerd/config.toml\n \n# 5.替换 containerd 默认的 sand_box 镜像，编辑 /etc/containerd/config.toml\n \nsandbox_image = \"registry.aliyuncs.com/google_containers/pause:3.2\"\n \n# 6.启动服务\n \nsystemctl restart containerd && systemctl enable containerd\n```\n\n","slug":"12.centos系统安装containerd","published":1,"updated":"2023-03-28T12:17:28.843Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfsa8hnq0007r8fvc37jgqnh","content":"<h1 id=\"centos系统安装containerd\"><a href=\"#centos系统安装containerd\" class=\"headerlink\" title=\"centos系统安装containerd\"></a>centos系统安装containerd</h1><h2 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1.背景\"></a>1.背景</h2><p>Kubernetes 的早期版本仅适用于特定的容器运行时：Docker Engine。 后来，Kubernetes 增加了对使用其他容器运行时的支持。创建<a href=\"https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/\">CRI 标准</a> 是为了实现编排器（如 Kubernetes）和许多不同的容器运行时之间交互操作。 Docker Engine 没有实现（CRI）接口，因此 Kubernetes 项目创建了特殊代码来帮助过渡， 并使 dockershim 代码成为 Kubernetes 的一部分。</p>\n<p>dockershim 代码一直是一个临时解决方案（因此得名：shim）。 你可以阅读 <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim\">Kubernetes 移除 Dockershim 增强方案</a> 以了解相关的社区讨论和计划。 事实上，维护 dockershim 已经成为 Kubernetes 维护者的沉重负担。</p>\n<p>此外，在较新的 CRI 运行时中实现了与 dockershim 不兼容的功能，例如 cgroups v2 和用户命名空间。 从 Kubernetes 中移除 dockershim 允许在这些领域进行进一步的开发。</p>\n<p>Kubernetes 在 <a href=\"https://kubernetes.io/releases/#release-v1-24\">v1.24 版</a>正式移除了 dockershim。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"2-containerd运行时\"><a href=\"#2-containerd运行时\" class=\"headerlink\" title=\"2.containerd运行时\"></a>2.containerd运行时</h2><p><a href=\"https://github.com/containerd/containerd\">containerd</a>作为CNCF社区毕业的运行时项目，在k8s移除dockershim的背景下，有必要了解containerd的安装和基本使用。</p>\n<h3 id=\"2-1-containerd安装\"><a href=\"#2-1-containerd安装\" class=\"headerlink\" title=\"2.1.containerd安装\"></a>2.1.containerd安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.安装依赖</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 2.添加yum源</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 3.安装containerd</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum install containerd -y</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 4.生成配置文件</span></span><br><span class=\"line\"> </span><br><span class=\"line\">containerd config default &gt; /etc/containerd/config.toml</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 5.替换 containerd 默认的 sand_box 镜像，编辑 /etc/containerd/config.toml</span></span><br><span class=\"line\"> </span><br><span class=\"line\">sandbox_image = <span class=\"string\">&quot;registry.aliyuncs.com/google_containers/pause:3.2&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 6.启动服务</span></span><br><span class=\"line\"> </span><br><span class=\"line\">systemctl restart containerd &amp;&amp; systemctl <span class=\"built_in\">enable</span> containerd</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h1 id=\"centos系统安装containerd\"><a href=\"#centos系统安装containerd\" class=\"headerlink\" title=\"centos系统安装containerd\"></a>centos系统安装containerd</h1><h2 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1.背景\"></a>1.背景</h2><p>Kubernetes 的早期版本仅适用于特定的容器运行时：Docker Engine。 后来，Kubernetes 增加了对使用其他容器运行时的支持。创建<a href=\"https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/\">CRI 标准</a> 是为了实现编排器（如 Kubernetes）和许多不同的容器运行时之间交互操作。 Docker Engine 没有实现（CRI）接口，因此 Kubernetes 项目创建了特殊代码来帮助过渡， 并使 dockershim 代码成为 Kubernetes 的一部分。</p>\n<p>dockershim 代码一直是一个临时解决方案（因此得名：shim）。 你可以阅读 <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim\">Kubernetes 移除 Dockershim 增强方案</a> 以了解相关的社区讨论和计划。 事实上，维护 dockershim 已经成为 Kubernetes 维护者的沉重负担。</p>\n<p>此外，在较新的 CRI 运行时中实现了与 dockershim 不兼容的功能，例如 cgroups v2 和用户命名空间。 从 Kubernetes 中移除 dockershim 允许在这些领域进行进一步的开发。</p>\n<p>Kubernetes 在 <a href=\"https://kubernetes.io/releases/#release-v1-24\">v1.24 版</a>正式移除了 dockershim。</p>","more":"<h2 id=\"2-containerd运行时\"><a href=\"#2-containerd运行时\" class=\"headerlink\" title=\"2.containerd运行时\"></a>2.containerd运行时</h2><p><a href=\"https://github.com/containerd/containerd\">containerd</a>作为CNCF社区毕业的运行时项目，在k8s移除dockershim的背景下，有必要了解containerd的安装和基本使用。</p>\n<h3 id=\"2-1-containerd安装\"><a href=\"#2-1-containerd安装\" class=\"headerlink\" title=\"2.1.containerd安装\"></a>2.1.containerd安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.安装依赖</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 2.添加yum源</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 3.安装containerd</span></span><br><span class=\"line\"> </span><br><span class=\"line\">yum install containerd -y</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 4.生成配置文件</span></span><br><span class=\"line\"> </span><br><span class=\"line\">containerd config default &gt; /etc/containerd/config.toml</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 5.替换 containerd 默认的 sand_box 镜像，编辑 /etc/containerd/config.toml</span></span><br><span class=\"line\"> </span><br><span class=\"line\">sandbox_image = <span class=\"string\">&quot;registry.aliyuncs.com/google_containers/pause:3.2&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 6.启动服务</span></span><br><span class=\"line\"> </span><br><span class=\"line\">systemctl restart containerd &amp;&amp; systemctl <span class=\"built_in\">enable</span> containerd</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"clfrxyv1a00002cfvefvthas5","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfrxyv1i00062cfv8gnu7iuw"},{"post_id":"clfrxyv1e00012cfvb2xo5erf","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfrxyv1m000b2cfv7ipteem6"},{"post_id":"clfrxyv1h00052cfvhpa12jco","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfrxyv1o000g2cfv7bhz5ynt"},{"post_id":"clfrxyv1k00092cfvf8mmci4r","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfrxyv1p000j2cfv9zo59d6o"},{"post_id":"clfrxyv1m000d2cfvcex77kyj","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfrxyv1q000m2cfvhok4ee14"},{"post_id":"clfrxyv1g00032cfv0jcyhsbs","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfrxyv1r000q2cfvdah7dblo"},{"post_id":"clfrxyv1g00032cfv0jcyhsbs","category_id":"clfrxyv1l000a2cfv697528db","_id":"clfrxyv1s000s2cfv3tp45jw3"},{"post_id":"clfrxyv1n000f2cfv8rfabzaf","category_id":"cle6jms9w000xh8fv9r850i5b","_id":"clfrxyv1s000v2cfvbs5u4pmi"},{"post_id":"clfrxyv1n000f2cfv8rfabzaf","category_id":"cle6jms9w0010h8fv67t5gmub","_id":"clfrxyv1s000x2cfv1wx9f2n2"},{"post_id":"clfrxyv1p000i2cfva06n11hs","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfrxyv1s000z2cfv1wx1b77v"},{"post_id":"clfrxyv1q000l2cfv3zw93eds","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfrxyv1t00122cfv1hh17umh"},{"post_id":"clfrxyv1r000p2cfvg4w0a3hx","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfrxyv1t00142cfv9my87usu"},{"post_id":"clfrxyv1r000p2cfvg4w0a3hx","category_id":"clfrxyv1l000a2cfv697528db","_id":"clfrxyv1t00172cfvc28x8aqy"},{"post_id":"clfsa8hn00000r8fvag6gfltd","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfsa8hn80003r8fv0k842mrf"},{"post_id":"clfsa8hnq0007r8fvc37jgqnh","category_id":"cle6jms9k0004h8fv3qhf7ggs","_id":"clfsa8ho00009r8fvclchb7z0"}],"PostTag":[{"post_id":"clfrxyv1a00002cfvefvthas5","tag_id":"cle6jms9s000lh8fvdfpx9x90","_id":"clfrxyv1g00022cfv12dv8uo8"},{"post_id":"clfrxyv1e00012cfvb2xo5erf","tag_id":"cle6jms9r000dh8fvenp6e9af","_id":"clfrxyv1h00042cfv3fihclas"},{"post_id":"clfrxyv1e00012cfvb2xo5erf","tag_id":"cle6jms9r000ih8fv5ww50y11","_id":"clfrxyv1k00082cfv5n4d1k1x"},{"post_id":"clfrxyv1e00012cfvb2xo5erf","tag_id":"cle6jms9s000kh8fv7hmv9wep","_id":"clfrxyv1m000c2cfvhqgb3bd6"},{"post_id":"clfrxyv1h00052cfvhpa12jco","tag_id":"cle6jms9r000dh8fvenp6e9af","_id":"clfrxyv1n000e2cfv3vwd5eew"},{"post_id":"clfrxyv1h00052cfvhpa12jco","tag_id":"cle6jms9r000ih8fv5ww50y11","_id":"clfrxyv1p000h2cfv0lr706ni"},{"post_id":"clfrxyv1h00052cfvhpa12jco","tag_id":"cle6jms9s000kh8fv7hmv9wep","_id":"clfrxyv1p000k2cfv9ippe5ee"},{"post_id":"clfrxyv1k00092cfvf8mmci4r","tag_id":"cle6jms9l0005h8fvga5z83rf","_id":"clfrxyv1r000o2cfv7h7xb2tw"},{"post_id":"clfrxyv1k00092cfvf8mmci4r","tag_id":"cle6jms9p000ah8fvea2t39qv","_id":"clfrxyv1s000r2cfv02nh1zjs"},{"post_id":"clfrxyv1m000d2cfvcex77kyj","tag_id":"clejy65k40001ksfv16ii9ls9","_id":"clfrxyv1s000t2cfv1y66dupp"},{"post_id":"clfrxyv1m000d2cfvcex77kyj","tag_id":"clejy65k60003ksfvajj81hef","_id":"clfrxyv1s000w2cfv40162mok"},{"post_id":"clfrxyv1g00032cfv0jcyhsbs","tag_id":"clfrxyv1i00072cfv7hdf3a5z","_id":"clfrxyv1s000y2cfvb474c8ez"},{"post_id":"clfrxyv1g00032cfv0jcyhsbs","tag_id":"clejy65k40001ksfv16ii9ls9","_id":"clfrxyv1t00112cfv56ac2h5r"},{"post_id":"clfrxyv1n000f2cfv8rfabzaf","tag_id":"cle6jms9w000yh8fvhsqgbsma","_id":"clfrxyv1t00132cfvh7bk5y32"},{"post_id":"clfrxyv1n000f2cfv8rfabzaf","tag_id":"cle6jms9w000zh8fv9gatewbe","_id":"clfrxyv1t00162cfv24yz2mhg"},{"post_id":"clfrxyv1n000f2cfv8rfabzaf","tag_id":"cle6jms9x0011h8fvegdz0ce6","_id":"clfrxyv1u00182cfvhssk6a7b"},{"post_id":"clfrxyv1p000i2cfva06n11hs","tag_id":"clfrxyv1r000n2cfv7rhc1xfy","_id":"clfrxyv1u001a2cfv5eag02p0"},{"post_id":"clfrxyv1p000i2cfva06n11hs","tag_id":"clfrxyv1s000u2cfvfh7bfbne","_id":"clfrxyv1v001b2cfv1gr88s13"},{"post_id":"clfrxyv1q000l2cfv3zw93eds","tag_id":"clfrxyv1t00102cfvgg597io3","_id":"clfrxyv1v001c2cfv4rnz13km"},{"post_id":"clfrxyv1q000l2cfv3zw93eds","tag_id":"clejy65k40001ksfv16ii9ls9","_id":"clfrxyv1v001d2cfvb0jvhk6t"},{"post_id":"clfrxyv1r000p2cfvg4w0a3hx","tag_id":"clfrxyv1t00152cfvd43ba18r","_id":"clfrxyv1v001e2cfvgqny0qy9"},{"post_id":"clfrxyv1r000p2cfvg4w0a3hx","tag_id":"clejy65k40001ksfv16ii9ls9","_id":"clfrxyv1v001f2cfv2icedoi7"},{"post_id":"clfrxyv1r000p2cfvg4w0a3hx","tag_id":"clfrxyv1s000u2cfvfh7bfbne","_id":"clfrxyv1v001g2cfv2l6l6n1k"},{"post_id":"clfsa8hn00000r8fvag6gfltd","tag_id":"clfsa8hn30002r8fv4qty8phz","_id":"clfsa8hn90005r8fv50dh96d3"},{"post_id":"clfsa8hn00000r8fvag6gfltd","tag_id":"clfsa8hn80004r8fvaqaz9632","_id":"clfsa8hn90006r8fvbu98gqf5"},{"post_id":"clfsa8hnq0007r8fvc37jgqnh","tag_id":"clfsa8hn30002r8fv4qty8phz","_id":"clfsa8ho1000ar8fv3vpudz07"},{"post_id":"clfsa8hnq0007r8fvc37jgqnh","tag_id":"clfsa8hnz0008r8fvhtfq2u6v","_id":"clfsa8ho2000br8fverfm6stu"}],"Tag":[{"name":"rsa","_id":"cle6jms9l0005h8fvga5z83rf"},{"name":"算法积累","_id":"cle6jms9p000ah8fvea2t39qv"},{"name":"hexo","_id":"cle6jms9r000dh8fvenp6e9af"},{"name":"next","_id":"cle6jms9r000ih8fv5ww50y11"},{"name":"博客","_id":"cle6jms9s000kh8fv7hmv9wep"},{"name":"开始","_id":"cle6jms9s000lh8fvdfpx9x90"},{"name":"nodejs","_id":"cle6jms9w000yh8fvhsqgbsma"},{"name":"nvm","_id":"cle6jms9w000zh8fv9gatewbe"},{"name":"版本管理","_id":"cle6jms9x0011h8fvegdz0ce6"},{"name":"go","_id":"clejy65k40001ksfv16ii9ls9"},{"name":"build","_id":"clejy65k60003ksfvajj81hef"},{"name":"背包问题","_id":"clfrxyv1i00072cfv7hdf3a5z"},{"name":"背包九讲","_id":"clfrxyv1r000n2cfv7rhc1xfy"},{"name":"算法","_id":"clfrxyv1s000u2cfvfh7bfbne"},{"name":"01背包问题","_id":"clfrxyv1t00102cfvgg597io3"},{"name":"完全背包","_id":"clfrxyv1t00152cfvd43ba18r"},{"name":"k8s","_id":"clfsa8hn30002r8fv4qty8phz"},{"name":"kubeadm","_id":"clfsa8hn80004r8fvaqaz9632"},{"name":"containerd","_id":"clfsa8hnz0008r8fvhtfq2u6v"}]}}